#!/usr/bin/env python

def options(opt):
	return

def configure(conf):
	conf.env.append_unique('DEFINES', ['MATCHMAKING_DLL', 'NO_STRING_T', 'VECTOR', 'NO_STEAM_GAMECOORDINATOR'])
	if conf.env.DEST_OS == 'win32':
		conf.env.append_unique('DEFINES', ['strncpy=use_Q_strncpy_instead', '_snprintf=use_Q_snprintf_instead'])
	if conf.env.DEDICATED:
		conf.env.append_unique('DEFINES', ['MATCHMAKING_DS_DLL', 'SWDS'])

def build(bld):
	source = [
		'matchmakingqos.cpp',
		'mm_events.cpp',
		'mm_extensions.cpp',
		'mm_framework.cpp',
		'mm_netmsgcontroller.cpp',
		'mm_voice.cpp',
		'mm_netmgr.cpp',
		'sys_session.cpp',
		'steam_apihook.cpp',
		'steam_datacenterjobs.cpp',
		'x360_xlsp_cmd.cpp',
		'datacenter.cpp',
		'mm_dlc.cpp',
		'matchsystem.cpp',
		'playermanager.cpp',
		'servermanager.cpp',
		'playerrankingdata.cpp',
		'extkeyvalues.cpp',
		'../public/filesystem_helpers.cpp',
		'main.cpp',
		'cstrike15/mm_title.cpp',
		'cstrike15/mm_title_gamesettingsmgr.cpp',
		'cstrike15/mm_title_main.cpp',
		'cstrike15/mm_title_richpresence.cpp',
		'cstrike15/mm_title_titledata.cpp',
		'../game/shared/cstrike15/gametypes.cpp',
		'../common/platforminputdevice.cpp',
		'../public/tier0/memoverride.cpp'
	]

	if not bld.env.DEDICATED:
		source += [
			'mm_session.cpp',
			'ds_searcher.cpp',
			'match_searcher.cpp',
			'mm_session_offline_custom.cpp',
			'mm_session_online_client.cpp',
			'mm_session_online_host.cpp',
			'mm_session_online_search.cpp',
			'mm_session_online_teamsearch.cpp',
			'leaderboards.cpp',
			'player.cpp',
			'searchmanager.cpp',
			'steam_lobbyapi.cpp'
		]

	includes = [
		'../public',
		'../public/tier0',
		'../public/tier1',
		'../common',
		'../common/xlast_csgo',
		'../game/shared',
		'../gcsdk/steamextra',
		'../thirdparty/protobuf-3.2.0/src'
	]

	libs = [
		'tier0',
		'tier1',
		'tier2',
		'interfaces',
		'vstdlib',
		'mathlib',
		'generated_proto',
		'protobuf',
		'gcsdk',
		'steam_api'
	]

	bld.shlib(
		target = 'matchmaking',
		features = 'c cxx',
		source = source,
		includes = includes,
		use = libs,
		install_path = bld.env.LIBDIR,
		subsystem = bld.env.MSVC_SUBSYSTEM
	)
