#!/usr/bin/env python

def options(opt):
	return

def configure(conf):
	return

def build(bld):
	source = [
		'Bitmap.cpp',
		'Border.cpp',
		'ScalableImageBorder.cpp',
		'ImageBorder.cpp',
		'fileimage.cpp',
		'../../public/filesystem_helpers.cpp',
		'../../public/filesystem_init.cpp',
		'MemoryBitmap.cpp',
		'MessageListener.cpp',
		'Scheme.cpp',
		'../../public/UnicodeFileHelpers.cpp',
		'vgui.cpp',
		'vgui_internal.cpp',
		'vgui_key_translation.cpp',
		'VPanel.cpp',
		'VPanelWrapper.cpp',
		'keyrepeat.cpp',
		'../../public/tier0/memoverride.cpp'
	]

	if bld.env.DEST_OS == 'win32':
		source += [
			'htmlwindow.cpp',
			'Surface.cpp',
			'System.cpp'
		]
	else:
		source += ['system_posix.cpp']

	if bld.env.DEST_OS == 'darwin':
		source += ['inputosx.cpp']
	else:
		source += ['InputWin32.cpp']

	includes = [
		'../../public',
		'../../public/tier0',
		'../../public/tier1',
		'../../common'
	]

	libs = [
		'tier0',
		'vgui_surfacelib',
		'tier1',
		'tier2',
		'tier3',
		'interfaces',
		'vstdlib'
	]

	if bld.env.SDL:
		libs += ['SDL2']

	bld.shlib(
		target = 'vgui2',
		features = 'c cxx',
		source = source,
		includes = includes,
		use = libs,
		install_path = bld.env.LIBDIR,
		subsystem = bld.env.MSVC_SUBSYSTEM
	)
