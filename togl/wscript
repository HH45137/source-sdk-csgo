#!/usr/bin/env python

def options(opt):
	return

def configure(conf):
	conf.env.append_unique('DEFINES', ['TOGL_DLL_EXPORT'])
	if conf.env.DEST_OS == 'win32':
		conf.env.append_unique('DEFINES', ['strncpy=use_Q_strncpy_instead', '_snprintf=use_Q_snprintf_instead'])

def build(bld):
	source = [
		'dx9asmtogl2.cpp',
		'dxabstract.cpp',
		'glentrypoints.cpp',	
		'glmgr.cpp',			
		'glmgrbasics.cpp',	
		'cglmtex.cpp',		
		'cglmfbo.cpp',		
		'cglmprogram.cpp',	
		'cglmbuffer.cpp',	
		'cglmquery.cpp',
		'../public/tier0/memoverride.cpp'
	]

	if bld.env.DEST_OS == 'win32':
		source += [
			'glmgrcocoa.mm',
			'intelglmallocworkaround.cpp',
			'mach_override.c'
		]

	includes = []

	libs = [
		'tier0',
		'tier1',
		'tier2',
		'interfaces',
		'vstdlib',
		'mathlib'
	]

	bld.shlib(
		target = 'togl',
		features = 'c cxx',
		source = source,
		includes = includes,
		use = libs,
		install_path = bld.env.LIBDIR,
		subsystem = bld.env.MSVC_SUBSYSTEM
	)
