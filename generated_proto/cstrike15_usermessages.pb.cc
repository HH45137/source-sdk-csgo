// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cstrike15_usermessages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cstrike15_usermessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class CCSUsrMsg_VGUIMenu_SubkeyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_VGUIMenu_Subkey> {
} _CCSUsrMsg_VGUIMenu_Subkey_default_instance_;
class CCSUsrMsg_VGUIMenuDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_VGUIMenu> {
} _CCSUsrMsg_VGUIMenu_default_instance_;
class CCSUsrMsg_GeigerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_Geiger> {
} _CCSUsrMsg_Geiger_default_instance_;
class CCSUsrMsg_TrainDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_Train> {
} _CCSUsrMsg_Train_default_instance_;
class CCSUsrMsg_HudTextDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_HudText> {
} _CCSUsrMsg_HudText_default_instance_;
class CCSUsrMsg_SayTextDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_SayText> {
} _CCSUsrMsg_SayText_default_instance_;
class CCSUsrMsg_SayText2DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_SayText2> {
} _CCSUsrMsg_SayText2_default_instance_;
class CCSUsrMsg_TextMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_TextMsg> {
} _CCSUsrMsg_TextMsg_default_instance_;
class CCSUsrMsg_HudMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_HudMsg> {
} _CCSUsrMsg_HudMsg_default_instance_;
class CCSUsrMsg_ShakeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_Shake> {
} _CCSUsrMsg_Shake_default_instance_;
class CCSUsrMsg_FadeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_Fade> {
} _CCSUsrMsg_Fade_default_instance_;
class CCSUsrMsg_RumbleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_Rumble> {
} _CCSUsrMsg_Rumble_default_instance_;
class CCSUsrMsg_CloseCaptionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_CloseCaption> {
} _CCSUsrMsg_CloseCaption_default_instance_;
class CCSUsrMsg_CloseCaptionDirectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_CloseCaptionDirect> {
} _CCSUsrMsg_CloseCaptionDirect_default_instance_;
class CCSUsrMsg_SendAudioDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_SendAudio> {
} _CCSUsrMsg_SendAudio_default_instance_;
class CCSUsrMsg_RawAudioDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_RawAudio> {
} _CCSUsrMsg_RawAudio_default_instance_;
class CCSUsrMsg_VoiceMask_PlayerMaskDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_VoiceMask_PlayerMask> {
} _CCSUsrMsg_VoiceMask_PlayerMask_default_instance_;
class CCSUsrMsg_VoiceMaskDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_VoiceMask> {
} _CCSUsrMsg_VoiceMask_default_instance_;
class CCSUsrMsg_DamageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_Damage> {
} _CCSUsrMsg_Damage_default_instance_;
class CCSUsrMsg_RadioTextDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_RadioText> {
} _CCSUsrMsg_RadioText_default_instance_;
class CCSUsrMsg_HintTextDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_HintText> {
} _CCSUsrMsg_HintText_default_instance_;
class CCSUsrMsg_KeyHintTextDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_KeyHintText> {
} _CCSUsrMsg_KeyHintText_default_instance_;
class CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate> {
} _CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate_default_instance_;
class CCSUsrMsg_ProcessSpottedEntityUpdateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ProcessSpottedEntityUpdate> {
} _CCSUsrMsg_ProcessSpottedEntityUpdate_default_instance_;
class CCSUsrMsg_SendPlayerItemDropsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_SendPlayerItemDrops> {
} _CCSUsrMsg_SendPlayerItemDrops_default_instance_;
class CCSUsrMsg_SendPlayerItemFoundDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_SendPlayerItemFound> {
} _CCSUsrMsg_SendPlayerItemFound_default_instance_;
class CCSUsrMsg_ReloadEffectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ReloadEffect> {
} _CCSUsrMsg_ReloadEffect_default_instance_;
class CCSUsrMsg_AdjustMoneyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_AdjustMoney> {
} _CCSUsrMsg_AdjustMoney_default_instance_;
class CCSUsrMsg_ReportHitDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ReportHit> {
} _CCSUsrMsg_ReportHit_default_instance_;
class CCSUsrMsg_KillCamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_KillCam> {
} _CCSUsrMsg_KillCam_default_instance_;
class CCSUsrMsg_DesiredTimescaleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_DesiredTimescale> {
} _CCSUsrMsg_DesiredTimescale_default_instance_;
class CCSUsrMsg_CurrentTimescaleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_CurrentTimescale> {
} _CCSUsrMsg_CurrentTimescale_default_instance_;
class CCSUsrMsg_AchievementEventDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_AchievementEvent> {
} _CCSUsrMsg_AchievementEvent_default_instance_;
class CCSUsrMsg_MatchEndConditionsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_MatchEndConditions> {
} _CCSUsrMsg_MatchEndConditions_default_instance_;
class CCSUsrMsg_PlayerStatsUpdate_StatDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_PlayerStatsUpdate_Stat> {
} _CCSUsrMsg_PlayerStatsUpdate_Stat_default_instance_;
class CCSUsrMsg_PlayerStatsUpdateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_PlayerStatsUpdate> {
} _CCSUsrMsg_PlayerStatsUpdate_default_instance_;
class CCSUsrMsg_DisplayInventoryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_DisplayInventory> {
} _CCSUsrMsg_DisplayInventory_default_instance_;
class CCSUsrMsg_QuestProgressDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_QuestProgress> {
} _CCSUsrMsg_QuestProgress_default_instance_;
class CCSUsrMsg_ScoreLeaderboardDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ScoreLeaderboardData> {
} _CCSUsrMsg_ScoreLeaderboardData_default_instance_;
class CCSUsrMsg_PlayerDecalDigitalSignatureDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_PlayerDecalDigitalSignature> {
} _CCSUsrMsg_PlayerDecalDigitalSignature_default_instance_;
class CCSUsrMsg_XRankGetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_XRankGet> {
} _CCSUsrMsg_XRankGet_default_instance_;
class CCSUsrMsg_XRankUpdDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_XRankUpd> {
} _CCSUsrMsg_XRankUpd_default_instance_;
class CCSUsrMsg_CallVoteFailedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_CallVoteFailed> {
} _CCSUsrMsg_CallVoteFailed_default_instance_;
class CCSUsrMsg_VoteStartDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_VoteStart> {
} _CCSUsrMsg_VoteStart_default_instance_;
class CCSUsrMsg_VotePassDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_VotePass> {
} _CCSUsrMsg_VotePass_default_instance_;
class CCSUsrMsg_VoteFailedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_VoteFailed> {
} _CCSUsrMsg_VoteFailed_default_instance_;
class CCSUsrMsg_VoteSetupDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_VoteSetup> {
} _CCSUsrMsg_VoteSetup_default_instance_;
class CCSUsrMsg_SendLastKillerDamageToClientDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_SendLastKillerDamageToClient> {
} _CCSUsrMsg_SendLastKillerDamageToClient_default_instance_;
class CCSUsrMsg_ServerRankUpdate_RankUpdateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ServerRankUpdate_RankUpdate> {
} _CCSUsrMsg_ServerRankUpdate_RankUpdate_default_instance_;
class CCSUsrMsg_ServerRankUpdateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ServerRankUpdate> {
} _CCSUsrMsg_ServerRankUpdate_default_instance_;
class CCSUsrMsg_XpUpdateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_XpUpdate> {
} _CCSUsrMsg_XpUpdate_default_instance_;
class CCSUsrMsg_ItemPickupDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ItemPickup> {
} _CCSUsrMsg_ItemPickup_default_instance_;
class CCSUsrMsg_ShowMenuDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ShowMenu> {
} _CCSUsrMsg_ShowMenu_default_instance_;
class CCSUsrMsg_BarTimeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_BarTime> {
} _CCSUsrMsg_BarTime_default_instance_;
class CCSUsrMsg_AmmoDeniedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_AmmoDenied> {
} _CCSUsrMsg_AmmoDenied_default_instance_;
class CCSUsrMsg_MarkAchievementDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_MarkAchievement> {
} _CCSUsrMsg_MarkAchievement_default_instance_;
class CCSUsrMsg_MatchStatsUpdateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_MatchStatsUpdate> {
} _CCSUsrMsg_MatchStatsUpdate_default_instance_;
class CCSUsrMsg_ItemDropDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ItemDrop> {
} _CCSUsrMsg_ItemDrop_default_instance_;
class CCSUsrMsg_GlowPropTurnOffDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_GlowPropTurnOff> {
} _CCSUsrMsg_GlowPropTurnOff_default_instance_;
class CCSUsrMsg_RoundBackupFilenamesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_RoundBackupFilenames> {
} _CCSUsrMsg_RoundBackupFilenames_default_instance_;
class CCSUsrMsg_ResetHudDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ResetHud> {
} _CCSUsrMsg_ResetHud_default_instance_;
class CCSUsrMsg_GameTitleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_GameTitle> {
} _CCSUsrMsg_GameTitle_default_instance_;
class CCSUsrMsg_RequestStateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_RequestState> {
} _CCSUsrMsg_RequestState_default_instance_;
class CCSUsrMsg_StopSpectatorModeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_StopSpectatorMode> {
} _CCSUsrMsg_StopSpectatorMode_default_instance_;
class CCSUsrMsg_DisconnectToLobbyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_DisconnectToLobby> {
} _CCSUsrMsg_DisconnectToLobby_default_instance_;
class CCSUsrMsg_WarmupHasEndedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_WarmupHasEnded> {
} _CCSUsrMsg_WarmupHasEnded_default_instance_;
class CCSUsrMsg_ClientInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ClientInfo> {
} _CCSUsrMsg_ClientInfo_default_instance_;
class CCSUsrMsg_ServerRankRevealAllDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ServerRankRevealAll> {
} _CCSUsrMsg_ServerRankRevealAll_default_instance_;

namespace protobuf_cstrike15_5fusermessages_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[68];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VGUIMenu_Subkey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VGUIMenu_Subkey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VGUIMenu_Subkey, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VGUIMenu_Subkey, str_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VGUIMenu, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VGUIMenu, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VGUIMenu, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VGUIMenu, show_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VGUIMenu, subkeys_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Geiger, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Geiger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Geiger, range_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Train, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Train, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Train, train_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_HudText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_HudText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_HudText, text_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SayText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SayText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SayText, ent_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SayText, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SayText, chat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SayText, textallchat_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SayText2, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SayText2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SayText2, ent_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SayText2, chat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SayText2, msg_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SayText2, params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SayText2, textallchat_),
  1,
  2,
  0,
  ~0u,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_TextMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_TextMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_TextMsg, msg_dst_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_TextMsg, params_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_HudMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_HudMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_HudMsg, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_HudMsg, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_HudMsg, clr1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_HudMsg, clr2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_HudMsg, effect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_HudMsg, fade_in_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_HudMsg, fade_out_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_HudMsg, hold_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_HudMsg, fx_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_HudMsg, text_),
  4,
  1,
  2,
  3,
  5,
  6,
  7,
  8,
  9,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Shake, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Shake, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Shake, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Shake, local_amplitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Shake, frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Shake, duration_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Fade, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Fade, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Fade, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Fade, hold_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Fade, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Fade, clr_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Rumble, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Rumble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Rumble, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Rumble, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Rumble, flags_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_CloseCaption, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_CloseCaption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_CloseCaption, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_CloseCaption, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_CloseCaption, from_player_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_CloseCaptionDirect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_CloseCaptionDirect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_CloseCaptionDirect, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_CloseCaptionDirect, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_CloseCaptionDirect, from_player_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SendAudio, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SendAudio, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SendAudio, radio_sound_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RawAudio, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RawAudio, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RawAudio, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RawAudio, entidx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RawAudio, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RawAudio, voice_filename_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoiceMask_PlayerMask, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoiceMask_PlayerMask, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoiceMask_PlayerMask, game_rules_mask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoiceMask_PlayerMask, ban_masks_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoiceMask, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoiceMask, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoiceMask, player_masks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoiceMask, player_mod_enable_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Damage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Damage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Damage, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Damage, inflictor_world_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_Damage, victim_entindex_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RadioText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RadioText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RadioText, msg_dst_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RadioText, client_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RadioText, msg_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RadioText, params_),
  1,
  2,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_HintText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_HintText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_HintText, text_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_KeyHintText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_KeyHintText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_KeyHintText, hints_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, entity_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, class_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, origin_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, origin_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, origin_z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, angle_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, defuser_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, player_has_defuser_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, player_has_c4_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ProcessSpottedEntityUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ProcessSpottedEntityUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ProcessSpottedEntityUpdate, new_update_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ProcessSpottedEntityUpdate, entity_updates_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SendPlayerItemDrops, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SendPlayerItemDrops, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SendPlayerItemDrops, entity_updates_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SendPlayerItemFound, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SendPlayerItemFound, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SendPlayerItemFound, iteminfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SendPlayerItemFound, entindex_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ReloadEffect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ReloadEffect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ReloadEffect, entidx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ReloadEffect, actanim_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ReloadEffect, origin_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ReloadEffect, origin_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ReloadEffect, origin_z_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_AdjustMoney, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_AdjustMoney, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_AdjustMoney, amount_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ReportHit, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ReportHit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ReportHit, pos_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ReportHit, pos_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ReportHit, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ReportHit, pos_z_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_KillCam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_KillCam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_KillCam, obs_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_KillCam, first_target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_KillCam, second_target_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_DesiredTimescale, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_DesiredTimescale, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_DesiredTimescale, desired_timescale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_DesiredTimescale, duration_realtime_sec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_DesiredTimescale, interpolator_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_DesiredTimescale, start_blend_time_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_CurrentTimescale, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_CurrentTimescale, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_CurrentTimescale, cur_timescale_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_AchievementEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_AchievementEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_AchievementEvent, achievement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_AchievementEvent, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_AchievementEvent, user_id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_MatchEndConditions, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_MatchEndConditions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_MatchEndConditions, fraglimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_MatchEndConditions, mp_maxrounds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_MatchEndConditions, mp_winlimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_MatchEndConditions, mp_timelimit_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_PlayerStatsUpdate_Stat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_PlayerStatsUpdate_Stat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_PlayerStatsUpdate_Stat, idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_PlayerStatsUpdate_Stat, delta_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_PlayerStatsUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_PlayerStatsUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_PlayerStatsUpdate, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_PlayerStatsUpdate, stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_PlayerStatsUpdate, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_PlayerStatsUpdate, crc_),
  0,
  ~0u,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_DisplayInventory, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_DisplayInventory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_DisplayInventory, display_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_DisplayInventory, user_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_QuestProgress, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_QuestProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_QuestProgress, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_QuestProgress, normal_points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_QuestProgress, bonus_points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_QuestProgress, is_event_quest_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ScoreLeaderboardData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ScoreLeaderboardData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ScoreLeaderboardData, data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_PlayerDecalDigitalSignature, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_PlayerDecalDigitalSignature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_PlayerDecalDigitalSignature, data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_XRankGet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_XRankGet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_XRankGet, mode_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_XRankGet, controller_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_XRankUpd, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_XRankUpd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_XRankUpd, mode_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_XRankUpd, controller_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_XRankUpd, ranking_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_CallVoteFailed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_CallVoteFailed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_CallVoteFailed, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_CallVoteFailed, time_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoteStart, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoteStart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoteStart, team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoteStart, ent_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoteStart, vote_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoteStart, disp_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoteStart, details_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoteStart, other_team_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoteStart, is_yes_no_vote_),
  3,
  4,
  5,
  0,
  1,
  2,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VotePass, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VotePass, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VotePass, team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VotePass, vote_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VotePass, disp_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VotePass, details_str_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoteFailed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoteFailed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoteFailed, team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoteFailed, reason_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoteSetup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoteSetup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_VoteSetup, potential_issues_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SendLastKillerDamageToClient, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SendLastKillerDamageToClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SendLastKillerDamageToClient, num_hits_given_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SendLastKillerDamageToClient, damage_given_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SendLastKillerDamageToClient, num_hits_taken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_SendLastKillerDamageToClient, damage_taken_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ServerRankUpdate_RankUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ServerRankUpdate_RankUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ServerRankUpdate_RankUpdate, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ServerRankUpdate_RankUpdate, rank_old_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ServerRankUpdate_RankUpdate, rank_new_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ServerRankUpdate_RankUpdate, num_wins_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ServerRankUpdate_RankUpdate, rank_change_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ServerRankUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ServerRankUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ServerRankUpdate, rank_update_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_XpUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_XpUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_XpUpdate, data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ItemPickup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ItemPickup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ItemPickup, item_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ShowMenu, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ShowMenu, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ShowMenu, bits_valid_slots_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ShowMenu, display_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ShowMenu, menu_string_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_BarTime, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_BarTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_BarTime, time_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_AmmoDenied, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_AmmoDenied, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_AmmoDenied, ammoidx_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_MarkAchievement, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_MarkAchievement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_MarkAchievement, achievement_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_MatchStatsUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_MatchStatsUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_MatchStatsUpdate, update_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ItemDrop, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ItemDrop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ItemDrop, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ItemDrop, death_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_GlowPropTurnOff, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_GlowPropTurnOff, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_GlowPropTurnOff, entidx_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RoundBackupFilenames, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RoundBackupFilenames, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RoundBackupFilenames, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RoundBackupFilenames, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RoundBackupFilenames, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RoundBackupFilenames, nicename_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ResetHud, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ResetHud, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ResetHud, reset_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_GameTitle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_GameTitle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_GameTitle, dummy_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RequestState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RequestState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_RequestState, dummy_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_StopSpectatorMode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_StopSpectatorMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_StopSpectatorMode, dummy_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_DisconnectToLobby, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_DisconnectToLobby, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_DisconnectToLobby, dummy_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_WarmupHasEnded, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_WarmupHasEnded, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_WarmupHasEnded, dummy_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ClientInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ClientInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ClientInfo, dummy_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ServerRankRevealAll, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ServerRankRevealAll, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCSUsrMsg_ServerRankRevealAll, seconds_till_shutdown_),
  0,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 6, sizeof(CCSUsrMsg_VGUIMenu_Subkey)},
  { 8, 15, sizeof(CCSUsrMsg_VGUIMenu)},
  { 18, 23, sizeof(CCSUsrMsg_Geiger)},
  { 24, 29, sizeof(CCSUsrMsg_Train)},
  { 30, 35, sizeof(CCSUsrMsg_HudText)},
  { 36, 44, sizeof(CCSUsrMsg_SayText)},
  { 48, 57, sizeof(CCSUsrMsg_SayText2)},
  { 62, 68, sizeof(CCSUsrMsg_TextMsg)},
  { 70, 84, sizeof(CCSUsrMsg_HudMsg)},
  { 94, 102, sizeof(CCSUsrMsg_Shake)},
  { 106, 114, sizeof(CCSUsrMsg_Fade)},
  { 118, 125, sizeof(CCSUsrMsg_Rumble)},
  { 128, 135, sizeof(CCSUsrMsg_CloseCaption)},
  { 138, 145, sizeof(CCSUsrMsg_CloseCaptionDirect)},
  { 148, 153, sizeof(CCSUsrMsg_SendAudio)},
  { 154, 162, sizeof(CCSUsrMsg_RawAudio)},
  { 166, 172, sizeof(CCSUsrMsg_VoiceMask_PlayerMask)},
  { 174, 180, sizeof(CCSUsrMsg_VoiceMask)},
  { 182, 189, sizeof(CCSUsrMsg_Damage)},
  { 192, 200, sizeof(CCSUsrMsg_RadioText)},
  { 204, 209, sizeof(CCSUsrMsg_HintText)},
  { 210, 215, sizeof(CCSUsrMsg_KeyHintText)},
  { 216, 229, sizeof(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate)},
  { 238, 244, sizeof(CCSUsrMsg_ProcessSpottedEntityUpdate)},
  { 246, 251, sizeof(CCSUsrMsg_SendPlayerItemDrops)},
  { 252, 258, sizeof(CCSUsrMsg_SendPlayerItemFound)},
  { 260, 269, sizeof(CCSUsrMsg_ReloadEffect)},
  { 274, 279, sizeof(CCSUsrMsg_AdjustMoney)},
  { 280, 288, sizeof(CCSUsrMsg_ReportHit)},
  { 292, 299, sizeof(CCSUsrMsg_KillCam)},
  { 302, 310, sizeof(CCSUsrMsg_DesiredTimescale)},
  { 314, 319, sizeof(CCSUsrMsg_CurrentTimescale)},
  { 320, 327, sizeof(CCSUsrMsg_AchievementEvent)},
  { 330, 338, sizeof(CCSUsrMsg_MatchEndConditions)},
  { 342, 348, sizeof(CCSUsrMsg_PlayerStatsUpdate_Stat)},
  { 350, 358, sizeof(CCSUsrMsg_PlayerStatsUpdate)},
  { 362, 368, sizeof(CCSUsrMsg_DisplayInventory)},
  { 370, 378, sizeof(CCSUsrMsg_QuestProgress)},
  { 382, 387, sizeof(CCSUsrMsg_ScoreLeaderboardData)},
  { 388, 393, sizeof(CCSUsrMsg_PlayerDecalDigitalSignature)},
  { 394, 400, sizeof(CCSUsrMsg_XRankGet)},
  { 402, 409, sizeof(CCSUsrMsg_XRankUpd)},
  { 412, 418, sizeof(CCSUsrMsg_CallVoteFailed)},
  { 420, 431, sizeof(CCSUsrMsg_VoteStart)},
  { 438, 446, sizeof(CCSUsrMsg_VotePass)},
  { 450, 456, sizeof(CCSUsrMsg_VoteFailed)},
  { 458, 463, sizeof(CCSUsrMsg_VoteSetup)},
  { 464, 472, sizeof(CCSUsrMsg_SendLastKillerDamageToClient)},
  { 476, 485, sizeof(CCSUsrMsg_ServerRankUpdate_RankUpdate)},
  { 490, 495, sizeof(CCSUsrMsg_ServerRankUpdate)},
  { 496, 501, sizeof(CCSUsrMsg_XpUpdate)},
  { 502, 507, sizeof(CCSUsrMsg_ItemPickup)},
  { 508, 515, sizeof(CCSUsrMsg_ShowMenu)},
  { 518, 523, sizeof(CCSUsrMsg_BarTime)},
  { 524, 529, sizeof(CCSUsrMsg_AmmoDenied)},
  { 530, 535, sizeof(CCSUsrMsg_MarkAchievement)},
  { 536, 541, sizeof(CCSUsrMsg_MatchStatsUpdate)},
  { 542, 548, sizeof(CCSUsrMsg_ItemDrop)},
  { 550, 555, sizeof(CCSUsrMsg_GlowPropTurnOff)},
  { 556, 564, sizeof(CCSUsrMsg_RoundBackupFilenames)},
  { 568, 573, sizeof(CCSUsrMsg_ResetHud)},
  { 574, 579, sizeof(CCSUsrMsg_GameTitle)},
  { 580, 585, sizeof(CCSUsrMsg_RequestState)},
  { 586, 591, sizeof(CCSUsrMsg_StopSpectatorMode)},
  { 592, 597, sizeof(CCSUsrMsg_DisconnectToLobby)},
  { 598, 603, sizeof(CCSUsrMsg_WarmupHasEnded)},
  { 604, 609, sizeof(CCSUsrMsg_ClientInfo)},
  { 610, 615, sizeof(CCSUsrMsg_ServerRankRevealAll)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_VGUIMenu_Subkey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_VGUIMenu_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_Geiger_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_Train_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_HudText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_SayText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_SayText2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_TextMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_HudMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_Shake_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_Fade_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_Rumble_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_CloseCaption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_CloseCaptionDirect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_SendAudio_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_RawAudio_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_VoiceMask_PlayerMask_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_VoiceMask_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_Damage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_RadioText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_HintText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_KeyHintText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_ProcessSpottedEntityUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_SendPlayerItemDrops_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_SendPlayerItemFound_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_ReloadEffect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_AdjustMoney_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_ReportHit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_KillCam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_DesiredTimescale_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_CurrentTimescale_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_AchievementEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_MatchEndConditions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_PlayerStatsUpdate_Stat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_PlayerStatsUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_DisplayInventory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_QuestProgress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_ScoreLeaderboardData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_PlayerDecalDigitalSignature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_XRankGet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_XRankUpd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_CallVoteFailed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_VoteStart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_VotePass_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_VoteFailed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_VoteSetup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_SendLastKillerDamageToClient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_ServerRankUpdate_RankUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_ServerRankUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_XpUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_ItemPickup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_ShowMenu_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_BarTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_AmmoDenied_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_MarkAchievement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_MatchStatsUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_ItemDrop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_GlowPropTurnOff_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_RoundBackupFilenames_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_ResetHud_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_GameTitle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_RequestState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_StopSpectatorMode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_DisconnectToLobby_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_WarmupHasEnded_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_ClientInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CCSUsrMsg_ServerRankRevealAll_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cstrike15_usermessages.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 68);
}

}  // namespace

void TableStruct::Shutdown() {
  _CCSUsrMsg_VGUIMenu_Subkey_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CCSUsrMsg_VGUIMenu_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CCSUsrMsg_Geiger_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _CCSUsrMsg_Train_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _CCSUsrMsg_HudText_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _CCSUsrMsg_SayText_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _CCSUsrMsg_SayText2_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _CCSUsrMsg_TextMsg_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _CCSUsrMsg_HudMsg_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _CCSUsrMsg_Shake_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _CCSUsrMsg_Fade_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _CCSUsrMsg_Rumble_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _CCSUsrMsg_CloseCaption_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _CCSUsrMsg_CloseCaptionDirect_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _CCSUsrMsg_SendAudio_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _CCSUsrMsg_RawAudio_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _CCSUsrMsg_VoiceMask_PlayerMask_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _CCSUsrMsg_VoiceMask_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _CCSUsrMsg_Damage_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _CCSUsrMsg_RadioText_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _CCSUsrMsg_HintText_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _CCSUsrMsg_KeyHintText_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _CCSUsrMsg_ProcessSpottedEntityUpdate_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _CCSUsrMsg_SendPlayerItemDrops_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _CCSUsrMsg_SendPlayerItemFound_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _CCSUsrMsg_ReloadEffect_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _CCSUsrMsg_AdjustMoney_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _CCSUsrMsg_ReportHit_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _CCSUsrMsg_KillCam_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _CCSUsrMsg_DesiredTimescale_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _CCSUsrMsg_CurrentTimescale_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _CCSUsrMsg_AchievementEvent_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _CCSUsrMsg_MatchEndConditions_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
  _CCSUsrMsg_PlayerStatsUpdate_Stat_default_instance_.Shutdown();
  delete file_level_metadata[34].reflection;
  _CCSUsrMsg_PlayerStatsUpdate_default_instance_.Shutdown();
  delete file_level_metadata[35].reflection;
  _CCSUsrMsg_DisplayInventory_default_instance_.Shutdown();
  delete file_level_metadata[36].reflection;
  _CCSUsrMsg_QuestProgress_default_instance_.Shutdown();
  delete file_level_metadata[37].reflection;
  _CCSUsrMsg_ScoreLeaderboardData_default_instance_.Shutdown();
  delete file_level_metadata[38].reflection;
  _CCSUsrMsg_PlayerDecalDigitalSignature_default_instance_.Shutdown();
  delete file_level_metadata[39].reflection;
  _CCSUsrMsg_XRankGet_default_instance_.Shutdown();
  delete file_level_metadata[40].reflection;
  _CCSUsrMsg_XRankUpd_default_instance_.Shutdown();
  delete file_level_metadata[41].reflection;
  _CCSUsrMsg_CallVoteFailed_default_instance_.Shutdown();
  delete file_level_metadata[42].reflection;
  _CCSUsrMsg_VoteStart_default_instance_.Shutdown();
  delete file_level_metadata[43].reflection;
  _CCSUsrMsg_VotePass_default_instance_.Shutdown();
  delete file_level_metadata[44].reflection;
  _CCSUsrMsg_VoteFailed_default_instance_.Shutdown();
  delete file_level_metadata[45].reflection;
  _CCSUsrMsg_VoteSetup_default_instance_.Shutdown();
  delete file_level_metadata[46].reflection;
  _CCSUsrMsg_SendLastKillerDamageToClient_default_instance_.Shutdown();
  delete file_level_metadata[47].reflection;
  _CCSUsrMsg_ServerRankUpdate_RankUpdate_default_instance_.Shutdown();
  delete file_level_metadata[48].reflection;
  _CCSUsrMsg_ServerRankUpdate_default_instance_.Shutdown();
  delete file_level_metadata[49].reflection;
  _CCSUsrMsg_XpUpdate_default_instance_.Shutdown();
  delete file_level_metadata[50].reflection;
  _CCSUsrMsg_ItemPickup_default_instance_.Shutdown();
  delete file_level_metadata[51].reflection;
  _CCSUsrMsg_ShowMenu_default_instance_.Shutdown();
  delete file_level_metadata[52].reflection;
  _CCSUsrMsg_BarTime_default_instance_.Shutdown();
  delete file_level_metadata[53].reflection;
  _CCSUsrMsg_AmmoDenied_default_instance_.Shutdown();
  delete file_level_metadata[54].reflection;
  _CCSUsrMsg_MarkAchievement_default_instance_.Shutdown();
  delete file_level_metadata[55].reflection;
  _CCSUsrMsg_MatchStatsUpdate_default_instance_.Shutdown();
  delete file_level_metadata[56].reflection;
  _CCSUsrMsg_ItemDrop_default_instance_.Shutdown();
  delete file_level_metadata[57].reflection;
  _CCSUsrMsg_GlowPropTurnOff_default_instance_.Shutdown();
  delete file_level_metadata[58].reflection;
  _CCSUsrMsg_RoundBackupFilenames_default_instance_.Shutdown();
  delete file_level_metadata[59].reflection;
  _CCSUsrMsg_ResetHud_default_instance_.Shutdown();
  delete file_level_metadata[60].reflection;
  _CCSUsrMsg_GameTitle_default_instance_.Shutdown();
  delete file_level_metadata[61].reflection;
  _CCSUsrMsg_RequestState_default_instance_.Shutdown();
  delete file_level_metadata[62].reflection;
  _CCSUsrMsg_StopSpectatorMode_default_instance_.Shutdown();
  delete file_level_metadata[63].reflection;
  _CCSUsrMsg_DisconnectToLobby_default_instance_.Shutdown();
  delete file_level_metadata[64].reflection;
  _CCSUsrMsg_WarmupHasEnded_default_instance_.Shutdown();
  delete file_level_metadata[65].reflection;
  _CCSUsrMsg_ClientInfo_default_instance_.Shutdown();
  delete file_level_metadata[66].reflection;
  _CCSUsrMsg_ServerRankRevealAll_default_instance_.Shutdown();
  delete file_level_metadata[67].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fdescriptor_2eproto::InitDefaults();
  ::protobuf_netmessages_2eproto::InitDefaults();
  ::protobuf_cstrike15_5fgcmessages_2eproto::InitDefaults();
  _CCSUsrMsg_VGUIMenu_Subkey_default_instance_.DefaultConstruct();
  _CCSUsrMsg_VGUIMenu_default_instance_.DefaultConstruct();
  _CCSUsrMsg_Geiger_default_instance_.DefaultConstruct();
  _CCSUsrMsg_Train_default_instance_.DefaultConstruct();
  _CCSUsrMsg_HudText_default_instance_.DefaultConstruct();
  _CCSUsrMsg_SayText_default_instance_.DefaultConstruct();
  _CCSUsrMsg_SayText2_default_instance_.DefaultConstruct();
  _CCSUsrMsg_TextMsg_default_instance_.DefaultConstruct();
  _CCSUsrMsg_HudMsg_default_instance_.DefaultConstruct();
  _CCSUsrMsg_Shake_default_instance_.DefaultConstruct();
  _CCSUsrMsg_Fade_default_instance_.DefaultConstruct();
  _CCSUsrMsg_Rumble_default_instance_.DefaultConstruct();
  _CCSUsrMsg_CloseCaption_default_instance_.DefaultConstruct();
  _CCSUsrMsg_CloseCaptionDirect_default_instance_.DefaultConstruct();
  _CCSUsrMsg_SendAudio_default_instance_.DefaultConstruct();
  _CCSUsrMsg_RawAudio_default_instance_.DefaultConstruct();
  _CCSUsrMsg_VoiceMask_PlayerMask_default_instance_.DefaultConstruct();
  _CCSUsrMsg_VoiceMask_default_instance_.DefaultConstruct();
  _CCSUsrMsg_Damage_default_instance_.DefaultConstruct();
  _CCSUsrMsg_RadioText_default_instance_.DefaultConstruct();
  _CCSUsrMsg_HintText_default_instance_.DefaultConstruct();
  _CCSUsrMsg_KeyHintText_default_instance_.DefaultConstruct();
  _CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate_default_instance_.DefaultConstruct();
  _CCSUsrMsg_ProcessSpottedEntityUpdate_default_instance_.DefaultConstruct();
  _CCSUsrMsg_SendPlayerItemDrops_default_instance_.DefaultConstruct();
  _CCSUsrMsg_SendPlayerItemFound_default_instance_.DefaultConstruct();
  _CCSUsrMsg_ReloadEffect_default_instance_.DefaultConstruct();
  _CCSUsrMsg_AdjustMoney_default_instance_.DefaultConstruct();
  _CCSUsrMsg_ReportHit_default_instance_.DefaultConstruct();
  _CCSUsrMsg_KillCam_default_instance_.DefaultConstruct();
  _CCSUsrMsg_DesiredTimescale_default_instance_.DefaultConstruct();
  _CCSUsrMsg_CurrentTimescale_default_instance_.DefaultConstruct();
  _CCSUsrMsg_AchievementEvent_default_instance_.DefaultConstruct();
  _CCSUsrMsg_MatchEndConditions_default_instance_.DefaultConstruct();
  _CCSUsrMsg_PlayerStatsUpdate_Stat_default_instance_.DefaultConstruct();
  _CCSUsrMsg_PlayerStatsUpdate_default_instance_.DefaultConstruct();
  _CCSUsrMsg_DisplayInventory_default_instance_.DefaultConstruct();
  _CCSUsrMsg_QuestProgress_default_instance_.DefaultConstruct();
  _CCSUsrMsg_ScoreLeaderboardData_default_instance_.DefaultConstruct();
  _CCSUsrMsg_PlayerDecalDigitalSignature_default_instance_.DefaultConstruct();
  _CCSUsrMsg_XRankGet_default_instance_.DefaultConstruct();
  _CCSUsrMsg_XRankUpd_default_instance_.DefaultConstruct();
  _CCSUsrMsg_CallVoteFailed_default_instance_.DefaultConstruct();
  _CCSUsrMsg_VoteStart_default_instance_.DefaultConstruct();
  _CCSUsrMsg_VotePass_default_instance_.DefaultConstruct();
  _CCSUsrMsg_VoteFailed_default_instance_.DefaultConstruct();
  _CCSUsrMsg_VoteSetup_default_instance_.DefaultConstruct();
  _CCSUsrMsg_SendLastKillerDamageToClient_default_instance_.DefaultConstruct();
  _CCSUsrMsg_ServerRankUpdate_RankUpdate_default_instance_.DefaultConstruct();
  _CCSUsrMsg_ServerRankUpdate_default_instance_.DefaultConstruct();
  _CCSUsrMsg_XpUpdate_default_instance_.DefaultConstruct();
  _CCSUsrMsg_ItemPickup_default_instance_.DefaultConstruct();
  _CCSUsrMsg_ShowMenu_default_instance_.DefaultConstruct();
  _CCSUsrMsg_BarTime_default_instance_.DefaultConstruct();
  _CCSUsrMsg_AmmoDenied_default_instance_.DefaultConstruct();
  _CCSUsrMsg_MarkAchievement_default_instance_.DefaultConstruct();
  _CCSUsrMsg_MatchStatsUpdate_default_instance_.DefaultConstruct();
  _CCSUsrMsg_ItemDrop_default_instance_.DefaultConstruct();
  _CCSUsrMsg_GlowPropTurnOff_default_instance_.DefaultConstruct();
  _CCSUsrMsg_RoundBackupFilenames_default_instance_.DefaultConstruct();
  _CCSUsrMsg_ResetHud_default_instance_.DefaultConstruct();
  _CCSUsrMsg_GameTitle_default_instance_.DefaultConstruct();
  _CCSUsrMsg_RequestState_default_instance_.DefaultConstruct();
  _CCSUsrMsg_StopSpectatorMode_default_instance_.DefaultConstruct();
  _CCSUsrMsg_DisconnectToLobby_default_instance_.DefaultConstruct();
  _CCSUsrMsg_WarmupHasEnded_default_instance_.DefaultConstruct();
  _CCSUsrMsg_ClientInfo_default_instance_.DefaultConstruct();
  _CCSUsrMsg_ServerRankRevealAll_default_instance_.DefaultConstruct();
  _CCSUsrMsg_HudMsg_default_instance_.get_mutable()->pos_ = const_cast< ::CMsgVector2D*>(
      ::CMsgVector2D::internal_default_instance());
  _CCSUsrMsg_HudMsg_default_instance_.get_mutable()->clr1_ = const_cast< ::CMsgRGBA*>(
      ::CMsgRGBA::internal_default_instance());
  _CCSUsrMsg_HudMsg_default_instance_.get_mutable()->clr2_ = const_cast< ::CMsgRGBA*>(
      ::CMsgRGBA::internal_default_instance());
  _CCSUsrMsg_Fade_default_instance_.get_mutable()->clr_ = const_cast< ::CMsgRGBA*>(
      ::CMsgRGBA::internal_default_instance());
  _CCSUsrMsg_Damage_default_instance_.get_mutable()->inflictor_world_pos_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
  _CCSUsrMsg_SendPlayerItemFound_default_instance_.get_mutable()->iteminfo_ = const_cast< ::CEconItemPreviewDataBlock*>(
      ::CEconItemPreviewDataBlock::internal_default_instance());
  _CCSUsrMsg_ScoreLeaderboardData_default_instance_.get_mutable()->data_ = const_cast< ::ScoreLeaderboardData*>(
      ::ScoreLeaderboardData::internal_default_instance());
  _CCSUsrMsg_PlayerDecalDigitalSignature_default_instance_.get_mutable()->data_ = const_cast< ::PlayerDecalDigitalSignature*>(
      ::PlayerDecalDigitalSignature::internal_default_instance());
  _CCSUsrMsg_XpUpdate_default_instance_.get_mutable()->data_ = const_cast< ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded*>(
      ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\034cstrike15_usermessages.proto\032 google/p"
      "rotobuf/descriptor.proto\032\021netmessages.pr"
      "oto\032\032cstrike15_gcmessages.proto\"\202\001\n\022CCSU"
      "srMsg_VGUIMenu\022\014\n\004name\030\001 \001(\t\022\014\n\004show\030\002 \001"
      "(\010\022+\n\007subkeys\030\003 \003(\0132\032.CCSUsrMsg_VGUIMenu"
      ".Subkey\032#\n\006Subkey\022\014\n\004name\030\001 \001(\t\022\013\n\003str\030\002"
      " \001(\t\"!\n\020CCSUsrMsg_Geiger\022\r\n\005range\030\001 \001(\005\""
      " \n\017CCSUsrMsg_Train\022\r\n\005train\030\001 \001(\005\"!\n\021CCS"
      "UsrMsg_HudText\022\014\n\004text\030\001 \001(\t\"U\n\021CCSUsrMs"
      "g_SayText\022\017\n\007ent_idx\030\001 \001(\005\022\014\n\004text\030\002 \001(\t"
      "\022\014\n\004chat\030\003 \001(\010\022\023\n\013textallchat\030\004 \001(\010\"j\n\022C"
      "CSUsrMsg_SayText2\022\017\n\007ent_idx\030\001 \001(\005\022\014\n\004ch"
      "at\030\002 \001(\010\022\020\n\010msg_name\030\003 \001(\t\022\016\n\006params\030\004 \003"
      "(\t\022\023\n\013textallchat\030\005 \001(\010\"4\n\021CCSUsrMsg_Tex"
      "tMsg\022\017\n\007msg_dst\030\001 \001(\005\022\016\n\006params\030\003 \003(\t\"\340\001"
      "\n\020CCSUsrMsg_HudMsg\022\017\n\007channel\030\001 \001(\005\022\032\n\003p"
      "os\030\002 \001(\0132\r.CMsgVector2D\022\027\n\004clr1\030\003 \001(\0132\t."
      "CMsgRGBA\022\027\n\004clr2\030\004 \001(\0132\t.CMsgRGBA\022\016\n\006eff"
      "ect\030\005 \001(\005\022\024\n\014fade_in_time\030\006 \001(\002\022\025\n\rfade_"
      "out_time\030\007 \001(\002\022\021\n\thold_time\030\t \001(\002\022\017\n\007fx_"
      "time\030\n \001(\002\022\014\n\004text\030\013 \001(\t\"`\n\017CCSUsrMsg_Sh"
      "ake\022\017\n\007command\030\001 \001(\005\022\027\n\017local_amplitude\030"
      "\002 \001(\002\022\021\n\tfrequency\030\003 \001(\002\022\020\n\010duration\030\004 \001"
      "(\002\"\\\n\016CCSUsrMsg_Fade\022\020\n\010duration\030\001 \001(\005\022\021"
      "\n\thold_time\030\002 \001(\005\022\r\n\005flags\030\003 \001(\005\022\026\n\003clr\030"
      "\004 \001(\0132\t.CMsgRGBA\">\n\020CCSUsrMsg_Rumble\022\r\n\005"
      "index\030\001 \001(\005\022\014\n\004data\030\002 \001(\005\022\r\n\005flags\030\003 \001(\005"
      "\"M\n\026CCSUsrMsg_CloseCaption\022\014\n\004hash\030\001 \001(\r"
      "\022\020\n\010duration\030\002 \001(\005\022\023\n\013from_player\030\003 \001(\010\""
      "S\n\034CCSUsrMsg_CloseCaptionDirect\022\014\n\004hash\030"
      "\001 \001(\r\022\020\n\010duration\030\002 \001(\005\022\023\n\013from_player\030\003"
      " \001(\010\"*\n\023CCSUsrMsg_SendAudio\022\023\n\013radio_sou"
      "nd\030\001 \001(\t\"]\n\022CCSUsrMsg_RawAudio\022\r\n\005pitch\030"
      "\001 \001(\005\022\016\n\006entidx\030\002 \001(\005\022\020\n\010duration\030\003 \001(\002\022"
      "\026\n\016voice_filename\030\004 \001(\t\"\241\001\n\023CCSUsrMsg_Vo"
      "iceMask\0225\n\014player_masks\030\001 \003(\0132\037.CCSUsrMs"
      "g_VoiceMask.PlayerMask\022\031\n\021player_mod_ena"
      "ble\030\002 \001(\010\0328\n\nPlayerMask\022\027\n\017game_rules_ma"
      "sk\030\001 \001(\005\022\021\n\tban_masks\030\002 \001(\005\"e\n\020CCSUsrMsg"
      "_Damage\022\016\n\006amount\030\001 \001(\005\022(\n\023inflictor_wor"
      "ld_pos\030\002 \001(\0132\013.CMsgVector\022\027\n\017victim_enti"
      "ndex\030\003 \001(\005\"X\n\023CCSUsrMsg_RadioText\022\017\n\007msg"
      "_dst\030\001 \001(\005\022\016\n\006client\030\002 \001(\005\022\020\n\010msg_name\030\003"
      " \001(\t\022\016\n\006params\030\004 \003(\t\"\"\n\022CCSUsrMsg_HintTe"
      "xt\022\014\n\004text\030\001 \001(\t\"&\n\025CCSUsrMsg_KeyHintTex"
      "t\022\r\n\005hints\030\001 \003(\t\"\326\002\n$CCSUsrMsg_ProcessSp"
      "ottedEntityUpdate\022\022\n\nnew_update\030\001 \001(\010\022Q\n"
      "\016entity_updates\030\002 \003(\01329.CCSUsrMsg_Proces"
      "sSpottedEntityUpdate.SpottedEntityUpdate"
      "\032\306\001\n\023SpottedEntityUpdate\022\022\n\nentity_idx\030\001"
      " \001(\005\022\020\n\010class_id\030\002 \001(\005\022\020\n\010origin_x\030\003 \001(\005"
      "\022\020\n\010origin_y\030\004 \001(\005\022\020\n\010origin_z\030\005 \001(\005\022\017\n\007"
      "angle_y\030\006 \001(\005\022\017\n\007defuser\030\007 \001(\010\022\032\n\022player"
      "_has_defuser\030\010 \001(\010\022\025\n\rplayer_has_c4\030\t \001("
      "\010\"S\n\035CCSUsrMsg_SendPlayerItemDrops\0222\n\016en"
      "tity_updates\030\001 \003(\0132\032.CEconItemPreviewDat"
      "aBlock\"_\n\035CCSUsrMsg_SendPlayerItemFound\022"
      ",\n\010iteminfo\030\001 \001(\0132\032.CEconItemPreviewData"
      "Block\022\020\n\010entindex\030\002 \001(\005\"o\n\026CCSUsrMsg_Rel"
      "oadEffect\022\016\n\006entidx\030\001 \001(\005\022\017\n\007actanim\030\002 \001"
      "(\005\022\020\n\010origin_x\030\003 \001(\002\022\020\n\010origin_y\030\004 \001(\002\022\020"
      "\n\010origin_z\030\005 \001(\002\"\'\n\025CCSUsrMsg_AdjustMone"
      "y\022\016\n\006amount\030\001 \001(\005\"U\n\023CCSUsrMsg_ReportHit"
      "\022\r\n\005pos_x\030\001 \001(\002\022\r\n\005pos_y\030\002 \001(\002\022\021\n\ttimest"
      "amp\030\004 \001(\002\022\r\n\005pos_z\030\003 \001(\002\"R\n\021CCSUsrMsg_Ki"
      "llCam\022\020\n\010obs_mode\030\001 \001(\005\022\024\n\014first_target\030"
      "\002 \001(\005\022\025\n\rsecond_target\030\003 \001(\005\"\213\001\n\032CCSUsrM"
      "sg_DesiredTimescale\022\031\n\021desired_timescale"
      "\030\001 \001(\002\022\035\n\025duration_realtime_sec\030\002 \001(\002\022\031\n"
      "\021interpolator_type\030\003 \001(\005\022\030\n\020start_blend_"
      "time\030\004 \001(\002\"3\n\032CCSUsrMsg_CurrentTimescale"
      "\022\025\n\rcur_timescale\030\001 \001(\002\"Q\n\032CCSUsrMsg_Ach"
      "ievementEvent\022\023\n\013achievement\030\001 \001(\005\022\r\n\005co"
      "unt\030\002 \001(\005\022\017\n\007user_id\030\003 \001(\005\"r\n\034CCSUsrMsg_"
      "MatchEndConditions\022\021\n\tfraglimit\030\001 \001(\005\022\024\n"
      "\014mp_maxrounds\030\002 \001(\005\022\023\n\013mp_winlimit\030\003 \001(\005"
      "\022\024\n\014mp_timelimit\030\004 \001(\005\"\242\001\n\033CCSUsrMsg_Pla"
      "yerStatsUpdate\022\017\n\007version\030\001 \001(\005\0220\n\005stats"
      "\030\004 \003(\0132!.CCSUsrMsg_PlayerStatsUpdate.Sta"
      "t\022\017\n\007user_id\030\005 \001(\005\022\013\n\003crc\030\006 \001(\005\032\"\n\004Stat\022"
      "\013\n\003idx\030\001 \001(\005\022\r\n\005delta\030\002 \001(\005\">\n\032CCSUsrMsg"
      "_DisplayInventory\022\017\n\007display\030\001 \001(\010\022\017\n\007us"
      "er_id\030\002 \001(\005\"p\n\027CCSUsrMsg_QuestProgress\022\020"
      "\n\010quest_id\030\001 \001(\r\022\025\n\rnormal_points\030\002 \001(\r\022"
      "\024\n\014bonus_points\030\003 \001(\r\022\026\n\016is_event_quest\030"
      "\004 \001(\010\"E\n\036CCSUsrMsg_ScoreLeaderboardData\022"
      "#\n\004data\030\001 \001(\0132\025.ScoreLeaderboardData\"S\n%"
      "CCSUsrMsg_PlayerDecalDigitalSignature\022*\n"
      "\004data\030\001 \001(\0132\034.PlayerDecalDigitalSignatur"
      "e\":\n\022CCSUsrMsg_XRankGet\022\020\n\010mode_idx\030\001 \001("
      "\005\022\022\n\ncontroller\030\002 \001(\005\"K\n\022CCSUsrMsg_XRank"
      "Upd\022\020\n\010mode_idx\030\001 \001(\005\022\022\n\ncontroller\030\002 \001("
      "\005\022\017\n\007ranking\030\003 \001(\005\"8\n\030CCSUsrMsg_CallVote"
      "Failed\022\016\n\006reason\030\001 \001(\005\022\014\n\004time\030\002 \001(\005\"\236\001\n"
      "\023CCSUsrMsg_VoteStart\022\014\n\004team\030\001 \001(\005\022\017\n\007en"
      "t_idx\030\002 \001(\005\022\021\n\tvote_type\030\003 \001(\005\022\020\n\010disp_s"
      "tr\030\004 \001(\t\022\023\n\013details_str\030\005 \001(\t\022\026\n\016other_t"
      "eam_str\030\006 \001(\t\022\026\n\016is_yes_no_vote\030\007 \001(\010\"\\\n"
      "\022CCSUsrMsg_VotePass\022\014\n\004team\030\001 \001(\005\022\021\n\tvot"
      "e_type\030\002 \001(\005\022\020\n\010disp_str\030\003 \001(\t\022\023\n\013detail"
      "s_str\030\004 \001(\t\"4\n\024CCSUsrMsg_VoteFailed\022\014\n\004t"
      "eam\030\001 \001(\005\022\016\n\006reason\030\002 \001(\005\"/\n\023CCSUsrMsg_V"
      "oteSetup\022\030\n\020potential_issues\030\001 \003(\t\"\204\001\n&C"
      "CSUsrMsg_SendLastKillerDamageToClient\022\026\n"
      "\016num_hits_given\030\001 \001(\005\022\024\n\014damage_given\030\002 "
      "\001(\005\022\026\n\016num_hits_taken\030\003 \001(\005\022\024\n\014damage_ta"
      "ken\030\004 \001(\005\"\306\001\n\032CCSUsrMsg_ServerRankUpdate"
      "\022;\n\013rank_update\030\001 \003(\0132&.CCSUsrMsg_Server"
      "RankUpdate.RankUpdate\032k\n\nRankUpdate\022\022\n\na"
      "ccount_id\030\001 \001(\005\022\020\n\010rank_old\030\002 \001(\005\022\020\n\010ran"
      "k_new\030\003 \001(\005\022\020\n\010num_wins\030\004 \001(\005\022\023\n\013rank_ch"
      "ange\030\005 \001(\002\"Q\n\022CCSUsrMsg_XpUpdate\022;\n\004data"
      "\030\001 \001(\0132-.CMsgGCCstrike15_v2_GC2ServerNot"
      "ifyXPRewarded\"$\n\024CCSUsrMsg_ItemPickup\022\014\n"
      "\004item\030\001 \001(\t\"Y\n\022CCSUsrMsg_ShowMenu\022\030\n\020bit"
      "s_valid_slots\030\001 \001(\005\022\024\n\014display_time\030\002 \001("
      "\005\022\023\n\013menu_string\030\003 \001(\t\"!\n\021CCSUsrMsg_BarT"
      "ime\022\014\n\004time\030\001 \001(\t\"\'\n\024CCSUsrMsg_AmmoDenie"
      "d\022\017\n\007ammoIdx\030\001 \001(\005\"0\n\031CCSUsrMsg_MarkAchi"
      "evement\022\023\n\013achievement\030\001 \001(\t\",\n\032CCSUsrMs"
      "g_MatchStatsUpdate\022\016\n\006update\030\001 \001(\t\"3\n\022CC"
      "SUsrMsg_ItemDrop\022\016\n\006itemid\030\001 \001(\003\022\r\n\005deat"
      "h\030\002 \001(\010\"+\n\031CCSUsrMsg_GlowPropTurnOff\022\016\n\006"
      "entidx\030\001 \001(\005\"b\n\036CCSUsrMsg_RoundBackupFil"
      "enames\022\r\n\005count\030\001 \001(\005\022\r\n\005index\030\002 \001(\005\022\020\n\010"
      "filename\030\003 \001(\t\022\020\n\010nicename\030\004 \001(\t\"#\n\022CCSU"
      "srMsg_ResetHud\022\r\n\005reset\030\001 \001(\010\"$\n\023CCSUsrM"
      "sg_GameTitle\022\r\n\005dummy\030\001 \001(\005\"\'\n\026CCSUsrMsg"
      "_RequestState\022\r\n\005dummy\030\001 \001(\005\",\n\033CCSUsrMs"
      "g_StopSpectatorMode\022\r\n\005dummy\030\001 \001(\005\",\n\033CC"
      "SUsrMsg_DisconnectToLobby\022\r\n\005dummy\030\001 \001(\005"
      "\")\n\030CCSUsrMsg_WarmupHasEnded\022\r\n\005dummy\030\001 "
      "\001(\005\"%\n\024CCSUsrMsg_ClientInfo\022\r\n\005dummy\030\001 \001"
      "(\005\">\n\035CCSUsrMsg_ServerRankRevealAll\022\035\n\025s"
      "econds_till_shutdown\030\001 \001(\005*\231\014\n\026ECstrike1"
      "5UserMessages\022\022\n\016CS_UM_VGUIMenu\020\001\022\020\n\014CS_"
      "UM_Geiger\020\002\022\017\n\013CS_UM_Train\020\003\022\021\n\rCS_UM_Hu"
      "dText\020\004\022\021\n\rCS_UM_SayText\020\005\022\022\n\016CS_UM_SayT"
      "ext2\020\006\022\021\n\rCS_UM_TextMsg\020\007\022\020\n\014CS_UM_HudMs"
      "g\020\010\022\022\n\016CS_UM_ResetHud\020\t\022\023\n\017CS_UM_GameTit"
      "le\020\n\022\017\n\013CS_UM_Shake\020\014\022\016\n\nCS_UM_Fade\020\r\022\020\n"
      "\014CS_UM_Rumble\020\016\022\026\n\022CS_UM_CloseCaption\020\017\022"
      "\034\n\030CS_UM_CloseCaptionDirect\020\020\022\023\n\017CS_UM_S"
      "endAudio\020\021\022\022\n\016CS_UM_RawAudio\020\022\022\023\n\017CS_UM_"
      "VoiceMask\020\023\022\026\n\022CS_UM_RequestState\020\024\022\020\n\014C"
      "S_UM_Damage\020\025\022\023\n\017CS_UM_RadioText\020\026\022\022\n\016CS"
      "_UM_HintText\020\027\022\025\n\021CS_UM_KeyHintText\020\030\022$\n"
      " CS_UM_ProcessSpottedEntityUpdate\020\031\022\026\n\022C"
      "S_UM_ReloadEffect\020\032\022\025\n\021CS_UM_AdjustMoney"
      "\020\033\022\031\n\025CS_UM_UpdateTeamMoney\020\034\022\033\n\027CS_UM_S"
      "topSpectatorMode\020\035\022\021\n\rCS_UM_KillCam\020\036\022\032\n"
      "\026CS_UM_DesiredTimescale\020\037\022\032\n\026CS_UM_Curre"
      "ntTimescale\020 \022\032\n\026CS_UM_AchievementEvent\020"
      "!\022\034\n\030CS_UM_MatchEndConditions\020\"\022\033\n\027CS_UM"
      "_DisconnectToLobby\020#\022\033\n\027CS_UM_PlayerStat"
      "sUpdate\020$\022\032\n\026CS_UM_DisplayInventory\020%\022\030\n"
      "\024CS_UM_WarmupHasEnded\020&\022\024\n\020CS_UM_ClientI"
      "nfo\020\'\022\022\n\016CS_UM_XRankGet\020(\022\022\n\016CS_UM_XRank"
      "Upd\020)\022\030\n\024CS_UM_CallVoteFailed\020-\022\023\n\017CS_UM"
      "_VoteStart\020.\022\022\n\016CS_UM_VotePass\020/\022\024\n\020CS_U"
      "M_VoteFailed\0200\022\023\n\017CS_UM_VoteSetup\0201\022\035\n\031C"
      "S_UM_ServerRankRevealAll\0202\022&\n\"CS_UM_Send"
      "LastKillerDamageToClient\0203\022\032\n\026CS_UM_Serv"
      "erRankUpdate\0204\022\024\n\020CS_UM_ItemPickup\0205\022\022\n\016"
      "CS_UM_ShowMenu\0206\022\021\n\rCS_UM_BarTime\0207\022\024\n\020C"
      "S_UM_AmmoDenied\0208\022\031\n\025CS_UM_MarkAchieveme"
      "nt\0209\022\032\n\026CS_UM_MatchStatsUpdate\020:\022\022\n\016CS_U"
      "M_ItemDrop\020;\022\031\n\025CS_UM_GlowPropTurnOff\020<\022"
      "\035\n\031CS_UM_SendPlayerItemDrops\020=\022\036\n\032CS_UM_"
      "RoundBackupFilenames\020>\022\035\n\031CS_UM_SendPlay"
      "erItemFound\020\?\022\023\n\017CS_UM_ReportHit\020@\022\022\n\016CS"
      "_UM_XpUpdate\020A\022\027\n\023CS_UM_QuestProgress\020B\022"
      "\036\n\032CS_UM_ScoreLeaderboardData\020C\022%\n!CS_UM"
      "_PlayerDecalDigitalSignature\020DB\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6957);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cstrike15_usermessages.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
  ::protobuf_netmessages_2eproto::AddDescriptors();
  ::protobuf_cstrike15_5fgcmessages_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cstrike15_5fusermessages_2eproto

const ::google::protobuf::EnumDescriptor* ECstrike15UserMessages_descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_enum_descriptors[0];
}
bool ECstrike15UserMessages_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_VGUIMenu_Subkey::kNameFieldNumber;
const int CCSUsrMsg_VGUIMenu_Subkey::kStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_VGUIMenu_Subkey::CCSUsrMsg_VGUIMenu_Subkey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_VGUIMenu.Subkey)
}
CCSUsrMsg_VGUIMenu_Subkey::CCSUsrMsg_VGUIMenu_Subkey(const CCSUsrMsg_VGUIMenu_Subkey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_str()) {
    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_VGUIMenu.Subkey)
}

void CCSUsrMsg_VGUIMenu_Subkey::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCSUsrMsg_VGUIMenu_Subkey::~CCSUsrMsg_VGUIMenu_Subkey() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_VGUIMenu.Subkey)
  SharedDtor();
}

void CCSUsrMsg_VGUIMenu_Subkey::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_VGUIMenu_Subkey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_VGUIMenu_Subkey::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[0].descriptor;
}

const CCSUsrMsg_VGUIMenu_Subkey& CCSUsrMsg_VGUIMenu_Subkey::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_VGUIMenu_Subkey* CCSUsrMsg_VGUIMenu_Subkey::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_VGUIMenu_Subkey* n = new CCSUsrMsg_VGUIMenu_Subkey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_VGUIMenu_Subkey::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_VGUIMenu.Subkey)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_str()) {
      GOOGLE_DCHECK(!str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*str_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_VGUIMenu_Subkey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_VGUIMenu.Subkey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_VGUIMenu.Subkey.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string str = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_VGUIMenu.Subkey.str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_VGUIMenu.Subkey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_VGUIMenu.Subkey)
  return false;
#undef DO_
}

void CCSUsrMsg_VGUIMenu_Subkey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_VGUIMenu.Subkey)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VGUIMenu.Subkey.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string str = 2;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VGUIMenu.Subkey.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->str(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_VGUIMenu.Subkey)
}

::google::protobuf::uint8* CCSUsrMsg_VGUIMenu_Subkey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_VGUIMenu.Subkey)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VGUIMenu.Subkey.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string str = 2;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VGUIMenu.Subkey.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->str(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_VGUIMenu.Subkey)
  return target;
}

size_t CCSUsrMsg_VGUIMenu_Subkey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_VGUIMenu.Subkey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string str = 2;
    if (has_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_VGUIMenu_Subkey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_VGUIMenu.Subkey)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_VGUIMenu_Subkey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_VGUIMenu_Subkey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_VGUIMenu.Subkey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_VGUIMenu.Subkey)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_VGUIMenu_Subkey::MergeFrom(const CCSUsrMsg_VGUIMenu_Subkey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_VGUIMenu.Subkey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_str()) {
      set_has_str();
      str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
    }
  }
}

void CCSUsrMsg_VGUIMenu_Subkey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_VGUIMenu.Subkey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_VGUIMenu_Subkey::CopyFrom(const CCSUsrMsg_VGUIMenu_Subkey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_VGUIMenu.Subkey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_VGUIMenu_Subkey::IsInitialized() const {
  return true;
}

void CCSUsrMsg_VGUIMenu_Subkey::Swap(CCSUsrMsg_VGUIMenu_Subkey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_VGUIMenu_Subkey::InternalSwap(CCSUsrMsg_VGUIMenu_Subkey* other) {
  name_.Swap(&other->name_);
  str_.Swap(&other->str_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_VGUIMenu_Subkey::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_VGUIMenu_Subkey

// optional string name = 1;
bool CCSUsrMsg_VGUIMenu_Subkey::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_VGUIMenu_Subkey::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_VGUIMenu_Subkey::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_VGUIMenu_Subkey::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& CCSUsrMsg_VGUIMenu_Subkey::name() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VGUIMenu.Subkey.name)
  return name_.GetNoArena();
}
void CCSUsrMsg_VGUIMenu_Subkey::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VGUIMenu.Subkey.name)
}
#if LANG_CXX11
void CCSUsrMsg_VGUIMenu_Subkey::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_VGUIMenu.Subkey.name)
}
#endif
void CCSUsrMsg_VGUIMenu_Subkey::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_VGUIMenu.Subkey.name)
}
void CCSUsrMsg_VGUIMenu_Subkey::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_VGUIMenu.Subkey.name)
}
::std::string* CCSUsrMsg_VGUIMenu_Subkey::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VGUIMenu.Subkey.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_VGUIMenu_Subkey::release_name() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VGUIMenu.Subkey.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_VGUIMenu_Subkey::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VGUIMenu.Subkey.name)
}

// optional string str = 2;
bool CCSUsrMsg_VGUIMenu_Subkey::has_str() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_VGUIMenu_Subkey::set_has_str() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_VGUIMenu_Subkey::clear_has_str() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_VGUIMenu_Subkey::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_str();
}
const ::std::string& CCSUsrMsg_VGUIMenu_Subkey::str() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VGUIMenu.Subkey.str)
  return str_.GetNoArena();
}
void CCSUsrMsg_VGUIMenu_Subkey::set_str(const ::std::string& value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VGUIMenu.Subkey.str)
}
#if LANG_CXX11
void CCSUsrMsg_VGUIMenu_Subkey::set_str(::std::string&& value) {
  set_has_str();
  str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_VGUIMenu.Subkey.str)
}
#endif
void CCSUsrMsg_VGUIMenu_Subkey::set_str(const char* value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_VGUIMenu.Subkey.str)
}
void CCSUsrMsg_VGUIMenu_Subkey::set_str(const char* value, size_t size) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_VGUIMenu.Subkey.str)
}
::std::string* CCSUsrMsg_VGUIMenu_Subkey::mutable_str() {
  set_has_str();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VGUIMenu.Subkey.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_VGUIMenu_Subkey::release_str() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VGUIMenu.Subkey.str)
  clear_has_str();
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_VGUIMenu_Subkey::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    set_has_str();
  } else {
    clear_has_str();
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VGUIMenu.Subkey.str)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_VGUIMenu::kNameFieldNumber;
const int CCSUsrMsg_VGUIMenu::kShowFieldNumber;
const int CCSUsrMsg_VGUIMenu::kSubkeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_VGUIMenu::CCSUsrMsg_VGUIMenu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_VGUIMenu)
}
CCSUsrMsg_VGUIMenu::CCSUsrMsg_VGUIMenu(const CCSUsrMsg_VGUIMenu& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      subkeys_(from.subkeys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  show_ = from.show_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_VGUIMenu)
}

void CCSUsrMsg_VGUIMenu::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  show_ = false;
}

CCSUsrMsg_VGUIMenu::~CCSUsrMsg_VGUIMenu() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_VGUIMenu)
  SharedDtor();
}

void CCSUsrMsg_VGUIMenu::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_VGUIMenu::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_VGUIMenu::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[1].descriptor;
}

const CCSUsrMsg_VGUIMenu& CCSUsrMsg_VGUIMenu::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_VGUIMenu* CCSUsrMsg_VGUIMenu::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_VGUIMenu* n = new CCSUsrMsg_VGUIMenu;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_VGUIMenu::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_VGUIMenu)
  subkeys_.Clear();
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  show_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_VGUIMenu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_VGUIMenu)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_VGUIMenu.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show = 2;
      case 2: {
        if (tag == 16u) {
          set_has_show();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CCSUsrMsg_VGUIMenu.Subkey subkeys = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_subkeys()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_VGUIMenu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_VGUIMenu)
  return false;
#undef DO_
}

void CCSUsrMsg_VGUIMenu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_VGUIMenu)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VGUIMenu.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bool show = 2;
  if (has_show()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->show(), output);
  }

  // repeated .CCSUsrMsg_VGUIMenu.Subkey subkeys = 3;
  for (unsigned int i = 0, n = this->subkeys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->subkeys(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_VGUIMenu)
}

::google::protobuf::uint8* CCSUsrMsg_VGUIMenu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_VGUIMenu)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VGUIMenu.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bool show = 2;
  if (has_show()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->show(), target);
  }

  // repeated .CCSUsrMsg_VGUIMenu.Subkey subkeys = 3;
  for (unsigned int i = 0, n = this->subkeys_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->subkeys(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_VGUIMenu)
  return target;
}

size_t CCSUsrMsg_VGUIMenu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_VGUIMenu)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .CCSUsrMsg_VGUIMenu.Subkey subkeys = 3;
  {
    unsigned int count = this->subkeys_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->subkeys(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bool show = 2;
    if (has_show()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_VGUIMenu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_VGUIMenu)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_VGUIMenu* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_VGUIMenu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_VGUIMenu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_VGUIMenu)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_VGUIMenu::MergeFrom(const CCSUsrMsg_VGUIMenu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_VGUIMenu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subkeys_.MergeFrom(from.subkeys_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_show()) {
      set_show(from.show());
    }
  }
}

void CCSUsrMsg_VGUIMenu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_VGUIMenu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_VGUIMenu::CopyFrom(const CCSUsrMsg_VGUIMenu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_VGUIMenu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_VGUIMenu::IsInitialized() const {
  return true;
}

void CCSUsrMsg_VGUIMenu::Swap(CCSUsrMsg_VGUIMenu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_VGUIMenu::InternalSwap(CCSUsrMsg_VGUIMenu* other) {
  subkeys_.UnsafeArenaSwap(&other->subkeys_);
  name_.Swap(&other->name_);
  std::swap(show_, other->show_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_VGUIMenu::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_VGUIMenu

// optional string name = 1;
bool CCSUsrMsg_VGUIMenu::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_VGUIMenu::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_VGUIMenu::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_VGUIMenu::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& CCSUsrMsg_VGUIMenu::name() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VGUIMenu.name)
  return name_.GetNoArena();
}
void CCSUsrMsg_VGUIMenu::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VGUIMenu.name)
}
#if LANG_CXX11
void CCSUsrMsg_VGUIMenu::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_VGUIMenu.name)
}
#endif
void CCSUsrMsg_VGUIMenu::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_VGUIMenu.name)
}
void CCSUsrMsg_VGUIMenu::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_VGUIMenu.name)
}
::std::string* CCSUsrMsg_VGUIMenu::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VGUIMenu.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_VGUIMenu::release_name() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VGUIMenu.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_VGUIMenu::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VGUIMenu.name)
}

// optional bool show = 2;
bool CCSUsrMsg_VGUIMenu::has_show() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_VGUIMenu::set_has_show() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_VGUIMenu::clear_has_show() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_VGUIMenu::clear_show() {
  show_ = false;
  clear_has_show();
}
bool CCSUsrMsg_VGUIMenu::show() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VGUIMenu.show)
  return show_;
}
void CCSUsrMsg_VGUIMenu::set_show(bool value) {
  set_has_show();
  show_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VGUIMenu.show)
}

// repeated .CCSUsrMsg_VGUIMenu.Subkey subkeys = 3;
int CCSUsrMsg_VGUIMenu::subkeys_size() const {
  return subkeys_.size();
}
void CCSUsrMsg_VGUIMenu::clear_subkeys() {
  subkeys_.Clear();
}
const ::CCSUsrMsg_VGUIMenu_Subkey& CCSUsrMsg_VGUIMenu::subkeys(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VGUIMenu.subkeys)
  return subkeys_.Get(index);
}
::CCSUsrMsg_VGUIMenu_Subkey* CCSUsrMsg_VGUIMenu::mutable_subkeys(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VGUIMenu.subkeys)
  return subkeys_.Mutable(index);
}
::CCSUsrMsg_VGUIMenu_Subkey* CCSUsrMsg_VGUIMenu::add_subkeys() {
  // @@protoc_insertion_point(field_add:CCSUsrMsg_VGUIMenu.subkeys)
  return subkeys_.Add();
}
::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey >*
CCSUsrMsg_VGUIMenu::mutable_subkeys() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_VGUIMenu.subkeys)
  return &subkeys_;
}
const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey >&
CCSUsrMsg_VGUIMenu::subkeys() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_VGUIMenu.subkeys)
  return subkeys_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_Geiger::kRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_Geiger::CCSUsrMsg_Geiger()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_Geiger)
}
CCSUsrMsg_Geiger::CCSUsrMsg_Geiger(const CCSUsrMsg_Geiger& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  range_ = from.range_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_Geiger)
}

void CCSUsrMsg_Geiger::SharedCtor() {
  _cached_size_ = 0;
  range_ = 0;
}

CCSUsrMsg_Geiger::~CCSUsrMsg_Geiger() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_Geiger)
  SharedDtor();
}

void CCSUsrMsg_Geiger::SharedDtor() {
}

void CCSUsrMsg_Geiger::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_Geiger::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[2].descriptor;
}

const CCSUsrMsg_Geiger& CCSUsrMsg_Geiger::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_Geiger* CCSUsrMsg_Geiger::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_Geiger* n = new CCSUsrMsg_Geiger;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_Geiger::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_Geiger)
  range_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_Geiger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_Geiger)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 range = 1;
      case 1: {
        if (tag == 8u) {
          set_has_range();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_Geiger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_Geiger)
  return false;
#undef DO_
}

void CCSUsrMsg_Geiger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_Geiger)
  // optional int32 range = 1;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->range(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_Geiger)
}

::google::protobuf::uint8* CCSUsrMsg_Geiger::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_Geiger)
  // optional int32 range = 1;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->range(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_Geiger)
  return target;
}

size_t CCSUsrMsg_Geiger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_Geiger)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 range = 1;
  if (has_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->range());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_Geiger::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_Geiger)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_Geiger* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_Geiger>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_Geiger)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_Geiger)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_Geiger::MergeFrom(const CCSUsrMsg_Geiger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_Geiger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_range()) {
    set_range(from.range());
  }
}

void CCSUsrMsg_Geiger::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_Geiger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_Geiger::CopyFrom(const CCSUsrMsg_Geiger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_Geiger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_Geiger::IsInitialized() const {
  return true;
}

void CCSUsrMsg_Geiger::Swap(CCSUsrMsg_Geiger* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_Geiger::InternalSwap(CCSUsrMsg_Geiger* other) {
  std::swap(range_, other->range_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_Geiger::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_Geiger

// optional int32 range = 1;
bool CCSUsrMsg_Geiger::has_range() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_Geiger::set_has_range() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_Geiger::clear_has_range() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_Geiger::clear_range() {
  range_ = 0;
  clear_has_range();
}
::google::protobuf::int32 CCSUsrMsg_Geiger::range() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Geiger.range)
  return range_;
}
void CCSUsrMsg_Geiger::set_range(::google::protobuf::int32 value) {
  set_has_range();
  range_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Geiger.range)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_Train::kTrainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_Train::CCSUsrMsg_Train()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_Train)
}
CCSUsrMsg_Train::CCSUsrMsg_Train(const CCSUsrMsg_Train& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  train_ = from.train_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_Train)
}

void CCSUsrMsg_Train::SharedCtor() {
  _cached_size_ = 0;
  train_ = 0;
}

CCSUsrMsg_Train::~CCSUsrMsg_Train() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_Train)
  SharedDtor();
}

void CCSUsrMsg_Train::SharedDtor() {
}

void CCSUsrMsg_Train::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_Train::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[3].descriptor;
}

const CCSUsrMsg_Train& CCSUsrMsg_Train::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_Train* CCSUsrMsg_Train::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_Train* n = new CCSUsrMsg_Train;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_Train::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_Train)
  train_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_Train::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_Train)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 train = 1;
      case 1: {
        if (tag == 8u) {
          set_has_train();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &train_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_Train)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_Train)
  return false;
#undef DO_
}

void CCSUsrMsg_Train::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_Train)
  // optional int32 train = 1;
  if (has_train()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->train(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_Train)
}

::google::protobuf::uint8* CCSUsrMsg_Train::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_Train)
  // optional int32 train = 1;
  if (has_train()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->train(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_Train)
  return target;
}

size_t CCSUsrMsg_Train::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_Train)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 train = 1;
  if (has_train()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->train());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_Train::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_Train)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_Train* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_Train>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_Train)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_Train)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_Train::MergeFrom(const CCSUsrMsg_Train& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_Train)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_train()) {
    set_train(from.train());
  }
}

void CCSUsrMsg_Train::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_Train)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_Train::CopyFrom(const CCSUsrMsg_Train& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_Train)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_Train::IsInitialized() const {
  return true;
}

void CCSUsrMsg_Train::Swap(CCSUsrMsg_Train* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_Train::InternalSwap(CCSUsrMsg_Train* other) {
  std::swap(train_, other->train_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_Train::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_Train

// optional int32 train = 1;
bool CCSUsrMsg_Train::has_train() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_Train::set_has_train() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_Train::clear_has_train() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_Train::clear_train() {
  train_ = 0;
  clear_has_train();
}
::google::protobuf::int32 CCSUsrMsg_Train::train() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Train.train)
  return train_;
}
void CCSUsrMsg_Train::set_train(::google::protobuf::int32 value) {
  set_has_train();
  train_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Train.train)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_HudText::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_HudText::CCSUsrMsg_HudText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_HudText)
}
CCSUsrMsg_HudText::CCSUsrMsg_HudText(const CCSUsrMsg_HudText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_HudText)
}

void CCSUsrMsg_HudText::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCSUsrMsg_HudText::~CCSUsrMsg_HudText() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_HudText)
  SharedDtor();
}

void CCSUsrMsg_HudText::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_HudText::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_HudText::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[4].descriptor;
}

const CCSUsrMsg_HudText& CCSUsrMsg_HudText::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_HudText* CCSUsrMsg_HudText::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_HudText* n = new CCSUsrMsg_HudText;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_HudText::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_HudText)
  if (has_text()) {
    GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*text_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_HudText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_HudText)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string text = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_HudText.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_HudText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_HudText)
  return false;
#undef DO_
}

void CCSUsrMsg_HudText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_HudText)
  // optional string text = 1;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_HudText.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_HudText)
}

::google::protobuf::uint8* CCSUsrMsg_HudText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_HudText)
  // optional string text = 1;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_HudText.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_HudText)
  return target;
}

size_t CCSUsrMsg_HudText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_HudText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string text = 1;
  if (has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_HudText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_HudText)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_HudText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_HudText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_HudText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_HudText)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_HudText::MergeFrom(const CCSUsrMsg_HudText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_HudText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_text()) {
    set_has_text();
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void CCSUsrMsg_HudText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_HudText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_HudText::CopyFrom(const CCSUsrMsg_HudText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_HudText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_HudText::IsInitialized() const {
  return true;
}

void CCSUsrMsg_HudText::Swap(CCSUsrMsg_HudText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_HudText::InternalSwap(CCSUsrMsg_HudText* other) {
  text_.Swap(&other->text_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_HudText::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_HudText

// optional string text = 1;
bool CCSUsrMsg_HudText::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_HudText::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_HudText::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_HudText::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& CCSUsrMsg_HudText::text() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudText.text)
  return text_.GetNoArena();
}
void CCSUsrMsg_HudText::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudText.text)
}
#if LANG_CXX11
void CCSUsrMsg_HudText::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_HudText.text)
}
#endif
void CCSUsrMsg_HudText::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_HudText.text)
}
void CCSUsrMsg_HudText::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_HudText.text)
}
::std::string* CCSUsrMsg_HudText::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_HudText.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_HudText::release_text() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_HudText.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_HudText::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_HudText.text)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_SayText::kEntIdxFieldNumber;
const int CCSUsrMsg_SayText::kTextFieldNumber;
const int CCSUsrMsg_SayText::kChatFieldNumber;
const int CCSUsrMsg_SayText::kTextallchatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_SayText::CCSUsrMsg_SayText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_SayText)
}
CCSUsrMsg_SayText::CCSUsrMsg_SayText(const CCSUsrMsg_SayText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&ent_idx_, &from.ent_idx_,
    reinterpret_cast<char*>(&textallchat_) -
    reinterpret_cast<char*>(&ent_idx_) + sizeof(textallchat_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_SayText)
}

void CCSUsrMsg_SayText::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ent_idx_, 0, reinterpret_cast<char*>(&textallchat_) -
    reinterpret_cast<char*>(&ent_idx_) + sizeof(textallchat_));
}

CCSUsrMsg_SayText::~CCSUsrMsg_SayText() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_SayText)
  SharedDtor();
}

void CCSUsrMsg_SayText::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_SayText::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_SayText::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[5].descriptor;
}

const CCSUsrMsg_SayText& CCSUsrMsg_SayText::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_SayText* CCSUsrMsg_SayText::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_SayText* n = new CCSUsrMsg_SayText;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_SayText::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_SayText)
  if (has_text()) {
    GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*text_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&ent_idx_, 0, reinterpret_cast<char*>(&textallchat_) -
      reinterpret_cast<char*>(&ent_idx_) + sizeof(textallchat_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_SayText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_SayText)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ent_idx = 1;
      case 1: {
        if (tag == 8u) {
          set_has_ent_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ent_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_SayText.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool chat = 3;
      case 3: {
        if (tag == 24u) {
          set_has_chat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &chat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool textallchat = 4;
      case 4: {
        if (tag == 32u) {
          set_has_textallchat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &textallchat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_SayText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_SayText)
  return false;
#undef DO_
}

void CCSUsrMsg_SayText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_SayText)
  // optional int32 ent_idx = 1;
  if (has_ent_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ent_idx(), output);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_SayText.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // optional bool chat = 3;
  if (has_chat()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->chat(), output);
  }

  // optional bool textallchat = 4;
  if (has_textallchat()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->textallchat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_SayText)
}

::google::protobuf::uint8* CCSUsrMsg_SayText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_SayText)
  // optional int32 ent_idx = 1;
  if (has_ent_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ent_idx(), target);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_SayText.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // optional bool chat = 3;
  if (has_chat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->chat(), target);
  }

  // optional bool textallchat = 4;
  if (has_textallchat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->textallchat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_SayText)
  return target;
}

size_t CCSUsrMsg_SayText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_SayText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional int32 ent_idx = 1;
    if (has_ent_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ent_idx());
    }

    // optional bool chat = 3;
    if (has_chat()) {
      total_size += 1 + 1;
    }

    // optional bool textallchat = 4;
    if (has_textallchat()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_SayText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_SayText)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_SayText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_SayText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_SayText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_SayText)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_SayText::MergeFrom(const CCSUsrMsg_SayText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_SayText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_text()) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (from.has_ent_idx()) {
      set_ent_idx(from.ent_idx());
    }
    if (from.has_chat()) {
      set_chat(from.chat());
    }
    if (from.has_textallchat()) {
      set_textallchat(from.textallchat());
    }
  }
}

void CCSUsrMsg_SayText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_SayText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_SayText::CopyFrom(const CCSUsrMsg_SayText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_SayText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_SayText::IsInitialized() const {
  return true;
}

void CCSUsrMsg_SayText::Swap(CCSUsrMsg_SayText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_SayText::InternalSwap(CCSUsrMsg_SayText* other) {
  text_.Swap(&other->text_);
  std::swap(ent_idx_, other->ent_idx_);
  std::swap(chat_, other->chat_);
  std::swap(textallchat_, other->textallchat_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_SayText::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_SayText

// optional int32 ent_idx = 1;
bool CCSUsrMsg_SayText::has_ent_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_SayText::set_has_ent_idx() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_SayText::clear_has_ent_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_SayText::clear_ent_idx() {
  ent_idx_ = 0;
  clear_has_ent_idx();
}
::google::protobuf::int32 CCSUsrMsg_SayText::ent_idx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText.ent_idx)
  return ent_idx_;
}
void CCSUsrMsg_SayText::set_ent_idx(::google::protobuf::int32 value) {
  set_has_ent_idx();
  ent_idx_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText.ent_idx)
}

// optional string text = 2;
bool CCSUsrMsg_SayText::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_SayText::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_SayText::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_SayText::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& CCSUsrMsg_SayText::text() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText.text)
  return text_.GetNoArena();
}
void CCSUsrMsg_SayText::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText.text)
}
#if LANG_CXX11
void CCSUsrMsg_SayText::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_SayText.text)
}
#endif
void CCSUsrMsg_SayText::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_SayText.text)
}
void CCSUsrMsg_SayText::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_SayText.text)
}
::std::string* CCSUsrMsg_SayText::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_SayText.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_SayText::release_text() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_SayText.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_SayText::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_SayText.text)
}

// optional bool chat = 3;
bool CCSUsrMsg_SayText::has_chat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_SayText::set_has_chat() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_SayText::clear_has_chat() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_SayText::clear_chat() {
  chat_ = false;
  clear_has_chat();
}
bool CCSUsrMsg_SayText::chat() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText.chat)
  return chat_;
}
void CCSUsrMsg_SayText::set_chat(bool value) {
  set_has_chat();
  chat_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText.chat)
}

// optional bool textallchat = 4;
bool CCSUsrMsg_SayText::has_textallchat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CCSUsrMsg_SayText::set_has_textallchat() {
  _has_bits_[0] |= 0x00000008u;
}
void CCSUsrMsg_SayText::clear_has_textallchat() {
  _has_bits_[0] &= ~0x00000008u;
}
void CCSUsrMsg_SayText::clear_textallchat() {
  textallchat_ = false;
  clear_has_textallchat();
}
bool CCSUsrMsg_SayText::textallchat() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText.textallchat)
  return textallchat_;
}
void CCSUsrMsg_SayText::set_textallchat(bool value) {
  set_has_textallchat();
  textallchat_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText.textallchat)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_SayText2::kEntIdxFieldNumber;
const int CCSUsrMsg_SayText2::kChatFieldNumber;
const int CCSUsrMsg_SayText2::kMsgNameFieldNumber;
const int CCSUsrMsg_SayText2::kParamsFieldNumber;
const int CCSUsrMsg_SayText2::kTextallchatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_SayText2::CCSUsrMsg_SayText2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_SayText2)
}
CCSUsrMsg_SayText2::CCSUsrMsg_SayText2(const CCSUsrMsg_SayText2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg_name()) {
    msg_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_name_);
  }
  ::memcpy(&ent_idx_, &from.ent_idx_,
    reinterpret_cast<char*>(&textallchat_) -
    reinterpret_cast<char*>(&ent_idx_) + sizeof(textallchat_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_SayText2)
}

void CCSUsrMsg_SayText2::SharedCtor() {
  _cached_size_ = 0;
  msg_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ent_idx_, 0, reinterpret_cast<char*>(&textallchat_) -
    reinterpret_cast<char*>(&ent_idx_) + sizeof(textallchat_));
}

CCSUsrMsg_SayText2::~CCSUsrMsg_SayText2() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_SayText2)
  SharedDtor();
}

void CCSUsrMsg_SayText2::SharedDtor() {
  msg_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_SayText2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_SayText2::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[6].descriptor;
}

const CCSUsrMsg_SayText2& CCSUsrMsg_SayText2::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_SayText2* CCSUsrMsg_SayText2::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_SayText2* n = new CCSUsrMsg_SayText2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_SayText2::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_SayText2)
  params_.Clear();
  if (has_msg_name()) {
    GOOGLE_DCHECK(!msg_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*msg_name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&ent_idx_, 0, reinterpret_cast<char*>(&textallchat_) -
      reinterpret_cast<char*>(&ent_idx_) + sizeof(textallchat_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_SayText2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_SayText2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ent_idx = 1;
      case 1: {
        if (tag == 8u) {
          set_has_ent_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ent_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool chat = 2;
      case 2: {
        if (tag == 16u) {
          set_has_chat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &chat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg_name = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg_name().data(), this->msg_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_SayText2.msg_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string params = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_params()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->params(this->params_size() - 1).data(),
            this->params(this->params_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_SayText2.params");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool textallchat = 5;
      case 5: {
        if (tag == 40u) {
          set_has_textallchat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &textallchat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_SayText2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_SayText2)
  return false;
#undef DO_
}

void CCSUsrMsg_SayText2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_SayText2)
  // optional int32 ent_idx = 1;
  if (has_ent_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ent_idx(), output);
  }

  // optional bool chat = 2;
  if (has_chat()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->chat(), output);
  }

  // optional string msg_name = 3;
  if (has_msg_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg_name().data(), this->msg_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_SayText2.msg_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg_name(), output);
  }

  // repeated string params = 4;
  for (int i = 0; i < this->params_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->params(i).data(), this->params(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_SayText2.params");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->params(i), output);
  }

  // optional bool textallchat = 5;
  if (has_textallchat()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->textallchat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_SayText2)
}

::google::protobuf::uint8* CCSUsrMsg_SayText2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_SayText2)
  // optional int32 ent_idx = 1;
  if (has_ent_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ent_idx(), target);
  }

  // optional bool chat = 2;
  if (has_chat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->chat(), target);
  }

  // optional string msg_name = 3;
  if (has_msg_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg_name().data(), this->msg_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_SayText2.msg_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg_name(), target);
  }

  // repeated string params = 4;
  for (int i = 0; i < this->params_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->params(i).data(), this->params(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_SayText2.params");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->params(i), target);
  }

  // optional bool textallchat = 5;
  if (has_textallchat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->textallchat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_SayText2)
  return target;
}

size_t CCSUsrMsg_SayText2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_SayText2)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated string params = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->params_size());
  for (int i = 0; i < this->params_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->params(i));
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string msg_name = 3;
    if (has_msg_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg_name());
    }

    // optional int32 ent_idx = 1;
    if (has_ent_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ent_idx());
    }

    // optional bool chat = 2;
    if (has_chat()) {
      total_size += 1 + 1;
    }

    // optional bool textallchat = 5;
    if (has_textallchat()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_SayText2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_SayText2)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_SayText2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_SayText2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_SayText2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_SayText2)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_SayText2::MergeFrom(const CCSUsrMsg_SayText2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_SayText2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  params_.MergeFrom(from.params_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_msg_name()) {
      set_has_msg_name();
      msg_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_name_);
    }
    if (from.has_ent_idx()) {
      set_ent_idx(from.ent_idx());
    }
    if (from.has_chat()) {
      set_chat(from.chat());
    }
    if (from.has_textallchat()) {
      set_textallchat(from.textallchat());
    }
  }
}

void CCSUsrMsg_SayText2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_SayText2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_SayText2::CopyFrom(const CCSUsrMsg_SayText2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_SayText2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_SayText2::IsInitialized() const {
  return true;
}

void CCSUsrMsg_SayText2::Swap(CCSUsrMsg_SayText2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_SayText2::InternalSwap(CCSUsrMsg_SayText2* other) {
  params_.UnsafeArenaSwap(&other->params_);
  msg_name_.Swap(&other->msg_name_);
  std::swap(ent_idx_, other->ent_idx_);
  std::swap(chat_, other->chat_);
  std::swap(textallchat_, other->textallchat_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_SayText2::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_SayText2

// optional int32 ent_idx = 1;
bool CCSUsrMsg_SayText2::has_ent_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_SayText2::set_has_ent_idx() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_SayText2::clear_has_ent_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_SayText2::clear_ent_idx() {
  ent_idx_ = 0;
  clear_has_ent_idx();
}
::google::protobuf::int32 CCSUsrMsg_SayText2::ent_idx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText2.ent_idx)
  return ent_idx_;
}
void CCSUsrMsg_SayText2::set_ent_idx(::google::protobuf::int32 value) {
  set_has_ent_idx();
  ent_idx_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText2.ent_idx)
}

// optional bool chat = 2;
bool CCSUsrMsg_SayText2::has_chat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_SayText2::set_has_chat() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_SayText2::clear_has_chat() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_SayText2::clear_chat() {
  chat_ = false;
  clear_has_chat();
}
bool CCSUsrMsg_SayText2::chat() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText2.chat)
  return chat_;
}
void CCSUsrMsg_SayText2::set_chat(bool value) {
  set_has_chat();
  chat_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText2.chat)
}

// optional string msg_name = 3;
bool CCSUsrMsg_SayText2::has_msg_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_SayText2::set_has_msg_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_SayText2::clear_has_msg_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_SayText2::clear_msg_name() {
  msg_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg_name();
}
const ::std::string& CCSUsrMsg_SayText2::msg_name() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText2.msg_name)
  return msg_name_.GetNoArena();
}
void CCSUsrMsg_SayText2::set_msg_name(const ::std::string& value) {
  set_has_msg_name();
  msg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText2.msg_name)
}
#if LANG_CXX11
void CCSUsrMsg_SayText2::set_msg_name(::std::string&& value) {
  set_has_msg_name();
  msg_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_SayText2.msg_name)
}
#endif
void CCSUsrMsg_SayText2::set_msg_name(const char* value) {
  set_has_msg_name();
  msg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_SayText2.msg_name)
}
void CCSUsrMsg_SayText2::set_msg_name(const char* value, size_t size) {
  set_has_msg_name();
  msg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_SayText2.msg_name)
}
::std::string* CCSUsrMsg_SayText2::mutable_msg_name() {
  set_has_msg_name();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_SayText2.msg_name)
  return msg_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_SayText2::release_msg_name() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_SayText2.msg_name)
  clear_has_msg_name();
  return msg_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_SayText2::set_allocated_msg_name(::std::string* msg_name) {
  if (msg_name != NULL) {
    set_has_msg_name();
  } else {
    clear_has_msg_name();
  }
  msg_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_name);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_SayText2.msg_name)
}

// repeated string params = 4;
int CCSUsrMsg_SayText2::params_size() const {
  return params_.size();
}
void CCSUsrMsg_SayText2::clear_params() {
  params_.Clear();
}
const ::std::string& CCSUsrMsg_SayText2::params(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText2.params)
  return params_.Get(index);
}
::std::string* CCSUsrMsg_SayText2::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_SayText2.params)
  return params_.Mutable(index);
}
void CCSUsrMsg_SayText2::set_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText2.params)
  params_.Mutable(index)->assign(value);
}
void CCSUsrMsg_SayText2::set_params(int index, const char* value) {
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_SayText2.params)
}
void CCSUsrMsg_SayText2::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_SayText2.params)
}
::std::string* CCSUsrMsg_SayText2::add_params() {
  // @@protoc_insertion_point(field_add_mutable:CCSUsrMsg_SayText2.params)
  return params_.Add();
}
void CCSUsrMsg_SayText2::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CCSUsrMsg_SayText2.params)
}
void CCSUsrMsg_SayText2::add_params(const char* value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CCSUsrMsg_SayText2.params)
}
void CCSUsrMsg_SayText2::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CCSUsrMsg_SayText2.params)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_SayText2::params() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_SayText2.params)
  return params_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_SayText2::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_SayText2.params)
  return &params_;
}

// optional bool textallchat = 5;
bool CCSUsrMsg_SayText2::has_textallchat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CCSUsrMsg_SayText2::set_has_textallchat() {
  _has_bits_[0] |= 0x00000008u;
}
void CCSUsrMsg_SayText2::clear_has_textallchat() {
  _has_bits_[0] &= ~0x00000008u;
}
void CCSUsrMsg_SayText2::clear_textallchat() {
  textallchat_ = false;
  clear_has_textallchat();
}
bool CCSUsrMsg_SayText2::textallchat() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText2.textallchat)
  return textallchat_;
}
void CCSUsrMsg_SayText2::set_textallchat(bool value) {
  set_has_textallchat();
  textallchat_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText2.textallchat)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_TextMsg::kMsgDstFieldNumber;
const int CCSUsrMsg_TextMsg::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_TextMsg::CCSUsrMsg_TextMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_TextMsg)
}
CCSUsrMsg_TextMsg::CCSUsrMsg_TextMsg(const CCSUsrMsg_TextMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_dst_ = from.msg_dst_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_TextMsg)
}

void CCSUsrMsg_TextMsg::SharedCtor() {
  _cached_size_ = 0;
  msg_dst_ = 0;
}

CCSUsrMsg_TextMsg::~CCSUsrMsg_TextMsg() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_TextMsg)
  SharedDtor();
}

void CCSUsrMsg_TextMsg::SharedDtor() {
}

void CCSUsrMsg_TextMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_TextMsg::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[7].descriptor;
}

const CCSUsrMsg_TextMsg& CCSUsrMsg_TextMsg::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_TextMsg* CCSUsrMsg_TextMsg::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_TextMsg* n = new CCSUsrMsg_TextMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_TextMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_TextMsg)
  params_.Clear();
  msg_dst_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_TextMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_TextMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 msg_dst = 1;
      case 1: {
        if (tag == 8u) {
          set_has_msg_dst();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_dst_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string params = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_params()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->params(this->params_size() - 1).data(),
            this->params(this->params_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_TextMsg.params");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_TextMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_TextMsg)
  return false;
#undef DO_
}

void CCSUsrMsg_TextMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_TextMsg)
  // optional int32 msg_dst = 1;
  if (has_msg_dst()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msg_dst(), output);
  }

  // repeated string params = 3;
  for (int i = 0; i < this->params_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->params(i).data(), this->params(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_TextMsg.params");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->params(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_TextMsg)
}

::google::protobuf::uint8* CCSUsrMsg_TextMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_TextMsg)
  // optional int32 msg_dst = 1;
  if (has_msg_dst()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msg_dst(), target);
  }

  // repeated string params = 3;
  for (int i = 0; i < this->params_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->params(i).data(), this->params(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_TextMsg.params");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->params(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_TextMsg)
  return target;
}

size_t CCSUsrMsg_TextMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_TextMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated string params = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->params_size());
  for (int i = 0; i < this->params_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->params(i));
  }

  // optional int32 msg_dst = 1;
  if (has_msg_dst()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msg_dst());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_TextMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_TextMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_TextMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_TextMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_TextMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_TextMsg)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_TextMsg::MergeFrom(const CCSUsrMsg_TextMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_TextMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  params_.MergeFrom(from.params_);
  if (from.has_msg_dst()) {
    set_msg_dst(from.msg_dst());
  }
}

void CCSUsrMsg_TextMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_TextMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_TextMsg::CopyFrom(const CCSUsrMsg_TextMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_TextMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_TextMsg::IsInitialized() const {
  return true;
}

void CCSUsrMsg_TextMsg::Swap(CCSUsrMsg_TextMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_TextMsg::InternalSwap(CCSUsrMsg_TextMsg* other) {
  params_.UnsafeArenaSwap(&other->params_);
  std::swap(msg_dst_, other->msg_dst_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_TextMsg::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_TextMsg

// optional int32 msg_dst = 1;
bool CCSUsrMsg_TextMsg::has_msg_dst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_TextMsg::set_has_msg_dst() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_TextMsg::clear_has_msg_dst() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_TextMsg::clear_msg_dst() {
  msg_dst_ = 0;
  clear_has_msg_dst();
}
::google::protobuf::int32 CCSUsrMsg_TextMsg::msg_dst() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_TextMsg.msg_dst)
  return msg_dst_;
}
void CCSUsrMsg_TextMsg::set_msg_dst(::google::protobuf::int32 value) {
  set_has_msg_dst();
  msg_dst_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_TextMsg.msg_dst)
}

// repeated string params = 3;
int CCSUsrMsg_TextMsg::params_size() const {
  return params_.size();
}
void CCSUsrMsg_TextMsg::clear_params() {
  params_.Clear();
}
const ::std::string& CCSUsrMsg_TextMsg::params(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_TextMsg.params)
  return params_.Get(index);
}
::std::string* CCSUsrMsg_TextMsg::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_TextMsg.params)
  return params_.Mutable(index);
}
void CCSUsrMsg_TextMsg::set_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CCSUsrMsg_TextMsg.params)
  params_.Mutable(index)->assign(value);
}
void CCSUsrMsg_TextMsg::set_params(int index, const char* value) {
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_TextMsg.params)
}
void CCSUsrMsg_TextMsg::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_TextMsg.params)
}
::std::string* CCSUsrMsg_TextMsg::add_params() {
  // @@protoc_insertion_point(field_add_mutable:CCSUsrMsg_TextMsg.params)
  return params_.Add();
}
void CCSUsrMsg_TextMsg::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CCSUsrMsg_TextMsg.params)
}
void CCSUsrMsg_TextMsg::add_params(const char* value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CCSUsrMsg_TextMsg.params)
}
void CCSUsrMsg_TextMsg::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CCSUsrMsg_TextMsg.params)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_TextMsg::params() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_TextMsg.params)
  return params_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_TextMsg::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_TextMsg.params)
  return &params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_HudMsg::kChannelFieldNumber;
const int CCSUsrMsg_HudMsg::kPosFieldNumber;
const int CCSUsrMsg_HudMsg::kClr1FieldNumber;
const int CCSUsrMsg_HudMsg::kClr2FieldNumber;
const int CCSUsrMsg_HudMsg::kEffectFieldNumber;
const int CCSUsrMsg_HudMsg::kFadeInTimeFieldNumber;
const int CCSUsrMsg_HudMsg::kFadeOutTimeFieldNumber;
const int CCSUsrMsg_HudMsg::kHoldTimeFieldNumber;
const int CCSUsrMsg_HudMsg::kFxTimeFieldNumber;
const int CCSUsrMsg_HudMsg::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_HudMsg::CCSUsrMsg_HudMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_HudMsg)
}
CCSUsrMsg_HudMsg::CCSUsrMsg_HudMsg(const CCSUsrMsg_HudMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_pos()) {
    pos_ = new ::CMsgVector2D(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_clr1()) {
    clr1_ = new ::CMsgRGBA(*from.clr1_);
  } else {
    clr1_ = NULL;
  }
  if (from.has_clr2()) {
    clr2_ = new ::CMsgRGBA(*from.clr2_);
  } else {
    clr2_ = NULL;
  }
  ::memcpy(&channel_, &from.channel_,
    reinterpret_cast<char*>(&fx_time_) -
    reinterpret_cast<char*>(&channel_) + sizeof(fx_time_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_HudMsg)
}

void CCSUsrMsg_HudMsg::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pos_, 0, reinterpret_cast<char*>(&fx_time_) -
    reinterpret_cast<char*>(&pos_) + sizeof(fx_time_));
}

CCSUsrMsg_HudMsg::~CCSUsrMsg_HudMsg() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_HudMsg)
  SharedDtor();
}

void CCSUsrMsg_HudMsg::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete pos_;
  }
  if (this != internal_default_instance()) {
    delete clr1_;
  }
  if (this != internal_default_instance()) {
    delete clr2_;
  }
}

void CCSUsrMsg_HudMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_HudMsg::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[8].descriptor;
}

const CCSUsrMsg_HudMsg& CCSUsrMsg_HudMsg::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_HudMsg* CCSUsrMsg_HudMsg::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_HudMsg* n = new CCSUsrMsg_HudMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_HudMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_HudMsg)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_text()) {
      GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*text_.UnsafeRawStringPointer())->clear();
    }
    if (has_pos()) {
      GOOGLE_DCHECK(pos_ != NULL);
      pos_->::CMsgVector2D::Clear();
    }
    if (has_clr1()) {
      GOOGLE_DCHECK(clr1_ != NULL);
      clr1_->::CMsgRGBA::Clear();
    }
    if (has_clr2()) {
      GOOGLE_DCHECK(clr2_ != NULL);
      clr2_->::CMsgRGBA::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 240u) {
    ::memset(&channel_, 0, reinterpret_cast<char*>(&fade_out_time_) -
      reinterpret_cast<char*>(&channel_) + sizeof(fade_out_time_));
  }
  if (_has_bits_[8 / 32] & 768u) {
    ::memset(&hold_time_, 0, reinterpret_cast<char*>(&fx_time_) -
      reinterpret_cast<char*>(&hold_time_) + sizeof(fx_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_HudMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_HudMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 channel = 1;
      case 1: {
        if (tag == 8u) {
          set_has_channel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector2D pos = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgRGBA clr1 = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_clr1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgRGBA clr2 = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_clr2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 effect = 5;
      case 5: {
        if (tag == 40u) {
          set_has_effect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &effect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float fade_in_time = 6;
      case 6: {
        if (tag == 53u) {
          set_has_fade_in_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fade_in_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float fade_out_time = 7;
      case 7: {
        if (tag == 61u) {
          set_has_fade_out_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fade_out_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float hold_time = 9;
      case 9: {
        if (tag == 77u) {
          set_has_hold_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &hold_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float fx_time = 10;
      case 10: {
        if (tag == 85u) {
          set_has_fx_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fx_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_HudMsg.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_HudMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_HudMsg)
  return false;
#undef DO_
}

void CCSUsrMsg_HudMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_HudMsg)
  // optional int32 channel = 1;
  if (has_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->channel(), output);
  }

  // optional .CMsgVector2D pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pos_, output);
  }

  // optional .CMsgRGBA clr1 = 3;
  if (has_clr1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->clr1_, output);
  }

  // optional .CMsgRGBA clr2 = 4;
  if (has_clr2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->clr2_, output);
  }

  // optional int32 effect = 5;
  if (has_effect()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->effect(), output);
  }

  // optional float fade_in_time = 6;
  if (has_fade_in_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->fade_in_time(), output);
  }

  // optional float fade_out_time = 7;
  if (has_fade_out_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->fade_out_time(), output);
  }

  // optional float hold_time = 9;
  if (has_hold_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->hold_time(), output);
  }

  // optional float fx_time = 10;
  if (has_fx_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->fx_time(), output);
  }

  // optional string text = 11;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_HudMsg.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_HudMsg)
}

::google::protobuf::uint8* CCSUsrMsg_HudMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_HudMsg)
  // optional int32 channel = 1;
  if (has_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->channel(), target);
  }

  // optional .CMsgVector2D pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pos_, false, target);
  }

  // optional .CMsgRGBA clr1 = 3;
  if (has_clr1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->clr1_, false, target);
  }

  // optional .CMsgRGBA clr2 = 4;
  if (has_clr2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->clr2_, false, target);
  }

  // optional int32 effect = 5;
  if (has_effect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->effect(), target);
  }

  // optional float fade_in_time = 6;
  if (has_fade_in_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->fade_in_time(), target);
  }

  // optional float fade_out_time = 7;
  if (has_fade_out_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->fade_out_time(), target);
  }

  // optional float hold_time = 9;
  if (has_hold_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->hold_time(), target);
  }

  // optional float fx_time = 10;
  if (has_fx_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->fx_time(), target);
  }

  // optional string text = 11;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_HudMsg.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_HudMsg)
  return target;
}

size_t CCSUsrMsg_HudMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_HudMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string text = 11;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional .CMsgVector2D pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pos_);
    }

    // optional .CMsgRGBA clr1 = 3;
    if (has_clr1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->clr1_);
    }

    // optional .CMsgRGBA clr2 = 4;
    if (has_clr2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->clr2_);
    }

    // optional int32 channel = 1;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->channel());
    }

    // optional int32 effect = 5;
    if (has_effect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->effect());
    }

    // optional float fade_in_time = 6;
    if (has_fade_in_time()) {
      total_size += 1 + 4;
    }

    // optional float fade_out_time = 7;
    if (has_fade_out_time()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional float hold_time = 9;
    if (has_hold_time()) {
      total_size += 1 + 4;
    }

    // optional float fx_time = 10;
    if (has_fx_time()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_HudMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_HudMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_HudMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_HudMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_HudMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_HudMsg)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_HudMsg::MergeFrom(const CCSUsrMsg_HudMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_HudMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_text()) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (from.has_pos()) {
      mutable_pos()->::CMsgVector2D::MergeFrom(from.pos());
    }
    if (from.has_clr1()) {
      mutable_clr1()->::CMsgRGBA::MergeFrom(from.clr1());
    }
    if (from.has_clr2()) {
      mutable_clr2()->::CMsgRGBA::MergeFrom(from.clr2());
    }
    if (from.has_channel()) {
      set_channel(from.channel());
    }
    if (from.has_effect()) {
      set_effect(from.effect());
    }
    if (from.has_fade_in_time()) {
      set_fade_in_time(from.fade_in_time());
    }
    if (from.has_fade_out_time()) {
      set_fade_out_time(from.fade_out_time());
    }
  }
  if (from._has_bits_[8 / 32] & 768u) {
    if (from.has_hold_time()) {
      set_hold_time(from.hold_time());
    }
    if (from.has_fx_time()) {
      set_fx_time(from.fx_time());
    }
  }
}

void CCSUsrMsg_HudMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_HudMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_HudMsg::CopyFrom(const CCSUsrMsg_HudMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_HudMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_HudMsg::IsInitialized() const {
  return true;
}

void CCSUsrMsg_HudMsg::Swap(CCSUsrMsg_HudMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_HudMsg::InternalSwap(CCSUsrMsg_HudMsg* other) {
  text_.Swap(&other->text_);
  std::swap(pos_, other->pos_);
  std::swap(clr1_, other->clr1_);
  std::swap(clr2_, other->clr2_);
  std::swap(channel_, other->channel_);
  std::swap(effect_, other->effect_);
  std::swap(fade_in_time_, other->fade_in_time_);
  std::swap(fade_out_time_, other->fade_out_time_);
  std::swap(hold_time_, other->hold_time_);
  std::swap(fx_time_, other->fx_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_HudMsg::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_HudMsg

// optional int32 channel = 1;
bool CCSUsrMsg_HudMsg::has_channel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CCSUsrMsg_HudMsg::set_has_channel() {
  _has_bits_[0] |= 0x00000010u;
}
void CCSUsrMsg_HudMsg::clear_has_channel() {
  _has_bits_[0] &= ~0x00000010u;
}
void CCSUsrMsg_HudMsg::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
::google::protobuf::int32 CCSUsrMsg_HudMsg::channel() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.channel)
  return channel_;
}
void CCSUsrMsg_HudMsg::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.channel)
}

// optional .CMsgVector2D pos = 2;
bool CCSUsrMsg_HudMsg::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_HudMsg::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_HudMsg::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_HudMsg::clear_pos() {
  if (pos_ != NULL) pos_->::CMsgVector2D::Clear();
  clear_has_pos();
}
const ::CMsgVector2D& CCSUsrMsg_HudMsg::pos() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.pos)
  return pos_ != NULL ? *pos_
                         : *::CMsgVector2D::internal_default_instance();
}
::CMsgVector2D* CCSUsrMsg_HudMsg::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::CMsgVector2D;
  }
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_HudMsg.pos)
  return pos_;
}
::CMsgVector2D* CCSUsrMsg_HudMsg::release_pos() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_HudMsg.pos)
  clear_has_pos();
  ::CMsgVector2D* temp = pos_;
  pos_ = NULL;
  return temp;
}
void CCSUsrMsg_HudMsg::set_allocated_pos(::CMsgVector2D* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_HudMsg.pos)
}

// optional .CMsgRGBA clr1 = 3;
bool CCSUsrMsg_HudMsg::has_clr1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_HudMsg::set_has_clr1() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_HudMsg::clear_has_clr1() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_HudMsg::clear_clr1() {
  if (clr1_ != NULL) clr1_->::CMsgRGBA::Clear();
  clear_has_clr1();
}
const ::CMsgRGBA& CCSUsrMsg_HudMsg::clr1() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.clr1)
  return clr1_ != NULL ? *clr1_
                         : *::CMsgRGBA::internal_default_instance();
}
::CMsgRGBA* CCSUsrMsg_HudMsg::mutable_clr1() {
  set_has_clr1();
  if (clr1_ == NULL) {
    clr1_ = new ::CMsgRGBA;
  }
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_HudMsg.clr1)
  return clr1_;
}
::CMsgRGBA* CCSUsrMsg_HudMsg::release_clr1() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_HudMsg.clr1)
  clear_has_clr1();
  ::CMsgRGBA* temp = clr1_;
  clr1_ = NULL;
  return temp;
}
void CCSUsrMsg_HudMsg::set_allocated_clr1(::CMsgRGBA* clr1) {
  delete clr1_;
  clr1_ = clr1;
  if (clr1) {
    set_has_clr1();
  } else {
    clear_has_clr1();
  }
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_HudMsg.clr1)
}

// optional .CMsgRGBA clr2 = 4;
bool CCSUsrMsg_HudMsg::has_clr2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CCSUsrMsg_HudMsg::set_has_clr2() {
  _has_bits_[0] |= 0x00000008u;
}
void CCSUsrMsg_HudMsg::clear_has_clr2() {
  _has_bits_[0] &= ~0x00000008u;
}
void CCSUsrMsg_HudMsg::clear_clr2() {
  if (clr2_ != NULL) clr2_->::CMsgRGBA::Clear();
  clear_has_clr2();
}
const ::CMsgRGBA& CCSUsrMsg_HudMsg::clr2() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.clr2)
  return clr2_ != NULL ? *clr2_
                         : *::CMsgRGBA::internal_default_instance();
}
::CMsgRGBA* CCSUsrMsg_HudMsg::mutable_clr2() {
  set_has_clr2();
  if (clr2_ == NULL) {
    clr2_ = new ::CMsgRGBA;
  }
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_HudMsg.clr2)
  return clr2_;
}
::CMsgRGBA* CCSUsrMsg_HudMsg::release_clr2() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_HudMsg.clr2)
  clear_has_clr2();
  ::CMsgRGBA* temp = clr2_;
  clr2_ = NULL;
  return temp;
}
void CCSUsrMsg_HudMsg::set_allocated_clr2(::CMsgRGBA* clr2) {
  delete clr2_;
  clr2_ = clr2;
  if (clr2) {
    set_has_clr2();
  } else {
    clear_has_clr2();
  }
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_HudMsg.clr2)
}

// optional int32 effect = 5;
bool CCSUsrMsg_HudMsg::has_effect() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CCSUsrMsg_HudMsg::set_has_effect() {
  _has_bits_[0] |= 0x00000020u;
}
void CCSUsrMsg_HudMsg::clear_has_effect() {
  _has_bits_[0] &= ~0x00000020u;
}
void CCSUsrMsg_HudMsg::clear_effect() {
  effect_ = 0;
  clear_has_effect();
}
::google::protobuf::int32 CCSUsrMsg_HudMsg::effect() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.effect)
  return effect_;
}
void CCSUsrMsg_HudMsg::set_effect(::google::protobuf::int32 value) {
  set_has_effect();
  effect_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.effect)
}

// optional float fade_in_time = 6;
bool CCSUsrMsg_HudMsg::has_fade_in_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CCSUsrMsg_HudMsg::set_has_fade_in_time() {
  _has_bits_[0] |= 0x00000040u;
}
void CCSUsrMsg_HudMsg::clear_has_fade_in_time() {
  _has_bits_[0] &= ~0x00000040u;
}
void CCSUsrMsg_HudMsg::clear_fade_in_time() {
  fade_in_time_ = 0;
  clear_has_fade_in_time();
}
float CCSUsrMsg_HudMsg::fade_in_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.fade_in_time)
  return fade_in_time_;
}
void CCSUsrMsg_HudMsg::set_fade_in_time(float value) {
  set_has_fade_in_time();
  fade_in_time_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.fade_in_time)
}

// optional float fade_out_time = 7;
bool CCSUsrMsg_HudMsg::has_fade_out_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CCSUsrMsg_HudMsg::set_has_fade_out_time() {
  _has_bits_[0] |= 0x00000080u;
}
void CCSUsrMsg_HudMsg::clear_has_fade_out_time() {
  _has_bits_[0] &= ~0x00000080u;
}
void CCSUsrMsg_HudMsg::clear_fade_out_time() {
  fade_out_time_ = 0;
  clear_has_fade_out_time();
}
float CCSUsrMsg_HudMsg::fade_out_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.fade_out_time)
  return fade_out_time_;
}
void CCSUsrMsg_HudMsg::set_fade_out_time(float value) {
  set_has_fade_out_time();
  fade_out_time_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.fade_out_time)
}

// optional float hold_time = 9;
bool CCSUsrMsg_HudMsg::has_hold_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CCSUsrMsg_HudMsg::set_has_hold_time() {
  _has_bits_[0] |= 0x00000100u;
}
void CCSUsrMsg_HudMsg::clear_has_hold_time() {
  _has_bits_[0] &= ~0x00000100u;
}
void CCSUsrMsg_HudMsg::clear_hold_time() {
  hold_time_ = 0;
  clear_has_hold_time();
}
float CCSUsrMsg_HudMsg::hold_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.hold_time)
  return hold_time_;
}
void CCSUsrMsg_HudMsg::set_hold_time(float value) {
  set_has_hold_time();
  hold_time_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.hold_time)
}

// optional float fx_time = 10;
bool CCSUsrMsg_HudMsg::has_fx_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CCSUsrMsg_HudMsg::set_has_fx_time() {
  _has_bits_[0] |= 0x00000200u;
}
void CCSUsrMsg_HudMsg::clear_has_fx_time() {
  _has_bits_[0] &= ~0x00000200u;
}
void CCSUsrMsg_HudMsg::clear_fx_time() {
  fx_time_ = 0;
  clear_has_fx_time();
}
float CCSUsrMsg_HudMsg::fx_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.fx_time)
  return fx_time_;
}
void CCSUsrMsg_HudMsg::set_fx_time(float value) {
  set_has_fx_time();
  fx_time_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.fx_time)
}

// optional string text = 11;
bool CCSUsrMsg_HudMsg::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_HudMsg::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_HudMsg::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_HudMsg::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& CCSUsrMsg_HudMsg::text() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.text)
  return text_.GetNoArena();
}
void CCSUsrMsg_HudMsg::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.text)
}
#if LANG_CXX11
void CCSUsrMsg_HudMsg::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_HudMsg.text)
}
#endif
void CCSUsrMsg_HudMsg::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_HudMsg.text)
}
void CCSUsrMsg_HudMsg::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_HudMsg.text)
}
::std::string* CCSUsrMsg_HudMsg::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_HudMsg.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_HudMsg::release_text() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_HudMsg.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_HudMsg::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_HudMsg.text)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_Shake::kCommandFieldNumber;
const int CCSUsrMsg_Shake::kLocalAmplitudeFieldNumber;
const int CCSUsrMsg_Shake::kFrequencyFieldNumber;
const int CCSUsrMsg_Shake::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_Shake::CCSUsrMsg_Shake()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_Shake)
}
CCSUsrMsg_Shake::CCSUsrMsg_Shake(const CCSUsrMsg_Shake& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&command_, &from.command_,
    reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&command_) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_Shake)
}

void CCSUsrMsg_Shake::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&command_, 0, reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&command_) + sizeof(duration_));
}

CCSUsrMsg_Shake::~CCSUsrMsg_Shake() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_Shake)
  SharedDtor();
}

void CCSUsrMsg_Shake::SharedDtor() {
}

void CCSUsrMsg_Shake::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_Shake::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[9].descriptor;
}

const CCSUsrMsg_Shake& CCSUsrMsg_Shake::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_Shake* CCSUsrMsg_Shake::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_Shake* n = new CCSUsrMsg_Shake;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_Shake::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_Shake)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&command_, 0, reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&command_) + sizeof(duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_Shake::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_Shake)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 command = 1;
      case 1: {
        if (tag == 8u) {
          set_has_command();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &command_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float local_amplitude = 2;
      case 2: {
        if (tag == 21u) {
          set_has_local_amplitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &local_amplitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float frequency = 3;
      case 3: {
        if (tag == 29u) {
          set_has_frequency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 4;
      case 4: {
        if (tag == 37u) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_Shake)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_Shake)
  return false;
#undef DO_
}

void CCSUsrMsg_Shake::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_Shake)
  // optional int32 command = 1;
  if (has_command()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->command(), output);
  }

  // optional float local_amplitude = 2;
  if (has_local_amplitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->local_amplitude(), output);
  }

  // optional float frequency = 3;
  if (has_frequency()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->frequency(), output);
  }

  // optional float duration = 4;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->duration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_Shake)
}

::google::protobuf::uint8* CCSUsrMsg_Shake::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_Shake)
  // optional int32 command = 1;
  if (has_command()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->command(), target);
  }

  // optional float local_amplitude = 2;
  if (has_local_amplitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->local_amplitude(), target);
  }

  // optional float frequency = 3;
  if (has_frequency()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->frequency(), target);
  }

  // optional float duration = 4;
  if (has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->duration(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_Shake)
  return target;
}

size_t CCSUsrMsg_Shake::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_Shake)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 command = 1;
    if (has_command()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->command());
    }

    // optional float local_amplitude = 2;
    if (has_local_amplitude()) {
      total_size += 1 + 4;
    }

    // optional float frequency = 3;
    if (has_frequency()) {
      total_size += 1 + 4;
    }

    // optional float duration = 4;
    if (has_duration()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_Shake::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_Shake)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_Shake* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_Shake>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_Shake)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_Shake)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_Shake::MergeFrom(const CCSUsrMsg_Shake& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_Shake)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_command()) {
      set_command(from.command());
    }
    if (from.has_local_amplitude()) {
      set_local_amplitude(from.local_amplitude());
    }
    if (from.has_frequency()) {
      set_frequency(from.frequency());
    }
    if (from.has_duration()) {
      set_duration(from.duration());
    }
  }
}

void CCSUsrMsg_Shake::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_Shake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_Shake::CopyFrom(const CCSUsrMsg_Shake& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_Shake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_Shake::IsInitialized() const {
  return true;
}

void CCSUsrMsg_Shake::Swap(CCSUsrMsg_Shake* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_Shake::InternalSwap(CCSUsrMsg_Shake* other) {
  std::swap(command_, other->command_);
  std::swap(local_amplitude_, other->local_amplitude_);
  std::swap(frequency_, other->frequency_);
  std::swap(duration_, other->duration_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_Shake::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_Shake

// optional int32 command = 1;
bool CCSUsrMsg_Shake::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_Shake::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_Shake::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_Shake::clear_command() {
  command_ = 0;
  clear_has_command();
}
::google::protobuf::int32 CCSUsrMsg_Shake::command() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Shake.command)
  return command_;
}
void CCSUsrMsg_Shake::set_command(::google::protobuf::int32 value) {
  set_has_command();
  command_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Shake.command)
}

// optional float local_amplitude = 2;
bool CCSUsrMsg_Shake::has_local_amplitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_Shake::set_has_local_amplitude() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_Shake::clear_has_local_amplitude() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_Shake::clear_local_amplitude() {
  local_amplitude_ = 0;
  clear_has_local_amplitude();
}
float CCSUsrMsg_Shake::local_amplitude() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Shake.local_amplitude)
  return local_amplitude_;
}
void CCSUsrMsg_Shake::set_local_amplitude(float value) {
  set_has_local_amplitude();
  local_amplitude_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Shake.local_amplitude)
}

// optional float frequency = 3;
bool CCSUsrMsg_Shake::has_frequency() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_Shake::set_has_frequency() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_Shake::clear_has_frequency() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_Shake::clear_frequency() {
  frequency_ = 0;
  clear_has_frequency();
}
float CCSUsrMsg_Shake::frequency() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Shake.frequency)
  return frequency_;
}
void CCSUsrMsg_Shake::set_frequency(float value) {
  set_has_frequency();
  frequency_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Shake.frequency)
}

// optional float duration = 4;
bool CCSUsrMsg_Shake::has_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CCSUsrMsg_Shake::set_has_duration() {
  _has_bits_[0] |= 0x00000008u;
}
void CCSUsrMsg_Shake::clear_has_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
void CCSUsrMsg_Shake::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
float CCSUsrMsg_Shake::duration() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Shake.duration)
  return duration_;
}
void CCSUsrMsg_Shake::set_duration(float value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Shake.duration)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_Fade::kDurationFieldNumber;
const int CCSUsrMsg_Fade::kHoldTimeFieldNumber;
const int CCSUsrMsg_Fade::kFlagsFieldNumber;
const int CCSUsrMsg_Fade::kClrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_Fade::CCSUsrMsg_Fade()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_Fade)
}
CCSUsrMsg_Fade::CCSUsrMsg_Fade(const CCSUsrMsg_Fade& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_clr()) {
    clr_ = new ::CMsgRGBA(*from.clr_);
  } else {
    clr_ = NULL;
  }
  ::memcpy(&duration_, &from.duration_,
    reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&duration_) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_Fade)
}

void CCSUsrMsg_Fade::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&clr_, 0, reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&clr_) + sizeof(flags_));
}

CCSUsrMsg_Fade::~CCSUsrMsg_Fade() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_Fade)
  SharedDtor();
}

void CCSUsrMsg_Fade::SharedDtor() {
  if (this != internal_default_instance()) {
    delete clr_;
  }
}

void CCSUsrMsg_Fade::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_Fade::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[10].descriptor;
}

const CCSUsrMsg_Fade& CCSUsrMsg_Fade::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_Fade* CCSUsrMsg_Fade::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_Fade* n = new CCSUsrMsg_Fade;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_Fade::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_Fade)
  if (has_clr()) {
    GOOGLE_DCHECK(clr_ != NULL);
    clr_->::CMsgRGBA::Clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&duration_, 0, reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&duration_) + sizeof(flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_Fade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_Fade)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 duration = 1;
      case 1: {
        if (tag == 8u) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 hold_time = 2;
      case 2: {
        if (tag == 16u) {
          set_has_hold_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hold_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 flags = 3;
      case 3: {
        if (tag == 24u) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgRGBA clr = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_clr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_Fade)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_Fade)
  return false;
#undef DO_
}

void CCSUsrMsg_Fade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_Fade)
  // optional int32 duration = 1;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->duration(), output);
  }

  // optional int32 hold_time = 2;
  if (has_hold_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hold_time(), output);
  }

  // optional int32 flags = 3;
  if (has_flags()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->flags(), output);
  }

  // optional .CMsgRGBA clr = 4;
  if (has_clr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->clr_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_Fade)
}

::google::protobuf::uint8* CCSUsrMsg_Fade::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_Fade)
  // optional int32 duration = 1;
  if (has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->duration(), target);
  }

  // optional int32 hold_time = 2;
  if (has_hold_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hold_time(), target);
  }

  // optional int32 flags = 3;
  if (has_flags()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->flags(), target);
  }

  // optional .CMsgRGBA clr = 4;
  if (has_clr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->clr_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_Fade)
  return target;
}

size_t CCSUsrMsg_Fade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_Fade)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .CMsgRGBA clr = 4;
    if (has_clr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->clr_);
    }

    // optional int32 duration = 1;
    if (has_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->duration());
    }

    // optional int32 hold_time = 2;
    if (has_hold_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hold_time());
    }

    // optional int32 flags = 3;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flags());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_Fade::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_Fade)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_Fade* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_Fade>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_Fade)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_Fade)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_Fade::MergeFrom(const CCSUsrMsg_Fade& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_Fade)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_clr()) {
      mutable_clr()->::CMsgRGBA::MergeFrom(from.clr());
    }
    if (from.has_duration()) {
      set_duration(from.duration());
    }
    if (from.has_hold_time()) {
      set_hold_time(from.hold_time());
    }
    if (from.has_flags()) {
      set_flags(from.flags());
    }
  }
}

void CCSUsrMsg_Fade::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_Fade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_Fade::CopyFrom(const CCSUsrMsg_Fade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_Fade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_Fade::IsInitialized() const {
  return true;
}

void CCSUsrMsg_Fade::Swap(CCSUsrMsg_Fade* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_Fade::InternalSwap(CCSUsrMsg_Fade* other) {
  std::swap(clr_, other->clr_);
  std::swap(duration_, other->duration_);
  std::swap(hold_time_, other->hold_time_);
  std::swap(flags_, other->flags_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_Fade::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_Fade

// optional int32 duration = 1;
bool CCSUsrMsg_Fade::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_Fade::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_Fade::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_Fade::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
::google::protobuf::int32 CCSUsrMsg_Fade::duration() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Fade.duration)
  return duration_;
}
void CCSUsrMsg_Fade::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Fade.duration)
}

// optional int32 hold_time = 2;
bool CCSUsrMsg_Fade::has_hold_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_Fade::set_has_hold_time() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_Fade::clear_has_hold_time() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_Fade::clear_hold_time() {
  hold_time_ = 0;
  clear_has_hold_time();
}
::google::protobuf::int32 CCSUsrMsg_Fade::hold_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Fade.hold_time)
  return hold_time_;
}
void CCSUsrMsg_Fade::set_hold_time(::google::protobuf::int32 value) {
  set_has_hold_time();
  hold_time_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Fade.hold_time)
}

// optional int32 flags = 3;
bool CCSUsrMsg_Fade::has_flags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CCSUsrMsg_Fade::set_has_flags() {
  _has_bits_[0] |= 0x00000008u;
}
void CCSUsrMsg_Fade::clear_has_flags() {
  _has_bits_[0] &= ~0x00000008u;
}
void CCSUsrMsg_Fade::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
::google::protobuf::int32 CCSUsrMsg_Fade::flags() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Fade.flags)
  return flags_;
}
void CCSUsrMsg_Fade::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Fade.flags)
}

// optional .CMsgRGBA clr = 4;
bool CCSUsrMsg_Fade::has_clr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_Fade::set_has_clr() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_Fade::clear_has_clr() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_Fade::clear_clr() {
  if (clr_ != NULL) clr_->::CMsgRGBA::Clear();
  clear_has_clr();
}
const ::CMsgRGBA& CCSUsrMsg_Fade::clr() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Fade.clr)
  return clr_ != NULL ? *clr_
                         : *::CMsgRGBA::internal_default_instance();
}
::CMsgRGBA* CCSUsrMsg_Fade::mutable_clr() {
  set_has_clr();
  if (clr_ == NULL) {
    clr_ = new ::CMsgRGBA;
  }
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_Fade.clr)
  return clr_;
}
::CMsgRGBA* CCSUsrMsg_Fade::release_clr() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_Fade.clr)
  clear_has_clr();
  ::CMsgRGBA* temp = clr_;
  clr_ = NULL;
  return temp;
}
void CCSUsrMsg_Fade::set_allocated_clr(::CMsgRGBA* clr) {
  delete clr_;
  clr_ = clr;
  if (clr) {
    set_has_clr();
  } else {
    clear_has_clr();
  }
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_Fade.clr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_Rumble::kIndexFieldNumber;
const int CCSUsrMsg_Rumble::kDataFieldNumber;
const int CCSUsrMsg_Rumble::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_Rumble::CCSUsrMsg_Rumble()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_Rumble)
}
CCSUsrMsg_Rumble::CCSUsrMsg_Rumble(const CCSUsrMsg_Rumble& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&index_) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_Rumble)
}

void CCSUsrMsg_Rumble::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&index_, 0, reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&index_) + sizeof(flags_));
}

CCSUsrMsg_Rumble::~CCSUsrMsg_Rumble() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_Rumble)
  SharedDtor();
}

void CCSUsrMsg_Rumble::SharedDtor() {
}

void CCSUsrMsg_Rumble::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_Rumble::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[11].descriptor;
}

const CCSUsrMsg_Rumble& CCSUsrMsg_Rumble::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_Rumble* CCSUsrMsg_Rumble::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_Rumble* n = new CCSUsrMsg_Rumble;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_Rumble::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_Rumble)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&index_, 0, reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&index_) + sizeof(flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_Rumble::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_Rumble)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (tag == 8u) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 data = 2;
      case 2: {
        if (tag == 16u) {
          set_has_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 flags = 3;
      case 3: {
        if (tag == 24u) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_Rumble)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_Rumble)
  return false;
#undef DO_
}

void CCSUsrMsg_Rumble::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_Rumble)
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // optional int32 data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->data(), output);
  }

  // optional int32 flags = 3;
  if (has_flags()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->flags(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_Rumble)
}

::google::protobuf::uint8* CCSUsrMsg_Rumble::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_Rumble)
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // optional int32 data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->data(), target);
  }

  // optional int32 flags = 3;
  if (has_flags()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->flags(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_Rumble)
  return target;
}

size_t CCSUsrMsg_Rumble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_Rumble)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // optional int32 data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data());
    }

    // optional int32 flags = 3;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flags());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_Rumble::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_Rumble)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_Rumble* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_Rumble>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_Rumble)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_Rumble)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_Rumble::MergeFrom(const CCSUsrMsg_Rumble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_Rumble)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
    if (from.has_flags()) {
      set_flags(from.flags());
    }
  }
}

void CCSUsrMsg_Rumble::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_Rumble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_Rumble::CopyFrom(const CCSUsrMsg_Rumble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_Rumble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_Rumble::IsInitialized() const {
  return true;
}

void CCSUsrMsg_Rumble::Swap(CCSUsrMsg_Rumble* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_Rumble::InternalSwap(CCSUsrMsg_Rumble* other) {
  std::swap(index_, other->index_);
  std::swap(data_, other->data_);
  std::swap(flags_, other->flags_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_Rumble::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_Rumble

// optional int32 index = 1;
bool CCSUsrMsg_Rumble::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_Rumble::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_Rumble::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_Rumble::clear_index() {
  index_ = 0;
  clear_has_index();
}
::google::protobuf::int32 CCSUsrMsg_Rumble::index() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Rumble.index)
  return index_;
}
void CCSUsrMsg_Rumble::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Rumble.index)
}

// optional int32 data = 2;
bool CCSUsrMsg_Rumble::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_Rumble::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_Rumble::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_Rumble::clear_data() {
  data_ = 0;
  clear_has_data();
}
::google::protobuf::int32 CCSUsrMsg_Rumble::data() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Rumble.data)
  return data_;
}
void CCSUsrMsg_Rumble::set_data(::google::protobuf::int32 value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Rumble.data)
}

// optional int32 flags = 3;
bool CCSUsrMsg_Rumble::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_Rumble::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_Rumble::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_Rumble::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
::google::protobuf::int32 CCSUsrMsg_Rumble::flags() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Rumble.flags)
  return flags_;
}
void CCSUsrMsg_Rumble::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Rumble.flags)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_CloseCaption::kHashFieldNumber;
const int CCSUsrMsg_CloseCaption::kDurationFieldNumber;
const int CCSUsrMsg_CloseCaption::kFromPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_CloseCaption::CCSUsrMsg_CloseCaption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_CloseCaption)
}
CCSUsrMsg_CloseCaption::CCSUsrMsg_CloseCaption(const CCSUsrMsg_CloseCaption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hash_, &from.hash_,
    reinterpret_cast<char*>(&from_player_) -
    reinterpret_cast<char*>(&hash_) + sizeof(from_player_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_CloseCaption)
}

void CCSUsrMsg_CloseCaption::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&hash_, 0, reinterpret_cast<char*>(&from_player_) -
    reinterpret_cast<char*>(&hash_) + sizeof(from_player_));
}

CCSUsrMsg_CloseCaption::~CCSUsrMsg_CloseCaption() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_CloseCaption)
  SharedDtor();
}

void CCSUsrMsg_CloseCaption::SharedDtor() {
}

void CCSUsrMsg_CloseCaption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_CloseCaption::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[12].descriptor;
}

const CCSUsrMsg_CloseCaption& CCSUsrMsg_CloseCaption::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_CloseCaption* CCSUsrMsg_CloseCaption::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_CloseCaption* n = new CCSUsrMsg_CloseCaption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_CloseCaption::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_CloseCaption)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&hash_, 0, reinterpret_cast<char*>(&from_player_) -
      reinterpret_cast<char*>(&hash_) + sizeof(from_player_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_CloseCaption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_CloseCaption)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 hash = 1;
      case 1: {
        if (tag == 8u) {
          set_has_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 duration = 2;
      case 2: {
        if (tag == 16u) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool from_player = 3;
      case 3: {
        if (tag == 24u) {
          set_has_from_player();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &from_player_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_CloseCaption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_CloseCaption)
  return false;
#undef DO_
}

void CCSUsrMsg_CloseCaption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_CloseCaption)
  // optional uint32 hash = 1;
  if (has_hash()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hash(), output);
  }

  // optional int32 duration = 2;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->duration(), output);
  }

  // optional bool from_player = 3;
  if (has_from_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->from_player(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_CloseCaption)
}

::google::protobuf::uint8* CCSUsrMsg_CloseCaption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_CloseCaption)
  // optional uint32 hash = 1;
  if (has_hash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hash(), target);
  }

  // optional int32 duration = 2;
  if (has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->duration(), target);
  }

  // optional bool from_player = 3;
  if (has_from_player()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->from_player(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_CloseCaption)
  return target;
}

size_t CCSUsrMsg_CloseCaption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_CloseCaption)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 hash = 1;
    if (has_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hash());
    }

    // optional int32 duration = 2;
    if (has_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->duration());
    }

    // optional bool from_player = 3;
    if (has_from_player()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_CloseCaption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_CloseCaption)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_CloseCaption* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_CloseCaption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_CloseCaption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_CloseCaption)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_CloseCaption::MergeFrom(const CCSUsrMsg_CloseCaption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_CloseCaption)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_hash()) {
      set_hash(from.hash());
    }
    if (from.has_duration()) {
      set_duration(from.duration());
    }
    if (from.has_from_player()) {
      set_from_player(from.from_player());
    }
  }
}

void CCSUsrMsg_CloseCaption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_CloseCaption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_CloseCaption::CopyFrom(const CCSUsrMsg_CloseCaption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_CloseCaption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_CloseCaption::IsInitialized() const {
  return true;
}

void CCSUsrMsg_CloseCaption::Swap(CCSUsrMsg_CloseCaption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_CloseCaption::InternalSwap(CCSUsrMsg_CloseCaption* other) {
  std::swap(hash_, other->hash_);
  std::swap(duration_, other->duration_);
  std::swap(from_player_, other->from_player_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_CloseCaption::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_CloseCaption

// optional uint32 hash = 1;
bool CCSUsrMsg_CloseCaption::has_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_CloseCaption::set_has_hash() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_CloseCaption::clear_has_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_CloseCaption::clear_hash() {
  hash_ = 0u;
  clear_has_hash();
}
::google::protobuf::uint32 CCSUsrMsg_CloseCaption::hash() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CloseCaption.hash)
  return hash_;
}
void CCSUsrMsg_CloseCaption::set_hash(::google::protobuf::uint32 value) {
  set_has_hash();
  hash_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CloseCaption.hash)
}

// optional int32 duration = 2;
bool CCSUsrMsg_CloseCaption::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_CloseCaption::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_CloseCaption::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_CloseCaption::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
::google::protobuf::int32 CCSUsrMsg_CloseCaption::duration() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CloseCaption.duration)
  return duration_;
}
void CCSUsrMsg_CloseCaption::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CloseCaption.duration)
}

// optional bool from_player = 3;
bool CCSUsrMsg_CloseCaption::has_from_player() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_CloseCaption::set_has_from_player() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_CloseCaption::clear_has_from_player() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_CloseCaption::clear_from_player() {
  from_player_ = false;
  clear_has_from_player();
}
bool CCSUsrMsg_CloseCaption::from_player() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CloseCaption.from_player)
  return from_player_;
}
void CCSUsrMsg_CloseCaption::set_from_player(bool value) {
  set_has_from_player();
  from_player_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CloseCaption.from_player)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_CloseCaptionDirect::kHashFieldNumber;
const int CCSUsrMsg_CloseCaptionDirect::kDurationFieldNumber;
const int CCSUsrMsg_CloseCaptionDirect::kFromPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_CloseCaptionDirect::CCSUsrMsg_CloseCaptionDirect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_CloseCaptionDirect)
}
CCSUsrMsg_CloseCaptionDirect::CCSUsrMsg_CloseCaptionDirect(const CCSUsrMsg_CloseCaptionDirect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hash_, &from.hash_,
    reinterpret_cast<char*>(&from_player_) -
    reinterpret_cast<char*>(&hash_) + sizeof(from_player_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_CloseCaptionDirect)
}

void CCSUsrMsg_CloseCaptionDirect::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&hash_, 0, reinterpret_cast<char*>(&from_player_) -
    reinterpret_cast<char*>(&hash_) + sizeof(from_player_));
}

CCSUsrMsg_CloseCaptionDirect::~CCSUsrMsg_CloseCaptionDirect() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_CloseCaptionDirect)
  SharedDtor();
}

void CCSUsrMsg_CloseCaptionDirect::SharedDtor() {
}

void CCSUsrMsg_CloseCaptionDirect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_CloseCaptionDirect::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[13].descriptor;
}

const CCSUsrMsg_CloseCaptionDirect& CCSUsrMsg_CloseCaptionDirect::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_CloseCaptionDirect* CCSUsrMsg_CloseCaptionDirect::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_CloseCaptionDirect* n = new CCSUsrMsg_CloseCaptionDirect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_CloseCaptionDirect::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_CloseCaptionDirect)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&hash_, 0, reinterpret_cast<char*>(&from_player_) -
      reinterpret_cast<char*>(&hash_) + sizeof(from_player_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_CloseCaptionDirect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_CloseCaptionDirect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 hash = 1;
      case 1: {
        if (tag == 8u) {
          set_has_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 duration = 2;
      case 2: {
        if (tag == 16u) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool from_player = 3;
      case 3: {
        if (tag == 24u) {
          set_has_from_player();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &from_player_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_CloseCaptionDirect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_CloseCaptionDirect)
  return false;
#undef DO_
}

void CCSUsrMsg_CloseCaptionDirect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_CloseCaptionDirect)
  // optional uint32 hash = 1;
  if (has_hash()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hash(), output);
  }

  // optional int32 duration = 2;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->duration(), output);
  }

  // optional bool from_player = 3;
  if (has_from_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->from_player(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_CloseCaptionDirect)
}

::google::protobuf::uint8* CCSUsrMsg_CloseCaptionDirect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_CloseCaptionDirect)
  // optional uint32 hash = 1;
  if (has_hash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hash(), target);
  }

  // optional int32 duration = 2;
  if (has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->duration(), target);
  }

  // optional bool from_player = 3;
  if (has_from_player()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->from_player(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_CloseCaptionDirect)
  return target;
}

size_t CCSUsrMsg_CloseCaptionDirect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_CloseCaptionDirect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 hash = 1;
    if (has_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hash());
    }

    // optional int32 duration = 2;
    if (has_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->duration());
    }

    // optional bool from_player = 3;
    if (has_from_player()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_CloseCaptionDirect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_CloseCaptionDirect)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_CloseCaptionDirect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_CloseCaptionDirect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_CloseCaptionDirect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_CloseCaptionDirect)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_CloseCaptionDirect::MergeFrom(const CCSUsrMsg_CloseCaptionDirect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_CloseCaptionDirect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_hash()) {
      set_hash(from.hash());
    }
    if (from.has_duration()) {
      set_duration(from.duration());
    }
    if (from.has_from_player()) {
      set_from_player(from.from_player());
    }
  }
}

void CCSUsrMsg_CloseCaptionDirect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_CloseCaptionDirect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_CloseCaptionDirect::CopyFrom(const CCSUsrMsg_CloseCaptionDirect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_CloseCaptionDirect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_CloseCaptionDirect::IsInitialized() const {
  return true;
}

void CCSUsrMsg_CloseCaptionDirect::Swap(CCSUsrMsg_CloseCaptionDirect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_CloseCaptionDirect::InternalSwap(CCSUsrMsg_CloseCaptionDirect* other) {
  std::swap(hash_, other->hash_);
  std::swap(duration_, other->duration_);
  std::swap(from_player_, other->from_player_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_CloseCaptionDirect::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_CloseCaptionDirect

// optional uint32 hash = 1;
bool CCSUsrMsg_CloseCaptionDirect::has_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_CloseCaptionDirect::set_has_hash() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_CloseCaptionDirect::clear_has_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_CloseCaptionDirect::clear_hash() {
  hash_ = 0u;
  clear_has_hash();
}
::google::protobuf::uint32 CCSUsrMsg_CloseCaptionDirect::hash() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CloseCaptionDirect.hash)
  return hash_;
}
void CCSUsrMsg_CloseCaptionDirect::set_hash(::google::protobuf::uint32 value) {
  set_has_hash();
  hash_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CloseCaptionDirect.hash)
}

// optional int32 duration = 2;
bool CCSUsrMsg_CloseCaptionDirect::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_CloseCaptionDirect::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_CloseCaptionDirect::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_CloseCaptionDirect::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
::google::protobuf::int32 CCSUsrMsg_CloseCaptionDirect::duration() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CloseCaptionDirect.duration)
  return duration_;
}
void CCSUsrMsg_CloseCaptionDirect::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CloseCaptionDirect.duration)
}

// optional bool from_player = 3;
bool CCSUsrMsg_CloseCaptionDirect::has_from_player() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_CloseCaptionDirect::set_has_from_player() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_CloseCaptionDirect::clear_has_from_player() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_CloseCaptionDirect::clear_from_player() {
  from_player_ = false;
  clear_has_from_player();
}
bool CCSUsrMsg_CloseCaptionDirect::from_player() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CloseCaptionDirect.from_player)
  return from_player_;
}
void CCSUsrMsg_CloseCaptionDirect::set_from_player(bool value) {
  set_has_from_player();
  from_player_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CloseCaptionDirect.from_player)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_SendAudio::kRadioSoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_SendAudio::CCSUsrMsg_SendAudio()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_SendAudio)
}
CCSUsrMsg_SendAudio::CCSUsrMsg_SendAudio(const CCSUsrMsg_SendAudio& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  radio_sound_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_radio_sound()) {
    radio_sound_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.radio_sound_);
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_SendAudio)
}

void CCSUsrMsg_SendAudio::SharedCtor() {
  _cached_size_ = 0;
  radio_sound_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCSUsrMsg_SendAudio::~CCSUsrMsg_SendAudio() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_SendAudio)
  SharedDtor();
}

void CCSUsrMsg_SendAudio::SharedDtor() {
  radio_sound_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_SendAudio::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_SendAudio::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[14].descriptor;
}

const CCSUsrMsg_SendAudio& CCSUsrMsg_SendAudio::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_SendAudio* CCSUsrMsg_SendAudio::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_SendAudio* n = new CCSUsrMsg_SendAudio;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_SendAudio::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_SendAudio)
  if (has_radio_sound()) {
    GOOGLE_DCHECK(!radio_sound_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*radio_sound_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_SendAudio::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_SendAudio)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string radio_sound = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_radio_sound()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->radio_sound().data(), this->radio_sound().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_SendAudio.radio_sound");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_SendAudio)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_SendAudio)
  return false;
#undef DO_
}

void CCSUsrMsg_SendAudio::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_SendAudio)
  // optional string radio_sound = 1;
  if (has_radio_sound()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->radio_sound().data(), this->radio_sound().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_SendAudio.radio_sound");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->radio_sound(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_SendAudio)
}

::google::protobuf::uint8* CCSUsrMsg_SendAudio::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_SendAudio)
  // optional string radio_sound = 1;
  if (has_radio_sound()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->radio_sound().data(), this->radio_sound().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_SendAudio.radio_sound");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->radio_sound(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_SendAudio)
  return target;
}

size_t CCSUsrMsg_SendAudio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_SendAudio)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string radio_sound = 1;
  if (has_radio_sound()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->radio_sound());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_SendAudio::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_SendAudio)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_SendAudio* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_SendAudio>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_SendAudio)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_SendAudio)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_SendAudio::MergeFrom(const CCSUsrMsg_SendAudio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_SendAudio)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_radio_sound()) {
    set_has_radio_sound();
    radio_sound_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.radio_sound_);
  }
}

void CCSUsrMsg_SendAudio::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_SendAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_SendAudio::CopyFrom(const CCSUsrMsg_SendAudio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_SendAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_SendAudio::IsInitialized() const {
  return true;
}

void CCSUsrMsg_SendAudio::Swap(CCSUsrMsg_SendAudio* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_SendAudio::InternalSwap(CCSUsrMsg_SendAudio* other) {
  radio_sound_.Swap(&other->radio_sound_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_SendAudio::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_SendAudio

// optional string radio_sound = 1;
bool CCSUsrMsg_SendAudio::has_radio_sound() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_SendAudio::set_has_radio_sound() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_SendAudio::clear_has_radio_sound() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_SendAudio::clear_radio_sound() {
  radio_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_radio_sound();
}
const ::std::string& CCSUsrMsg_SendAudio::radio_sound() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendAudio.radio_sound)
  return radio_sound_.GetNoArena();
}
void CCSUsrMsg_SendAudio::set_radio_sound(const ::std::string& value) {
  set_has_radio_sound();
  radio_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SendAudio.radio_sound)
}
#if LANG_CXX11
void CCSUsrMsg_SendAudio::set_radio_sound(::std::string&& value) {
  set_has_radio_sound();
  radio_sound_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_SendAudio.radio_sound)
}
#endif
void CCSUsrMsg_SendAudio::set_radio_sound(const char* value) {
  set_has_radio_sound();
  radio_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_SendAudio.radio_sound)
}
void CCSUsrMsg_SendAudio::set_radio_sound(const char* value, size_t size) {
  set_has_radio_sound();
  radio_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_SendAudio.radio_sound)
}
::std::string* CCSUsrMsg_SendAudio::mutable_radio_sound() {
  set_has_radio_sound();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_SendAudio.radio_sound)
  return radio_sound_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_SendAudio::release_radio_sound() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_SendAudio.radio_sound)
  clear_has_radio_sound();
  return radio_sound_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_SendAudio::set_allocated_radio_sound(::std::string* radio_sound) {
  if (radio_sound != NULL) {
    set_has_radio_sound();
  } else {
    clear_has_radio_sound();
  }
  radio_sound_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), radio_sound);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_SendAudio.radio_sound)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_RawAudio::kPitchFieldNumber;
const int CCSUsrMsg_RawAudio::kEntidxFieldNumber;
const int CCSUsrMsg_RawAudio::kDurationFieldNumber;
const int CCSUsrMsg_RawAudio::kVoiceFilenameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_RawAudio::CCSUsrMsg_RawAudio()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_RawAudio)
}
CCSUsrMsg_RawAudio::CCSUsrMsg_RawAudio(const CCSUsrMsg_RawAudio& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  voice_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_voice_filename()) {
    voice_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voice_filename_);
  }
  ::memcpy(&pitch_, &from.pitch_,
    reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&pitch_) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_RawAudio)
}

void CCSUsrMsg_RawAudio::SharedCtor() {
  _cached_size_ = 0;
  voice_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pitch_, 0, reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&pitch_) + sizeof(duration_));
}

CCSUsrMsg_RawAudio::~CCSUsrMsg_RawAudio() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_RawAudio)
  SharedDtor();
}

void CCSUsrMsg_RawAudio::SharedDtor() {
  voice_filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_RawAudio::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_RawAudio::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[15].descriptor;
}

const CCSUsrMsg_RawAudio& CCSUsrMsg_RawAudio::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_RawAudio* CCSUsrMsg_RawAudio::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_RawAudio* n = new CCSUsrMsg_RawAudio;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_RawAudio::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_RawAudio)
  if (has_voice_filename()) {
    GOOGLE_DCHECK(!voice_filename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*voice_filename_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&pitch_, 0, reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&pitch_) + sizeof(duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_RawAudio::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_RawAudio)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pitch = 1;
      case 1: {
        if (tag == 8u) {
          set_has_pitch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 entidx = 2;
      case 2: {
        if (tag == 16u) {
          set_has_entidx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 3;
      case 3: {
        if (tag == 29u) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string voice_filename = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_voice_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->voice_filename().data(), this->voice_filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_RawAudio.voice_filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_RawAudio)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_RawAudio)
  return false;
#undef DO_
}

void CCSUsrMsg_RawAudio::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_RawAudio)
  // optional int32 pitch = 1;
  if (has_pitch()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pitch(), output);
  }

  // optional int32 entidx = 2;
  if (has_entidx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->entidx(), output);
  }

  // optional float duration = 3;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->duration(), output);
  }

  // optional string voice_filename = 4;
  if (has_voice_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voice_filename().data(), this->voice_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RawAudio.voice_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->voice_filename(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_RawAudio)
}

::google::protobuf::uint8* CCSUsrMsg_RawAudio::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_RawAudio)
  // optional int32 pitch = 1;
  if (has_pitch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pitch(), target);
  }

  // optional int32 entidx = 2;
  if (has_entidx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->entidx(), target);
  }

  // optional float duration = 3;
  if (has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->duration(), target);
  }

  // optional string voice_filename = 4;
  if (has_voice_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voice_filename().data(), this->voice_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RawAudio.voice_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->voice_filename(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_RawAudio)
  return target;
}

size_t CCSUsrMsg_RawAudio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_RawAudio)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string voice_filename = 4;
    if (has_voice_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->voice_filename());
    }

    // optional int32 pitch = 1;
    if (has_pitch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pitch());
    }

    // optional int32 entidx = 2;
    if (has_entidx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entidx());
    }

    // optional float duration = 3;
    if (has_duration()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_RawAudio::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_RawAudio)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_RawAudio* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_RawAudio>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_RawAudio)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_RawAudio)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_RawAudio::MergeFrom(const CCSUsrMsg_RawAudio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_RawAudio)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_voice_filename()) {
      set_has_voice_filename();
      voice_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voice_filename_);
    }
    if (from.has_pitch()) {
      set_pitch(from.pitch());
    }
    if (from.has_entidx()) {
      set_entidx(from.entidx());
    }
    if (from.has_duration()) {
      set_duration(from.duration());
    }
  }
}

void CCSUsrMsg_RawAudio::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_RawAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_RawAudio::CopyFrom(const CCSUsrMsg_RawAudio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_RawAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_RawAudio::IsInitialized() const {
  return true;
}

void CCSUsrMsg_RawAudio::Swap(CCSUsrMsg_RawAudio* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_RawAudio::InternalSwap(CCSUsrMsg_RawAudio* other) {
  voice_filename_.Swap(&other->voice_filename_);
  std::swap(pitch_, other->pitch_);
  std::swap(entidx_, other->entidx_);
  std::swap(duration_, other->duration_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_RawAudio::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[15];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_RawAudio

// optional int32 pitch = 1;
bool CCSUsrMsg_RawAudio::has_pitch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_RawAudio::set_has_pitch() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_RawAudio::clear_has_pitch() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_RawAudio::clear_pitch() {
  pitch_ = 0;
  clear_has_pitch();
}
::google::protobuf::int32 CCSUsrMsg_RawAudio::pitch() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RawAudio.pitch)
  return pitch_;
}
void CCSUsrMsg_RawAudio::set_pitch(::google::protobuf::int32 value) {
  set_has_pitch();
  pitch_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RawAudio.pitch)
}

// optional int32 entidx = 2;
bool CCSUsrMsg_RawAudio::has_entidx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_RawAudio::set_has_entidx() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_RawAudio::clear_has_entidx() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_RawAudio::clear_entidx() {
  entidx_ = 0;
  clear_has_entidx();
}
::google::protobuf::int32 CCSUsrMsg_RawAudio::entidx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RawAudio.entidx)
  return entidx_;
}
void CCSUsrMsg_RawAudio::set_entidx(::google::protobuf::int32 value) {
  set_has_entidx();
  entidx_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RawAudio.entidx)
}

// optional float duration = 3;
bool CCSUsrMsg_RawAudio::has_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CCSUsrMsg_RawAudio::set_has_duration() {
  _has_bits_[0] |= 0x00000008u;
}
void CCSUsrMsg_RawAudio::clear_has_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
void CCSUsrMsg_RawAudio::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
float CCSUsrMsg_RawAudio::duration() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RawAudio.duration)
  return duration_;
}
void CCSUsrMsg_RawAudio::set_duration(float value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RawAudio.duration)
}

// optional string voice_filename = 4;
bool CCSUsrMsg_RawAudio::has_voice_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_RawAudio::set_has_voice_filename() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_RawAudio::clear_has_voice_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_RawAudio::clear_voice_filename() {
  voice_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_voice_filename();
}
const ::std::string& CCSUsrMsg_RawAudio::voice_filename() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RawAudio.voice_filename)
  return voice_filename_.GetNoArena();
}
void CCSUsrMsg_RawAudio::set_voice_filename(const ::std::string& value) {
  set_has_voice_filename();
  voice_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RawAudio.voice_filename)
}
#if LANG_CXX11
void CCSUsrMsg_RawAudio::set_voice_filename(::std::string&& value) {
  set_has_voice_filename();
  voice_filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_RawAudio.voice_filename)
}
#endif
void CCSUsrMsg_RawAudio::set_voice_filename(const char* value) {
  set_has_voice_filename();
  voice_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_RawAudio.voice_filename)
}
void CCSUsrMsg_RawAudio::set_voice_filename(const char* value, size_t size) {
  set_has_voice_filename();
  voice_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_RawAudio.voice_filename)
}
::std::string* CCSUsrMsg_RawAudio::mutable_voice_filename() {
  set_has_voice_filename();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_RawAudio.voice_filename)
  return voice_filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_RawAudio::release_voice_filename() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_RawAudio.voice_filename)
  clear_has_voice_filename();
  return voice_filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_RawAudio::set_allocated_voice_filename(::std::string* voice_filename) {
  if (voice_filename != NULL) {
    set_has_voice_filename();
  } else {
    clear_has_voice_filename();
  }
  voice_filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voice_filename);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_RawAudio.voice_filename)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_VoiceMask_PlayerMask::kGameRulesMaskFieldNumber;
const int CCSUsrMsg_VoiceMask_PlayerMask::kBanMasksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_VoiceMask_PlayerMask::CCSUsrMsg_VoiceMask_PlayerMask()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_VoiceMask.PlayerMask)
}
CCSUsrMsg_VoiceMask_PlayerMask::CCSUsrMsg_VoiceMask_PlayerMask(const CCSUsrMsg_VoiceMask_PlayerMask& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&game_rules_mask_, &from.game_rules_mask_,
    reinterpret_cast<char*>(&ban_masks_) -
    reinterpret_cast<char*>(&game_rules_mask_) + sizeof(ban_masks_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_VoiceMask.PlayerMask)
}

void CCSUsrMsg_VoiceMask_PlayerMask::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&game_rules_mask_, 0, reinterpret_cast<char*>(&ban_masks_) -
    reinterpret_cast<char*>(&game_rules_mask_) + sizeof(ban_masks_));
}

CCSUsrMsg_VoiceMask_PlayerMask::~CCSUsrMsg_VoiceMask_PlayerMask() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_VoiceMask.PlayerMask)
  SharedDtor();
}

void CCSUsrMsg_VoiceMask_PlayerMask::SharedDtor() {
}

void CCSUsrMsg_VoiceMask_PlayerMask::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_VoiceMask_PlayerMask::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[16].descriptor;
}

const CCSUsrMsg_VoiceMask_PlayerMask& CCSUsrMsg_VoiceMask_PlayerMask::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_VoiceMask_PlayerMask* CCSUsrMsg_VoiceMask_PlayerMask::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_VoiceMask_PlayerMask* n = new CCSUsrMsg_VoiceMask_PlayerMask;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_VoiceMask_PlayerMask::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_VoiceMask.PlayerMask)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&game_rules_mask_, 0, reinterpret_cast<char*>(&ban_masks_) -
      reinterpret_cast<char*>(&game_rules_mask_) + sizeof(ban_masks_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_VoiceMask_PlayerMask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_VoiceMask.PlayerMask)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 game_rules_mask = 1;
      case 1: {
        if (tag == 8u) {
          set_has_game_rules_mask();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &game_rules_mask_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ban_masks = 2;
      case 2: {
        if (tag == 16u) {
          set_has_ban_masks();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ban_masks_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_VoiceMask.PlayerMask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_VoiceMask.PlayerMask)
  return false;
#undef DO_
}

void CCSUsrMsg_VoiceMask_PlayerMask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_VoiceMask.PlayerMask)
  // optional int32 game_rules_mask = 1;
  if (has_game_rules_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->game_rules_mask(), output);
  }

  // optional int32 ban_masks = 2;
  if (has_ban_masks()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ban_masks(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_VoiceMask.PlayerMask)
}

::google::protobuf::uint8* CCSUsrMsg_VoiceMask_PlayerMask::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_VoiceMask.PlayerMask)
  // optional int32 game_rules_mask = 1;
  if (has_game_rules_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->game_rules_mask(), target);
  }

  // optional int32 ban_masks = 2;
  if (has_ban_masks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ban_masks(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_VoiceMask.PlayerMask)
  return target;
}

size_t CCSUsrMsg_VoiceMask_PlayerMask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_VoiceMask.PlayerMask)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 game_rules_mask = 1;
    if (has_game_rules_mask()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->game_rules_mask());
    }

    // optional int32 ban_masks = 2;
    if (has_ban_masks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ban_masks());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_VoiceMask_PlayerMask::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_VoiceMask.PlayerMask)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_VoiceMask_PlayerMask* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_VoiceMask_PlayerMask>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_VoiceMask.PlayerMask)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_VoiceMask.PlayerMask)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_VoiceMask_PlayerMask::MergeFrom(const CCSUsrMsg_VoiceMask_PlayerMask& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_VoiceMask.PlayerMask)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_game_rules_mask()) {
      set_game_rules_mask(from.game_rules_mask());
    }
    if (from.has_ban_masks()) {
      set_ban_masks(from.ban_masks());
    }
  }
}

void CCSUsrMsg_VoiceMask_PlayerMask::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_VoiceMask.PlayerMask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_VoiceMask_PlayerMask::CopyFrom(const CCSUsrMsg_VoiceMask_PlayerMask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_VoiceMask.PlayerMask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_VoiceMask_PlayerMask::IsInitialized() const {
  return true;
}

void CCSUsrMsg_VoiceMask_PlayerMask::Swap(CCSUsrMsg_VoiceMask_PlayerMask* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_VoiceMask_PlayerMask::InternalSwap(CCSUsrMsg_VoiceMask_PlayerMask* other) {
  std::swap(game_rules_mask_, other->game_rules_mask_);
  std::swap(ban_masks_, other->ban_masks_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_VoiceMask_PlayerMask::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[16];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_VoiceMask_PlayerMask

// optional int32 game_rules_mask = 1;
bool CCSUsrMsg_VoiceMask_PlayerMask::has_game_rules_mask() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_VoiceMask_PlayerMask::set_has_game_rules_mask() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_VoiceMask_PlayerMask::clear_has_game_rules_mask() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_VoiceMask_PlayerMask::clear_game_rules_mask() {
  game_rules_mask_ = 0;
  clear_has_game_rules_mask();
}
::google::protobuf::int32 CCSUsrMsg_VoiceMask_PlayerMask::game_rules_mask() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoiceMask.PlayerMask.game_rules_mask)
  return game_rules_mask_;
}
void CCSUsrMsg_VoiceMask_PlayerMask::set_game_rules_mask(::google::protobuf::int32 value) {
  set_has_game_rules_mask();
  game_rules_mask_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoiceMask.PlayerMask.game_rules_mask)
}

// optional int32 ban_masks = 2;
bool CCSUsrMsg_VoiceMask_PlayerMask::has_ban_masks() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_VoiceMask_PlayerMask::set_has_ban_masks() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_VoiceMask_PlayerMask::clear_has_ban_masks() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_VoiceMask_PlayerMask::clear_ban_masks() {
  ban_masks_ = 0;
  clear_has_ban_masks();
}
::google::protobuf::int32 CCSUsrMsg_VoiceMask_PlayerMask::ban_masks() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoiceMask.PlayerMask.ban_masks)
  return ban_masks_;
}
void CCSUsrMsg_VoiceMask_PlayerMask::set_ban_masks(::google::protobuf::int32 value) {
  set_has_ban_masks();
  ban_masks_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoiceMask.PlayerMask.ban_masks)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_VoiceMask::kPlayerMasksFieldNumber;
const int CCSUsrMsg_VoiceMask::kPlayerModEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_VoiceMask::CCSUsrMsg_VoiceMask()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_VoiceMask)
}
CCSUsrMsg_VoiceMask::CCSUsrMsg_VoiceMask(const CCSUsrMsg_VoiceMask& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      player_masks_(from.player_masks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_mod_enable_ = from.player_mod_enable_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_VoiceMask)
}

void CCSUsrMsg_VoiceMask::SharedCtor() {
  _cached_size_ = 0;
  player_mod_enable_ = false;
}

CCSUsrMsg_VoiceMask::~CCSUsrMsg_VoiceMask() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_VoiceMask)
  SharedDtor();
}

void CCSUsrMsg_VoiceMask::SharedDtor() {
}

void CCSUsrMsg_VoiceMask::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_VoiceMask::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[17].descriptor;
}

const CCSUsrMsg_VoiceMask& CCSUsrMsg_VoiceMask::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_VoiceMask* CCSUsrMsg_VoiceMask::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_VoiceMask* n = new CCSUsrMsg_VoiceMask;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_VoiceMask::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_VoiceMask)
  player_masks_.Clear();
  player_mod_enable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_VoiceMask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_VoiceMask)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CCSUsrMsg_VoiceMask.PlayerMask player_masks = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_player_masks()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional bool player_mod_enable = 2;
      case 2: {
        if (tag == 16u) {
          set_has_player_mod_enable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &player_mod_enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_VoiceMask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_VoiceMask)
  return false;
#undef DO_
}

void CCSUsrMsg_VoiceMask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_VoiceMask)
  // repeated .CCSUsrMsg_VoiceMask.PlayerMask player_masks = 1;
  for (unsigned int i = 0, n = this->player_masks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->player_masks(i), output);
  }

  // optional bool player_mod_enable = 2;
  if (has_player_mod_enable()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->player_mod_enable(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_VoiceMask)
}

::google::protobuf::uint8* CCSUsrMsg_VoiceMask::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_VoiceMask)
  // repeated .CCSUsrMsg_VoiceMask.PlayerMask player_masks = 1;
  for (unsigned int i = 0, n = this->player_masks_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->player_masks(i), false, target);
  }

  // optional bool player_mod_enable = 2;
  if (has_player_mod_enable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->player_mod_enable(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_VoiceMask)
  return target;
}

size_t CCSUsrMsg_VoiceMask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_VoiceMask)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .CCSUsrMsg_VoiceMask.PlayerMask player_masks = 1;
  {
    unsigned int count = this->player_masks_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->player_masks(i));
    }
  }

  // optional bool player_mod_enable = 2;
  if (has_player_mod_enable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_VoiceMask::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_VoiceMask)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_VoiceMask* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_VoiceMask>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_VoiceMask)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_VoiceMask)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_VoiceMask::MergeFrom(const CCSUsrMsg_VoiceMask& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_VoiceMask)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_masks_.MergeFrom(from.player_masks_);
  if (from.has_player_mod_enable()) {
    set_player_mod_enable(from.player_mod_enable());
  }
}

void CCSUsrMsg_VoiceMask::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_VoiceMask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_VoiceMask::CopyFrom(const CCSUsrMsg_VoiceMask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_VoiceMask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_VoiceMask::IsInitialized() const {
  return true;
}

void CCSUsrMsg_VoiceMask::Swap(CCSUsrMsg_VoiceMask* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_VoiceMask::InternalSwap(CCSUsrMsg_VoiceMask* other) {
  player_masks_.UnsafeArenaSwap(&other->player_masks_);
  std::swap(player_mod_enable_, other->player_mod_enable_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_VoiceMask::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[17];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_VoiceMask

// repeated .CCSUsrMsg_VoiceMask.PlayerMask player_masks = 1;
int CCSUsrMsg_VoiceMask::player_masks_size() const {
  return player_masks_.size();
}
void CCSUsrMsg_VoiceMask::clear_player_masks() {
  player_masks_.Clear();
}
const ::CCSUsrMsg_VoiceMask_PlayerMask& CCSUsrMsg_VoiceMask::player_masks(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoiceMask.player_masks)
  return player_masks_.Get(index);
}
::CCSUsrMsg_VoiceMask_PlayerMask* CCSUsrMsg_VoiceMask::mutable_player_masks(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VoiceMask.player_masks)
  return player_masks_.Mutable(index);
}
::CCSUsrMsg_VoiceMask_PlayerMask* CCSUsrMsg_VoiceMask::add_player_masks() {
  // @@protoc_insertion_point(field_add:CCSUsrMsg_VoiceMask.player_masks)
  return player_masks_.Add();
}
::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask >*
CCSUsrMsg_VoiceMask::mutable_player_masks() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_VoiceMask.player_masks)
  return &player_masks_;
}
const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask >&
CCSUsrMsg_VoiceMask::player_masks() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_VoiceMask.player_masks)
  return player_masks_;
}

// optional bool player_mod_enable = 2;
bool CCSUsrMsg_VoiceMask::has_player_mod_enable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_VoiceMask::set_has_player_mod_enable() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_VoiceMask::clear_has_player_mod_enable() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_VoiceMask::clear_player_mod_enable() {
  player_mod_enable_ = false;
  clear_has_player_mod_enable();
}
bool CCSUsrMsg_VoiceMask::player_mod_enable() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoiceMask.player_mod_enable)
  return player_mod_enable_;
}
void CCSUsrMsg_VoiceMask::set_player_mod_enable(bool value) {
  set_has_player_mod_enable();
  player_mod_enable_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoiceMask.player_mod_enable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_Damage::kAmountFieldNumber;
const int CCSUsrMsg_Damage::kInflictorWorldPosFieldNumber;
const int CCSUsrMsg_Damage::kVictimEntindexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_Damage::CCSUsrMsg_Damage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_Damage)
}
CCSUsrMsg_Damage::CCSUsrMsg_Damage(const CCSUsrMsg_Damage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_inflictor_world_pos()) {
    inflictor_world_pos_ = new ::CMsgVector(*from.inflictor_world_pos_);
  } else {
    inflictor_world_pos_ = NULL;
  }
  ::memcpy(&amount_, &from.amount_,
    reinterpret_cast<char*>(&victim_entindex_) -
    reinterpret_cast<char*>(&amount_) + sizeof(victim_entindex_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_Damage)
}

void CCSUsrMsg_Damage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&inflictor_world_pos_, 0, reinterpret_cast<char*>(&victim_entindex_) -
    reinterpret_cast<char*>(&inflictor_world_pos_) + sizeof(victim_entindex_));
}

CCSUsrMsg_Damage::~CCSUsrMsg_Damage() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_Damage)
  SharedDtor();
}

void CCSUsrMsg_Damage::SharedDtor() {
  if (this != internal_default_instance()) {
    delete inflictor_world_pos_;
  }
}

void CCSUsrMsg_Damage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_Damage::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[18].descriptor;
}

const CCSUsrMsg_Damage& CCSUsrMsg_Damage::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_Damage* CCSUsrMsg_Damage::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_Damage* n = new CCSUsrMsg_Damage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_Damage::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_Damage)
  if (has_inflictor_world_pos()) {
    GOOGLE_DCHECK(inflictor_world_pos_ != NULL);
    inflictor_world_pos_->::CMsgVector::Clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&amount_, 0, reinterpret_cast<char*>(&victim_entindex_) -
      reinterpret_cast<char*>(&amount_) + sizeof(victim_entindex_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_Damage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_Damage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 amount = 1;
      case 1: {
        if (tag == 8u) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector inflictor_world_pos = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_inflictor_world_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 victim_entindex = 3;
      case 3: {
        if (tag == 24u) {
          set_has_victim_entindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &victim_entindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_Damage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_Damage)
  return false;
#undef DO_
}

void CCSUsrMsg_Damage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_Damage)
  // optional int32 amount = 1;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->amount(), output);
  }

  // optional .CMsgVector inflictor_world_pos = 2;
  if (has_inflictor_world_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->inflictor_world_pos_, output);
  }

  // optional int32 victim_entindex = 3;
  if (has_victim_entindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->victim_entindex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_Damage)
}

::google::protobuf::uint8* CCSUsrMsg_Damage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_Damage)
  // optional int32 amount = 1;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->amount(), target);
  }

  // optional .CMsgVector inflictor_world_pos = 2;
  if (has_inflictor_world_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->inflictor_world_pos_, false, target);
  }

  // optional int32 victim_entindex = 3;
  if (has_victim_entindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->victim_entindex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_Damage)
  return target;
}

size_t CCSUsrMsg_Damage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_Damage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .CMsgVector inflictor_world_pos = 2;
    if (has_inflictor_world_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->inflictor_world_pos_);
    }

    // optional int32 amount = 1;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }

    // optional int32 victim_entindex = 3;
    if (has_victim_entindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->victim_entindex());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_Damage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_Damage)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_Damage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_Damage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_Damage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_Damage)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_Damage::MergeFrom(const CCSUsrMsg_Damage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_Damage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_inflictor_world_pos()) {
      mutable_inflictor_world_pos()->::CMsgVector::MergeFrom(from.inflictor_world_pos());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_victim_entindex()) {
      set_victim_entindex(from.victim_entindex());
    }
  }
}

void CCSUsrMsg_Damage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_Damage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_Damage::CopyFrom(const CCSUsrMsg_Damage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_Damage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_Damage::IsInitialized() const {
  return true;
}

void CCSUsrMsg_Damage::Swap(CCSUsrMsg_Damage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_Damage::InternalSwap(CCSUsrMsg_Damage* other) {
  std::swap(inflictor_world_pos_, other->inflictor_world_pos_);
  std::swap(amount_, other->amount_);
  std::swap(victim_entindex_, other->victim_entindex_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_Damage::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[18];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_Damage

// optional int32 amount = 1;
bool CCSUsrMsg_Damage::has_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_Damage::set_has_amount() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_Damage::clear_has_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_Damage::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
::google::protobuf::int32 CCSUsrMsg_Damage::amount() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Damage.amount)
  return amount_;
}
void CCSUsrMsg_Damage::set_amount(::google::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Damage.amount)
}

// optional .CMsgVector inflictor_world_pos = 2;
bool CCSUsrMsg_Damage::has_inflictor_world_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_Damage::set_has_inflictor_world_pos() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_Damage::clear_has_inflictor_world_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_Damage::clear_inflictor_world_pos() {
  if (inflictor_world_pos_ != NULL) inflictor_world_pos_->::CMsgVector::Clear();
  clear_has_inflictor_world_pos();
}
const ::CMsgVector& CCSUsrMsg_Damage::inflictor_world_pos() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Damage.inflictor_world_pos)
  return inflictor_world_pos_ != NULL ? *inflictor_world_pos_
                         : *::CMsgVector::internal_default_instance();
}
::CMsgVector* CCSUsrMsg_Damage::mutable_inflictor_world_pos() {
  set_has_inflictor_world_pos();
  if (inflictor_world_pos_ == NULL) {
    inflictor_world_pos_ = new ::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_Damage.inflictor_world_pos)
  return inflictor_world_pos_;
}
::CMsgVector* CCSUsrMsg_Damage::release_inflictor_world_pos() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_Damage.inflictor_world_pos)
  clear_has_inflictor_world_pos();
  ::CMsgVector* temp = inflictor_world_pos_;
  inflictor_world_pos_ = NULL;
  return temp;
}
void CCSUsrMsg_Damage::set_allocated_inflictor_world_pos(::CMsgVector* inflictor_world_pos) {
  delete inflictor_world_pos_;
  inflictor_world_pos_ = inflictor_world_pos;
  if (inflictor_world_pos) {
    set_has_inflictor_world_pos();
  } else {
    clear_has_inflictor_world_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_Damage.inflictor_world_pos)
}

// optional int32 victim_entindex = 3;
bool CCSUsrMsg_Damage::has_victim_entindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_Damage::set_has_victim_entindex() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_Damage::clear_has_victim_entindex() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_Damage::clear_victim_entindex() {
  victim_entindex_ = 0;
  clear_has_victim_entindex();
}
::google::protobuf::int32 CCSUsrMsg_Damage::victim_entindex() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Damage.victim_entindex)
  return victim_entindex_;
}
void CCSUsrMsg_Damage::set_victim_entindex(::google::protobuf::int32 value) {
  set_has_victim_entindex();
  victim_entindex_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Damage.victim_entindex)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_RadioText::kMsgDstFieldNumber;
const int CCSUsrMsg_RadioText::kClientFieldNumber;
const int CCSUsrMsg_RadioText::kMsgNameFieldNumber;
const int CCSUsrMsg_RadioText::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_RadioText::CCSUsrMsg_RadioText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_RadioText)
}
CCSUsrMsg_RadioText::CCSUsrMsg_RadioText(const CCSUsrMsg_RadioText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg_name()) {
    msg_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_name_);
  }
  ::memcpy(&msg_dst_, &from.msg_dst_,
    reinterpret_cast<char*>(&client_) -
    reinterpret_cast<char*>(&msg_dst_) + sizeof(client_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_RadioText)
}

void CCSUsrMsg_RadioText::SharedCtor() {
  _cached_size_ = 0;
  msg_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_dst_, 0, reinterpret_cast<char*>(&client_) -
    reinterpret_cast<char*>(&msg_dst_) + sizeof(client_));
}

CCSUsrMsg_RadioText::~CCSUsrMsg_RadioText() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_RadioText)
  SharedDtor();
}

void CCSUsrMsg_RadioText::SharedDtor() {
  msg_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_RadioText::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_RadioText::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[19].descriptor;
}

const CCSUsrMsg_RadioText& CCSUsrMsg_RadioText::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_RadioText* CCSUsrMsg_RadioText::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_RadioText* n = new CCSUsrMsg_RadioText;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_RadioText::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_RadioText)
  params_.Clear();
  if (has_msg_name()) {
    GOOGLE_DCHECK(!msg_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*msg_name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&msg_dst_, 0, reinterpret_cast<char*>(&client_) -
      reinterpret_cast<char*>(&msg_dst_) + sizeof(client_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_RadioText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_RadioText)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 msg_dst = 1;
      case 1: {
        if (tag == 8u) {
          set_has_msg_dst();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_dst_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 client = 2;
      case 2: {
        if (tag == 16u) {
          set_has_client();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg_name = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg_name().data(), this->msg_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_RadioText.msg_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string params = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_params()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->params(this->params_size() - 1).data(),
            this->params(this->params_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_RadioText.params");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_RadioText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_RadioText)
  return false;
#undef DO_
}

void CCSUsrMsg_RadioText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_RadioText)
  // optional int32 msg_dst = 1;
  if (has_msg_dst()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msg_dst(), output);
  }

  // optional int32 client = 2;
  if (has_client()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->client(), output);
  }

  // optional string msg_name = 3;
  if (has_msg_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg_name().data(), this->msg_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RadioText.msg_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg_name(), output);
  }

  // repeated string params = 4;
  for (int i = 0; i < this->params_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->params(i).data(), this->params(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RadioText.params");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->params(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_RadioText)
}

::google::protobuf::uint8* CCSUsrMsg_RadioText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_RadioText)
  // optional int32 msg_dst = 1;
  if (has_msg_dst()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msg_dst(), target);
  }

  // optional int32 client = 2;
  if (has_client()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->client(), target);
  }

  // optional string msg_name = 3;
  if (has_msg_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg_name().data(), this->msg_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RadioText.msg_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg_name(), target);
  }

  // repeated string params = 4;
  for (int i = 0; i < this->params_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->params(i).data(), this->params(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RadioText.params");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->params(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_RadioText)
  return target;
}

size_t CCSUsrMsg_RadioText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_RadioText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated string params = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->params_size());
  for (int i = 0; i < this->params_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->params(i));
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string msg_name = 3;
    if (has_msg_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg_name());
    }

    // optional int32 msg_dst = 1;
    if (has_msg_dst()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msg_dst());
    }

    // optional int32 client = 2;
    if (has_client()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->client());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_RadioText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_RadioText)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_RadioText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_RadioText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_RadioText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_RadioText)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_RadioText::MergeFrom(const CCSUsrMsg_RadioText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_RadioText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  params_.MergeFrom(from.params_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_msg_name()) {
      set_has_msg_name();
      msg_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_name_);
    }
    if (from.has_msg_dst()) {
      set_msg_dst(from.msg_dst());
    }
    if (from.has_client()) {
      set_client(from.client());
    }
  }
}

void CCSUsrMsg_RadioText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_RadioText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_RadioText::CopyFrom(const CCSUsrMsg_RadioText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_RadioText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_RadioText::IsInitialized() const {
  return true;
}

void CCSUsrMsg_RadioText::Swap(CCSUsrMsg_RadioText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_RadioText::InternalSwap(CCSUsrMsg_RadioText* other) {
  params_.UnsafeArenaSwap(&other->params_);
  msg_name_.Swap(&other->msg_name_);
  std::swap(msg_dst_, other->msg_dst_);
  std::swap(client_, other->client_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_RadioText::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[19];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_RadioText

// optional int32 msg_dst = 1;
bool CCSUsrMsg_RadioText::has_msg_dst() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_RadioText::set_has_msg_dst() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_RadioText::clear_has_msg_dst() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_RadioText::clear_msg_dst() {
  msg_dst_ = 0;
  clear_has_msg_dst();
}
::google::protobuf::int32 CCSUsrMsg_RadioText::msg_dst() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RadioText.msg_dst)
  return msg_dst_;
}
void CCSUsrMsg_RadioText::set_msg_dst(::google::protobuf::int32 value) {
  set_has_msg_dst();
  msg_dst_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RadioText.msg_dst)
}

// optional int32 client = 2;
bool CCSUsrMsg_RadioText::has_client() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_RadioText::set_has_client() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_RadioText::clear_has_client() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_RadioText::clear_client() {
  client_ = 0;
  clear_has_client();
}
::google::protobuf::int32 CCSUsrMsg_RadioText::client() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RadioText.client)
  return client_;
}
void CCSUsrMsg_RadioText::set_client(::google::protobuf::int32 value) {
  set_has_client();
  client_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RadioText.client)
}

// optional string msg_name = 3;
bool CCSUsrMsg_RadioText::has_msg_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_RadioText::set_has_msg_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_RadioText::clear_has_msg_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_RadioText::clear_msg_name() {
  msg_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg_name();
}
const ::std::string& CCSUsrMsg_RadioText::msg_name() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RadioText.msg_name)
  return msg_name_.GetNoArena();
}
void CCSUsrMsg_RadioText::set_msg_name(const ::std::string& value) {
  set_has_msg_name();
  msg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RadioText.msg_name)
}
#if LANG_CXX11
void CCSUsrMsg_RadioText::set_msg_name(::std::string&& value) {
  set_has_msg_name();
  msg_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_RadioText.msg_name)
}
#endif
void CCSUsrMsg_RadioText::set_msg_name(const char* value) {
  set_has_msg_name();
  msg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_RadioText.msg_name)
}
void CCSUsrMsg_RadioText::set_msg_name(const char* value, size_t size) {
  set_has_msg_name();
  msg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_RadioText.msg_name)
}
::std::string* CCSUsrMsg_RadioText::mutable_msg_name() {
  set_has_msg_name();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_RadioText.msg_name)
  return msg_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_RadioText::release_msg_name() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_RadioText.msg_name)
  clear_has_msg_name();
  return msg_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_RadioText::set_allocated_msg_name(::std::string* msg_name) {
  if (msg_name != NULL) {
    set_has_msg_name();
  } else {
    clear_has_msg_name();
  }
  msg_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_name);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_RadioText.msg_name)
}

// repeated string params = 4;
int CCSUsrMsg_RadioText::params_size() const {
  return params_.size();
}
void CCSUsrMsg_RadioText::clear_params() {
  params_.Clear();
}
const ::std::string& CCSUsrMsg_RadioText::params(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RadioText.params)
  return params_.Get(index);
}
::std::string* CCSUsrMsg_RadioText::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_RadioText.params)
  return params_.Mutable(index);
}
void CCSUsrMsg_RadioText::set_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RadioText.params)
  params_.Mutable(index)->assign(value);
}
void CCSUsrMsg_RadioText::set_params(int index, const char* value) {
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_RadioText.params)
}
void CCSUsrMsg_RadioText::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_RadioText.params)
}
::std::string* CCSUsrMsg_RadioText::add_params() {
  // @@protoc_insertion_point(field_add_mutable:CCSUsrMsg_RadioText.params)
  return params_.Add();
}
void CCSUsrMsg_RadioText::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CCSUsrMsg_RadioText.params)
}
void CCSUsrMsg_RadioText::add_params(const char* value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CCSUsrMsg_RadioText.params)
}
void CCSUsrMsg_RadioText::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CCSUsrMsg_RadioText.params)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_RadioText::params() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_RadioText.params)
  return params_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_RadioText::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_RadioText.params)
  return &params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_HintText::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_HintText::CCSUsrMsg_HintText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_HintText)
}
CCSUsrMsg_HintText::CCSUsrMsg_HintText(const CCSUsrMsg_HintText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_HintText)
}

void CCSUsrMsg_HintText::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCSUsrMsg_HintText::~CCSUsrMsg_HintText() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_HintText)
  SharedDtor();
}

void CCSUsrMsg_HintText::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_HintText::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_HintText::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[20].descriptor;
}

const CCSUsrMsg_HintText& CCSUsrMsg_HintText::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_HintText* CCSUsrMsg_HintText::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_HintText* n = new CCSUsrMsg_HintText;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_HintText::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_HintText)
  if (has_text()) {
    GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*text_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_HintText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_HintText)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string text = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_HintText.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_HintText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_HintText)
  return false;
#undef DO_
}

void CCSUsrMsg_HintText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_HintText)
  // optional string text = 1;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_HintText.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_HintText)
}

::google::protobuf::uint8* CCSUsrMsg_HintText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_HintText)
  // optional string text = 1;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_HintText.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_HintText)
  return target;
}

size_t CCSUsrMsg_HintText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_HintText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string text = 1;
  if (has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_HintText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_HintText)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_HintText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_HintText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_HintText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_HintText)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_HintText::MergeFrom(const CCSUsrMsg_HintText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_HintText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_text()) {
    set_has_text();
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void CCSUsrMsg_HintText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_HintText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_HintText::CopyFrom(const CCSUsrMsg_HintText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_HintText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_HintText::IsInitialized() const {
  return true;
}

void CCSUsrMsg_HintText::Swap(CCSUsrMsg_HintText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_HintText::InternalSwap(CCSUsrMsg_HintText* other) {
  text_.Swap(&other->text_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_HintText::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[20];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_HintText

// optional string text = 1;
bool CCSUsrMsg_HintText::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_HintText::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_HintText::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_HintText::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& CCSUsrMsg_HintText::text() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HintText.text)
  return text_.GetNoArena();
}
void CCSUsrMsg_HintText::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HintText.text)
}
#if LANG_CXX11
void CCSUsrMsg_HintText::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_HintText.text)
}
#endif
void CCSUsrMsg_HintText::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_HintText.text)
}
void CCSUsrMsg_HintText::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_HintText.text)
}
::std::string* CCSUsrMsg_HintText::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_HintText.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_HintText::release_text() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_HintText.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_HintText::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_HintText.text)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_KeyHintText::kHintsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_KeyHintText::CCSUsrMsg_KeyHintText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_KeyHintText)
}
CCSUsrMsg_KeyHintText::CCSUsrMsg_KeyHintText(const CCSUsrMsg_KeyHintText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      hints_(from.hints_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_KeyHintText)
}

void CCSUsrMsg_KeyHintText::SharedCtor() {
  _cached_size_ = 0;
}

CCSUsrMsg_KeyHintText::~CCSUsrMsg_KeyHintText() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_KeyHintText)
  SharedDtor();
}

void CCSUsrMsg_KeyHintText::SharedDtor() {
}

void CCSUsrMsg_KeyHintText::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_KeyHintText::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[21].descriptor;
}

const CCSUsrMsg_KeyHintText& CCSUsrMsg_KeyHintText::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_KeyHintText* CCSUsrMsg_KeyHintText::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_KeyHintText* n = new CCSUsrMsg_KeyHintText;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_KeyHintText::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_KeyHintText)
  hints_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_KeyHintText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_KeyHintText)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string hints = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_hints()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hints(this->hints_size() - 1).data(),
            this->hints(this->hints_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_KeyHintText.hints");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_KeyHintText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_KeyHintText)
  return false;
#undef DO_
}

void CCSUsrMsg_KeyHintText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_KeyHintText)
  // repeated string hints = 1;
  for (int i = 0; i < this->hints_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hints(i).data(), this->hints(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_KeyHintText.hints");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->hints(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_KeyHintText)
}

::google::protobuf::uint8* CCSUsrMsg_KeyHintText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_KeyHintText)
  // repeated string hints = 1;
  for (int i = 0; i < this->hints_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hints(i).data(), this->hints(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_KeyHintText.hints");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->hints(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_KeyHintText)
  return target;
}

size_t CCSUsrMsg_KeyHintText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_KeyHintText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated string hints = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->hints_size());
  for (int i = 0; i < this->hints_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->hints(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_KeyHintText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_KeyHintText)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_KeyHintText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_KeyHintText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_KeyHintText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_KeyHintText)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_KeyHintText::MergeFrom(const CCSUsrMsg_KeyHintText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_KeyHintText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hints_.MergeFrom(from.hints_);
}

void CCSUsrMsg_KeyHintText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_KeyHintText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_KeyHintText::CopyFrom(const CCSUsrMsg_KeyHintText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_KeyHintText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_KeyHintText::IsInitialized() const {
  return true;
}

void CCSUsrMsg_KeyHintText::Swap(CCSUsrMsg_KeyHintText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_KeyHintText::InternalSwap(CCSUsrMsg_KeyHintText* other) {
  hints_.UnsafeArenaSwap(&other->hints_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_KeyHintText::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[21];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_KeyHintText

// repeated string hints = 1;
int CCSUsrMsg_KeyHintText::hints_size() const {
  return hints_.size();
}
void CCSUsrMsg_KeyHintText::clear_hints() {
  hints_.Clear();
}
const ::std::string& CCSUsrMsg_KeyHintText::hints(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_KeyHintText.hints)
  return hints_.Get(index);
}
::std::string* CCSUsrMsg_KeyHintText::mutable_hints(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_KeyHintText.hints)
  return hints_.Mutable(index);
}
void CCSUsrMsg_KeyHintText::set_hints(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CCSUsrMsg_KeyHintText.hints)
  hints_.Mutable(index)->assign(value);
}
void CCSUsrMsg_KeyHintText::set_hints(int index, const char* value) {
  hints_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_KeyHintText.hints)
}
void CCSUsrMsg_KeyHintText::set_hints(int index, const char* value, size_t size) {
  hints_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_KeyHintText.hints)
}
::std::string* CCSUsrMsg_KeyHintText::add_hints() {
  // @@protoc_insertion_point(field_add_mutable:CCSUsrMsg_KeyHintText.hints)
  return hints_.Add();
}
void CCSUsrMsg_KeyHintText::add_hints(const ::std::string& value) {
  hints_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CCSUsrMsg_KeyHintText.hints)
}
void CCSUsrMsg_KeyHintText::add_hints(const char* value) {
  hints_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CCSUsrMsg_KeyHintText.hints)
}
void CCSUsrMsg_KeyHintText::add_hints(const char* value, size_t size) {
  hints_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CCSUsrMsg_KeyHintText.hints)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_KeyHintText::hints() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_KeyHintText.hints)
  return hints_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_KeyHintText::mutable_hints() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_KeyHintText.hints)
  return &hints_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::kEntityIdxFieldNumber;
const int CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::kClassIdFieldNumber;
const int CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::kOriginXFieldNumber;
const int CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::kOriginYFieldNumber;
const int CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::kOriginZFieldNumber;
const int CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::kAngleYFieldNumber;
const int CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::kDefuserFieldNumber;
const int CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::kPlayerHasDefuserFieldNumber;
const int CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::kPlayerHasC4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
}
CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_idx_, &from.entity_idx_,
    reinterpret_cast<char*>(&player_has_c4_) -
    reinterpret_cast<char*>(&entity_idx_) + sizeof(player_has_c4_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&entity_idx_, 0, reinterpret_cast<char*>(&player_has_c4_) -
    reinterpret_cast<char*>(&entity_idx_) + sizeof(player_has_c4_));
}

CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::~CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  SharedDtor();
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::SharedDtor() {
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[22].descriptor;
}

const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* n = new CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&entity_idx_, 0, reinterpret_cast<char*>(&player_has_defuser_) -
      reinterpret_cast<char*>(&entity_idx_) + sizeof(player_has_defuser_));
  }
  player_has_c4_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 entity_idx = 1;
      case 1: {
        if (tag == 8u) {
          set_has_entity_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 class_id = 2;
      case 2: {
        if (tag == 16u) {
          set_has_class_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &class_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 origin_x = 3;
      case 3: {
        if (tag == 24u) {
          set_has_origin_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &origin_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 origin_y = 4;
      case 4: {
        if (tag == 32u) {
          set_has_origin_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &origin_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 origin_z = 5;
      case 5: {
        if (tag == 40u) {
          set_has_origin_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &origin_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 angle_y = 6;
      case 6: {
        if (tag == 48u) {
          set_has_angle_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &angle_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool defuser = 7;
      case 7: {
        if (tag == 56u) {
          set_has_defuser();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &defuser_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool player_has_defuser = 8;
      case 8: {
        if (tag == 64u) {
          set_has_player_has_defuser();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &player_has_defuser_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool player_has_c4 = 9;
      case 9: {
        if (tag == 72u) {
          set_has_player_has_c4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &player_has_c4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  return false;
#undef DO_
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  // optional int32 entity_idx = 1;
  if (has_entity_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entity_idx(), output);
  }

  // optional int32 class_id = 2;
  if (has_class_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->class_id(), output);
  }

  // optional int32 origin_x = 3;
  if (has_origin_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->origin_x(), output);
  }

  // optional int32 origin_y = 4;
  if (has_origin_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->origin_y(), output);
  }

  // optional int32 origin_z = 5;
  if (has_origin_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->origin_z(), output);
  }

  // optional int32 angle_y = 6;
  if (has_angle_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->angle_y(), output);
  }

  // optional bool defuser = 7;
  if (has_defuser()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->defuser(), output);
  }

  // optional bool player_has_defuser = 8;
  if (has_player_has_defuser()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->player_has_defuser(), output);
  }

  // optional bool player_has_c4 = 9;
  if (has_player_has_c4()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->player_has_c4(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
}

::google::protobuf::uint8* CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  // optional int32 entity_idx = 1;
  if (has_entity_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entity_idx(), target);
  }

  // optional int32 class_id = 2;
  if (has_class_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->class_id(), target);
  }

  // optional int32 origin_x = 3;
  if (has_origin_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->origin_x(), target);
  }

  // optional int32 origin_y = 4;
  if (has_origin_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->origin_y(), target);
  }

  // optional int32 origin_z = 5;
  if (has_origin_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->origin_z(), target);
  }

  // optional int32 angle_y = 6;
  if (has_angle_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->angle_y(), target);
  }

  // optional bool defuser = 7;
  if (has_defuser()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->defuser(), target);
  }

  // optional bool player_has_defuser = 8;
  if (has_player_has_defuser()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->player_has_defuser(), target);
  }

  // optional bool player_has_c4 = 9;
  if (has_player_has_c4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->player_has_c4(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  return target;
}

size_t CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 entity_idx = 1;
    if (has_entity_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity_idx());
    }

    // optional int32 class_id = 2;
    if (has_class_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->class_id());
    }

    // optional int32 origin_x = 3;
    if (has_origin_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->origin_x());
    }

    // optional int32 origin_y = 4;
    if (has_origin_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->origin_y());
    }

    // optional int32 origin_z = 5;
    if (has_origin_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->origin_z());
    }

    // optional int32 angle_y = 6;
    if (has_angle_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->angle_y());
    }

    // optional bool defuser = 7;
    if (has_defuser()) {
      total_size += 1 + 1;
    }

    // optional bool player_has_defuser = 8;
    if (has_player_has_defuser()) {
      total_size += 1 + 1;
    }

  }
  // optional bool player_has_c4 = 9;
  if (has_player_has_c4()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::MergeFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_entity_idx()) {
      set_entity_idx(from.entity_idx());
    }
    if (from.has_class_id()) {
      set_class_id(from.class_id());
    }
    if (from.has_origin_x()) {
      set_origin_x(from.origin_x());
    }
    if (from.has_origin_y()) {
      set_origin_y(from.origin_y());
    }
    if (from.has_origin_z()) {
      set_origin_z(from.origin_z());
    }
    if (from.has_angle_y()) {
      set_angle_y(from.angle_y());
    }
    if (from.has_defuser()) {
      set_defuser(from.defuser());
    }
    if (from.has_player_has_defuser()) {
      set_player_has_defuser(from.player_has_defuser());
    }
  }
  if (from.has_player_has_c4()) {
    set_player_has_c4(from.player_has_c4());
  }
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::CopyFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::Swap(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::InternalSwap(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* other) {
  std::swap(entity_idx_, other->entity_idx_);
  std::swap(class_id_, other->class_id_);
  std::swap(origin_x_, other->origin_x_);
  std::swap(origin_y_, other->origin_y_);
  std::swap(origin_z_, other->origin_z_);
  std::swap(angle_y_, other->angle_y_);
  std::swap(defuser_, other->defuser_);
  std::swap(player_has_defuser_, other->player_has_defuser_);
  std::swap(player_has_c4_, other->player_has_c4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[22];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate

// optional int32 entity_idx = 1;
bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_entity_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_entity_idx() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_entity_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_entity_idx() {
  entity_idx_ = 0;
  clear_has_entity_idx();
}
::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::entity_idx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.entity_idx)
  return entity_idx_;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_entity_idx(::google::protobuf::int32 value) {
  set_has_entity_idx();
  entity_idx_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.entity_idx)
}

// optional int32 class_id = 2;
bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_class_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_class_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_class_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_class_id() {
  class_id_ = 0;
  clear_has_class_id();
}
::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::class_id() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.class_id)
  return class_id_;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_class_id(::google::protobuf::int32 value) {
  set_has_class_id();
  class_id_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.class_id)
}

// optional int32 origin_x = 3;
bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_origin_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_origin_x() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_origin_x() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_origin_x() {
  origin_x_ = 0;
  clear_has_origin_x();
}
::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::origin_x() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.origin_x)
  return origin_x_;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_origin_x(::google::protobuf::int32 value) {
  set_has_origin_x();
  origin_x_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.origin_x)
}

// optional int32 origin_y = 4;
bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_origin_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_origin_y() {
  _has_bits_[0] |= 0x00000008u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_origin_y() {
  _has_bits_[0] &= ~0x00000008u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_origin_y() {
  origin_y_ = 0;
  clear_has_origin_y();
}
::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::origin_y() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.origin_y)
  return origin_y_;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_origin_y(::google::protobuf::int32 value) {
  set_has_origin_y();
  origin_y_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.origin_y)
}

// optional int32 origin_z = 5;
bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_origin_z() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_origin_z() {
  _has_bits_[0] |= 0x00000010u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_origin_z() {
  _has_bits_[0] &= ~0x00000010u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_origin_z() {
  origin_z_ = 0;
  clear_has_origin_z();
}
::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::origin_z() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.origin_z)
  return origin_z_;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_origin_z(::google::protobuf::int32 value) {
  set_has_origin_z();
  origin_z_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.origin_z)
}

// optional int32 angle_y = 6;
bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_angle_y() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_angle_y() {
  _has_bits_[0] |= 0x00000020u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_angle_y() {
  _has_bits_[0] &= ~0x00000020u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_angle_y() {
  angle_y_ = 0;
  clear_has_angle_y();
}
::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::angle_y() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.angle_y)
  return angle_y_;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_angle_y(::google::protobuf::int32 value) {
  set_has_angle_y();
  angle_y_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.angle_y)
}

// optional bool defuser = 7;
bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_defuser() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_defuser() {
  _has_bits_[0] |= 0x00000040u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_defuser() {
  _has_bits_[0] &= ~0x00000040u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_defuser() {
  defuser_ = false;
  clear_has_defuser();
}
bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::defuser() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.defuser)
  return defuser_;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_defuser(bool value) {
  set_has_defuser();
  defuser_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.defuser)
}

// optional bool player_has_defuser = 8;
bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_player_has_defuser() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_player_has_defuser() {
  _has_bits_[0] |= 0x00000080u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_player_has_defuser() {
  _has_bits_[0] &= ~0x00000080u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_player_has_defuser() {
  player_has_defuser_ = false;
  clear_has_player_has_defuser();
}
bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::player_has_defuser() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.player_has_defuser)
  return player_has_defuser_;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_player_has_defuser(bool value) {
  set_has_player_has_defuser();
  player_has_defuser_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.player_has_defuser)
}

// optional bool player_has_c4 = 9;
bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_player_has_c4() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_player_has_c4() {
  _has_bits_[0] |= 0x00000100u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_player_has_c4() {
  _has_bits_[0] &= ~0x00000100u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_player_has_c4() {
  player_has_c4_ = false;
  clear_has_player_has_c4();
}
bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::player_has_c4() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.player_has_c4)
  return player_has_c4_;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_player_has_c4(bool value) {
  set_has_player_has_c4();
  player_has_c4_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.player_has_c4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ProcessSpottedEntityUpdate::kNewUpdateFieldNumber;
const int CCSUsrMsg_ProcessSpottedEntityUpdate::kEntityUpdatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ProcessSpottedEntityUpdate::CCSUsrMsg_ProcessSpottedEntityUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ProcessSpottedEntityUpdate)
}
CCSUsrMsg_ProcessSpottedEntityUpdate::CCSUsrMsg_ProcessSpottedEntityUpdate(const CCSUsrMsg_ProcessSpottedEntityUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      entity_updates_(from.entity_updates_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  new_update_ = from.new_update_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ProcessSpottedEntityUpdate)
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::SharedCtor() {
  _cached_size_ = 0;
  new_update_ = false;
}

CCSUsrMsg_ProcessSpottedEntityUpdate::~CCSUsrMsg_ProcessSpottedEntityUpdate() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ProcessSpottedEntityUpdate)
  SharedDtor();
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::SharedDtor() {
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ProcessSpottedEntityUpdate::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[23].descriptor;
}

const CCSUsrMsg_ProcessSpottedEntityUpdate& CCSUsrMsg_ProcessSpottedEntityUpdate::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_ProcessSpottedEntityUpdate* CCSUsrMsg_ProcessSpottedEntityUpdate::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ProcessSpottedEntityUpdate* n = new CCSUsrMsg_ProcessSpottedEntityUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ProcessSpottedEntityUpdate)
  entity_updates_.Clear();
  new_update_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ProcessSpottedEntityUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ProcessSpottedEntityUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool new_update = 1;
      case 1: {
        if (tag == 8u) {
          set_has_new_update();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &new_update_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate entity_updates = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entity_updates()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ProcessSpottedEntityUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ProcessSpottedEntityUpdate)
  return false;
#undef DO_
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ProcessSpottedEntityUpdate)
  // optional bool new_update = 1;
  if (has_new_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->new_update(), output);
  }

  // repeated .CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate entity_updates = 2;
  for (unsigned int i = 0, n = this->entity_updates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->entity_updates(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ProcessSpottedEntityUpdate)
}

::google::protobuf::uint8* CCSUsrMsg_ProcessSpottedEntityUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ProcessSpottedEntityUpdate)
  // optional bool new_update = 1;
  if (has_new_update()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->new_update(), target);
  }

  // repeated .CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate entity_updates = 2;
  for (unsigned int i = 0, n = this->entity_updates_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->entity_updates(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ProcessSpottedEntityUpdate)
  return target;
}

size_t CCSUsrMsg_ProcessSpottedEntityUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ProcessSpottedEntityUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate entity_updates = 2;
  {
    unsigned int count = this->entity_updates_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entity_updates(i));
    }
  }

  // optional bool new_update = 1;
  if (has_new_update()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ProcessSpottedEntityUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ProcessSpottedEntityUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ProcessSpottedEntityUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ProcessSpottedEntityUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ProcessSpottedEntityUpdate)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::MergeFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ProcessSpottedEntityUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entity_updates_.MergeFrom(from.entity_updates_);
  if (from.has_new_update()) {
    set_new_update(from.new_update());
  }
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ProcessSpottedEntityUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::CopyFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ProcessSpottedEntityUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ProcessSpottedEntityUpdate::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::Swap(CCSUsrMsg_ProcessSpottedEntityUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ProcessSpottedEntityUpdate::InternalSwap(CCSUsrMsg_ProcessSpottedEntityUpdate* other) {
  entity_updates_.UnsafeArenaSwap(&other->entity_updates_);
  std::swap(new_update_, other->new_update_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ProcessSpottedEntityUpdate::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[23];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_ProcessSpottedEntityUpdate

// optional bool new_update = 1;
bool CCSUsrMsg_ProcessSpottedEntityUpdate::has_new_update() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate::set_has_new_update() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate::clear_has_new_update() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate::clear_new_update() {
  new_update_ = false;
  clear_has_new_update();
}
bool CCSUsrMsg_ProcessSpottedEntityUpdate::new_update() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.new_update)
  return new_update_;
}
void CCSUsrMsg_ProcessSpottedEntityUpdate::set_new_update(bool value) {
  set_has_new_update();
  new_update_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.new_update)
}

// repeated .CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate entity_updates = 2;
int CCSUsrMsg_ProcessSpottedEntityUpdate::entity_updates_size() const {
  return entity_updates_.size();
}
void CCSUsrMsg_ProcessSpottedEntityUpdate::clear_entity_updates() {
  entity_updates_.Clear();
}
const ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& CCSUsrMsg_ProcessSpottedEntityUpdate::entity_updates(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.entity_updates)
  return entity_updates_.Get(index);
}
::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* CCSUsrMsg_ProcessSpottedEntityUpdate::mutable_entity_updates(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_ProcessSpottedEntityUpdate.entity_updates)
  return entity_updates_.Mutable(index);
}
::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* CCSUsrMsg_ProcessSpottedEntityUpdate::add_entity_updates() {
  // @@protoc_insertion_point(field_add:CCSUsrMsg_ProcessSpottedEntityUpdate.entity_updates)
  return entity_updates_.Add();
}
::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate >*
CCSUsrMsg_ProcessSpottedEntityUpdate::mutable_entity_updates() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_ProcessSpottedEntityUpdate.entity_updates)
  return &entity_updates_;
}
const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate >&
CCSUsrMsg_ProcessSpottedEntityUpdate::entity_updates() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_ProcessSpottedEntityUpdate.entity_updates)
  return entity_updates_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_SendPlayerItemDrops::kEntityUpdatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_SendPlayerItemDrops::CCSUsrMsg_SendPlayerItemDrops()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_SendPlayerItemDrops)
}
CCSUsrMsg_SendPlayerItemDrops::CCSUsrMsg_SendPlayerItemDrops(const CCSUsrMsg_SendPlayerItemDrops& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      entity_updates_(from.entity_updates_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_SendPlayerItemDrops)
}

void CCSUsrMsg_SendPlayerItemDrops::SharedCtor() {
  _cached_size_ = 0;
}

CCSUsrMsg_SendPlayerItemDrops::~CCSUsrMsg_SendPlayerItemDrops() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_SendPlayerItemDrops)
  SharedDtor();
}

void CCSUsrMsg_SendPlayerItemDrops::SharedDtor() {
}

void CCSUsrMsg_SendPlayerItemDrops::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_SendPlayerItemDrops::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[24].descriptor;
}

const CCSUsrMsg_SendPlayerItemDrops& CCSUsrMsg_SendPlayerItemDrops::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_SendPlayerItemDrops* CCSUsrMsg_SendPlayerItemDrops::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_SendPlayerItemDrops* n = new CCSUsrMsg_SendPlayerItemDrops;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_SendPlayerItemDrops::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_SendPlayerItemDrops)
  entity_updates_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_SendPlayerItemDrops::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_SendPlayerItemDrops)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CEconItemPreviewDataBlock entity_updates = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entity_updates()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_SendPlayerItemDrops)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_SendPlayerItemDrops)
  return false;
#undef DO_
}

void CCSUsrMsg_SendPlayerItemDrops::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_SendPlayerItemDrops)
  // repeated .CEconItemPreviewDataBlock entity_updates = 1;
  for (unsigned int i = 0, n = this->entity_updates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entity_updates(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_SendPlayerItemDrops)
}

::google::protobuf::uint8* CCSUsrMsg_SendPlayerItemDrops::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_SendPlayerItemDrops)
  // repeated .CEconItemPreviewDataBlock entity_updates = 1;
  for (unsigned int i = 0, n = this->entity_updates_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->entity_updates(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_SendPlayerItemDrops)
  return target;
}

size_t CCSUsrMsg_SendPlayerItemDrops::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_SendPlayerItemDrops)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .CEconItemPreviewDataBlock entity_updates = 1;
  {
    unsigned int count = this->entity_updates_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entity_updates(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_SendPlayerItemDrops::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_SendPlayerItemDrops)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_SendPlayerItemDrops* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_SendPlayerItemDrops>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_SendPlayerItemDrops)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_SendPlayerItemDrops)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_SendPlayerItemDrops::MergeFrom(const CCSUsrMsg_SendPlayerItemDrops& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_SendPlayerItemDrops)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entity_updates_.MergeFrom(from.entity_updates_);
}

void CCSUsrMsg_SendPlayerItemDrops::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_SendPlayerItemDrops)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_SendPlayerItemDrops::CopyFrom(const CCSUsrMsg_SendPlayerItemDrops& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_SendPlayerItemDrops)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_SendPlayerItemDrops::IsInitialized() const {
  return true;
}

void CCSUsrMsg_SendPlayerItemDrops::Swap(CCSUsrMsg_SendPlayerItemDrops* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_SendPlayerItemDrops::InternalSwap(CCSUsrMsg_SendPlayerItemDrops* other) {
  entity_updates_.UnsafeArenaSwap(&other->entity_updates_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_SendPlayerItemDrops::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[24];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_SendPlayerItemDrops

// repeated .CEconItemPreviewDataBlock entity_updates = 1;
int CCSUsrMsg_SendPlayerItemDrops::entity_updates_size() const {
  return entity_updates_.size();
}
void CCSUsrMsg_SendPlayerItemDrops::clear_entity_updates() {
  entity_updates_.Clear();
}
const ::CEconItemPreviewDataBlock& CCSUsrMsg_SendPlayerItemDrops::entity_updates(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendPlayerItemDrops.entity_updates)
  return entity_updates_.Get(index);
}
::CEconItemPreviewDataBlock* CCSUsrMsg_SendPlayerItemDrops::mutable_entity_updates(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_SendPlayerItemDrops.entity_updates)
  return entity_updates_.Mutable(index);
}
::CEconItemPreviewDataBlock* CCSUsrMsg_SendPlayerItemDrops::add_entity_updates() {
  // @@protoc_insertion_point(field_add:CCSUsrMsg_SendPlayerItemDrops.entity_updates)
  return entity_updates_.Add();
}
::google::protobuf::RepeatedPtrField< ::CEconItemPreviewDataBlock >*
CCSUsrMsg_SendPlayerItemDrops::mutable_entity_updates() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_SendPlayerItemDrops.entity_updates)
  return &entity_updates_;
}
const ::google::protobuf::RepeatedPtrField< ::CEconItemPreviewDataBlock >&
CCSUsrMsg_SendPlayerItemDrops::entity_updates() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_SendPlayerItemDrops.entity_updates)
  return entity_updates_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_SendPlayerItemFound::kIteminfoFieldNumber;
const int CCSUsrMsg_SendPlayerItemFound::kEntindexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_SendPlayerItemFound::CCSUsrMsg_SendPlayerItemFound()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_SendPlayerItemFound)
}
CCSUsrMsg_SendPlayerItemFound::CCSUsrMsg_SendPlayerItemFound(const CCSUsrMsg_SendPlayerItemFound& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_iteminfo()) {
    iteminfo_ = new ::CEconItemPreviewDataBlock(*from.iteminfo_);
  } else {
    iteminfo_ = NULL;
  }
  entindex_ = from.entindex_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_SendPlayerItemFound)
}

void CCSUsrMsg_SendPlayerItemFound::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&iteminfo_, 0, reinterpret_cast<char*>(&entindex_) -
    reinterpret_cast<char*>(&iteminfo_) + sizeof(entindex_));
}

CCSUsrMsg_SendPlayerItemFound::~CCSUsrMsg_SendPlayerItemFound() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_SendPlayerItemFound)
  SharedDtor();
}

void CCSUsrMsg_SendPlayerItemFound::SharedDtor() {
  if (this != internal_default_instance()) {
    delete iteminfo_;
  }
}

void CCSUsrMsg_SendPlayerItemFound::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_SendPlayerItemFound::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[25].descriptor;
}

const CCSUsrMsg_SendPlayerItemFound& CCSUsrMsg_SendPlayerItemFound::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_SendPlayerItemFound* CCSUsrMsg_SendPlayerItemFound::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_SendPlayerItemFound* n = new CCSUsrMsg_SendPlayerItemFound;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_SendPlayerItemFound::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_SendPlayerItemFound)
  if (has_iteminfo()) {
    GOOGLE_DCHECK(iteminfo_ != NULL);
    iteminfo_->::CEconItemPreviewDataBlock::Clear();
  }
  entindex_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_SendPlayerItemFound::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_SendPlayerItemFound)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CEconItemPreviewDataBlock iteminfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_iteminfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 entindex = 2;
      case 2: {
        if (tag == 16u) {
          set_has_entindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_SendPlayerItemFound)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_SendPlayerItemFound)
  return false;
#undef DO_
}

void CCSUsrMsg_SendPlayerItemFound::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_SendPlayerItemFound)
  // optional .CEconItemPreviewDataBlock iteminfo = 1;
  if (has_iteminfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->iteminfo_, output);
  }

  // optional int32 entindex = 2;
  if (has_entindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->entindex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_SendPlayerItemFound)
}

::google::protobuf::uint8* CCSUsrMsg_SendPlayerItemFound::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_SendPlayerItemFound)
  // optional .CEconItemPreviewDataBlock iteminfo = 1;
  if (has_iteminfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->iteminfo_, false, target);
  }

  // optional int32 entindex = 2;
  if (has_entindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->entindex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_SendPlayerItemFound)
  return target;
}

size_t CCSUsrMsg_SendPlayerItemFound::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_SendPlayerItemFound)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CEconItemPreviewDataBlock iteminfo = 1;
    if (has_iteminfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->iteminfo_);
    }

    // optional int32 entindex = 2;
    if (has_entindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entindex());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_SendPlayerItemFound::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_SendPlayerItemFound)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_SendPlayerItemFound* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_SendPlayerItemFound>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_SendPlayerItemFound)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_SendPlayerItemFound)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_SendPlayerItemFound::MergeFrom(const CCSUsrMsg_SendPlayerItemFound& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_SendPlayerItemFound)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_iteminfo()) {
      mutable_iteminfo()->::CEconItemPreviewDataBlock::MergeFrom(from.iteminfo());
    }
    if (from.has_entindex()) {
      set_entindex(from.entindex());
    }
  }
}

void CCSUsrMsg_SendPlayerItemFound::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_SendPlayerItemFound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_SendPlayerItemFound::CopyFrom(const CCSUsrMsg_SendPlayerItemFound& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_SendPlayerItemFound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_SendPlayerItemFound::IsInitialized() const {
  return true;
}

void CCSUsrMsg_SendPlayerItemFound::Swap(CCSUsrMsg_SendPlayerItemFound* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_SendPlayerItemFound::InternalSwap(CCSUsrMsg_SendPlayerItemFound* other) {
  std::swap(iteminfo_, other->iteminfo_);
  std::swap(entindex_, other->entindex_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_SendPlayerItemFound::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[25];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_SendPlayerItemFound

// optional .CEconItemPreviewDataBlock iteminfo = 1;
bool CCSUsrMsg_SendPlayerItemFound::has_iteminfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_SendPlayerItemFound::set_has_iteminfo() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_SendPlayerItemFound::clear_has_iteminfo() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_SendPlayerItemFound::clear_iteminfo() {
  if (iteminfo_ != NULL) iteminfo_->::CEconItemPreviewDataBlock::Clear();
  clear_has_iteminfo();
}
const ::CEconItemPreviewDataBlock& CCSUsrMsg_SendPlayerItemFound::iteminfo() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendPlayerItemFound.iteminfo)
  return iteminfo_ != NULL ? *iteminfo_
                         : *::CEconItemPreviewDataBlock::internal_default_instance();
}
::CEconItemPreviewDataBlock* CCSUsrMsg_SendPlayerItemFound::mutable_iteminfo() {
  set_has_iteminfo();
  if (iteminfo_ == NULL) {
    iteminfo_ = new ::CEconItemPreviewDataBlock;
  }
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_SendPlayerItemFound.iteminfo)
  return iteminfo_;
}
::CEconItemPreviewDataBlock* CCSUsrMsg_SendPlayerItemFound::release_iteminfo() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_SendPlayerItemFound.iteminfo)
  clear_has_iteminfo();
  ::CEconItemPreviewDataBlock* temp = iteminfo_;
  iteminfo_ = NULL;
  return temp;
}
void CCSUsrMsg_SendPlayerItemFound::set_allocated_iteminfo(::CEconItemPreviewDataBlock* iteminfo) {
  delete iteminfo_;
  iteminfo_ = iteminfo;
  if (iteminfo) {
    set_has_iteminfo();
  } else {
    clear_has_iteminfo();
  }
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_SendPlayerItemFound.iteminfo)
}

// optional int32 entindex = 2;
bool CCSUsrMsg_SendPlayerItemFound::has_entindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_SendPlayerItemFound::set_has_entindex() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_SendPlayerItemFound::clear_has_entindex() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_SendPlayerItemFound::clear_entindex() {
  entindex_ = 0;
  clear_has_entindex();
}
::google::protobuf::int32 CCSUsrMsg_SendPlayerItemFound::entindex() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendPlayerItemFound.entindex)
  return entindex_;
}
void CCSUsrMsg_SendPlayerItemFound::set_entindex(::google::protobuf::int32 value) {
  set_has_entindex();
  entindex_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SendPlayerItemFound.entindex)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ReloadEffect::kEntidxFieldNumber;
const int CCSUsrMsg_ReloadEffect::kActanimFieldNumber;
const int CCSUsrMsg_ReloadEffect::kOriginXFieldNumber;
const int CCSUsrMsg_ReloadEffect::kOriginYFieldNumber;
const int CCSUsrMsg_ReloadEffect::kOriginZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ReloadEffect::CCSUsrMsg_ReloadEffect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ReloadEffect)
}
CCSUsrMsg_ReloadEffect::CCSUsrMsg_ReloadEffect(const CCSUsrMsg_ReloadEffect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entidx_, &from.entidx_,
    reinterpret_cast<char*>(&origin_z_) -
    reinterpret_cast<char*>(&entidx_) + sizeof(origin_z_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ReloadEffect)
}

void CCSUsrMsg_ReloadEffect::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&entidx_, 0, reinterpret_cast<char*>(&origin_z_) -
    reinterpret_cast<char*>(&entidx_) + sizeof(origin_z_));
}

CCSUsrMsg_ReloadEffect::~CCSUsrMsg_ReloadEffect() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ReloadEffect)
  SharedDtor();
}

void CCSUsrMsg_ReloadEffect::SharedDtor() {
}

void CCSUsrMsg_ReloadEffect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ReloadEffect::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[26].descriptor;
}

const CCSUsrMsg_ReloadEffect& CCSUsrMsg_ReloadEffect::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_ReloadEffect* CCSUsrMsg_ReloadEffect::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ReloadEffect* n = new CCSUsrMsg_ReloadEffect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ReloadEffect::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ReloadEffect)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&entidx_, 0, reinterpret_cast<char*>(&origin_z_) -
      reinterpret_cast<char*>(&entidx_) + sizeof(origin_z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ReloadEffect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ReloadEffect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 entidx = 1;
      case 1: {
        if (tag == 8u) {
          set_has_entidx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 actanim = 2;
      case 2: {
        if (tag == 16u) {
          set_has_actanim();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actanim_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float origin_x = 3;
      case 3: {
        if (tag == 29u) {
          set_has_origin_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &origin_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float origin_y = 4;
      case 4: {
        if (tag == 37u) {
          set_has_origin_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &origin_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float origin_z = 5;
      case 5: {
        if (tag == 45u) {
          set_has_origin_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &origin_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ReloadEffect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ReloadEffect)
  return false;
#undef DO_
}

void CCSUsrMsg_ReloadEffect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ReloadEffect)
  // optional int32 entidx = 1;
  if (has_entidx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entidx(), output);
  }

  // optional int32 actanim = 2;
  if (has_actanim()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->actanim(), output);
  }

  // optional float origin_x = 3;
  if (has_origin_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->origin_x(), output);
  }

  // optional float origin_y = 4;
  if (has_origin_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->origin_y(), output);
  }

  // optional float origin_z = 5;
  if (has_origin_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->origin_z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ReloadEffect)
}

::google::protobuf::uint8* CCSUsrMsg_ReloadEffect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ReloadEffect)
  // optional int32 entidx = 1;
  if (has_entidx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entidx(), target);
  }

  // optional int32 actanim = 2;
  if (has_actanim()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->actanim(), target);
  }

  // optional float origin_x = 3;
  if (has_origin_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->origin_x(), target);
  }

  // optional float origin_y = 4;
  if (has_origin_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->origin_y(), target);
  }

  // optional float origin_z = 5;
  if (has_origin_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->origin_z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ReloadEffect)
  return target;
}

size_t CCSUsrMsg_ReloadEffect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ReloadEffect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 entidx = 1;
    if (has_entidx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entidx());
    }

    // optional int32 actanim = 2;
    if (has_actanim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->actanim());
    }

    // optional float origin_x = 3;
    if (has_origin_x()) {
      total_size += 1 + 4;
    }

    // optional float origin_y = 4;
    if (has_origin_y()) {
      total_size += 1 + 4;
    }

    // optional float origin_z = 5;
    if (has_origin_z()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ReloadEffect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ReloadEffect)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ReloadEffect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ReloadEffect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ReloadEffect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ReloadEffect)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ReloadEffect::MergeFrom(const CCSUsrMsg_ReloadEffect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ReloadEffect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 31u) {
    if (from.has_entidx()) {
      set_entidx(from.entidx());
    }
    if (from.has_actanim()) {
      set_actanim(from.actanim());
    }
    if (from.has_origin_x()) {
      set_origin_x(from.origin_x());
    }
    if (from.has_origin_y()) {
      set_origin_y(from.origin_y());
    }
    if (from.has_origin_z()) {
      set_origin_z(from.origin_z());
    }
  }
}

void CCSUsrMsg_ReloadEffect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ReloadEffect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ReloadEffect::CopyFrom(const CCSUsrMsg_ReloadEffect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ReloadEffect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ReloadEffect::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ReloadEffect::Swap(CCSUsrMsg_ReloadEffect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ReloadEffect::InternalSwap(CCSUsrMsg_ReloadEffect* other) {
  std::swap(entidx_, other->entidx_);
  std::swap(actanim_, other->actanim_);
  std::swap(origin_x_, other->origin_x_);
  std::swap(origin_y_, other->origin_y_);
  std::swap(origin_z_, other->origin_z_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ReloadEffect::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[26];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_ReloadEffect

// optional int32 entidx = 1;
bool CCSUsrMsg_ReloadEffect::has_entidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_ReloadEffect::set_has_entidx() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_ReloadEffect::clear_has_entidx() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_ReloadEffect::clear_entidx() {
  entidx_ = 0;
  clear_has_entidx();
}
::google::protobuf::int32 CCSUsrMsg_ReloadEffect::entidx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReloadEffect.entidx)
  return entidx_;
}
void CCSUsrMsg_ReloadEffect::set_entidx(::google::protobuf::int32 value) {
  set_has_entidx();
  entidx_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReloadEffect.entidx)
}

// optional int32 actanim = 2;
bool CCSUsrMsg_ReloadEffect::has_actanim() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_ReloadEffect::set_has_actanim() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_ReloadEffect::clear_has_actanim() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_ReloadEffect::clear_actanim() {
  actanim_ = 0;
  clear_has_actanim();
}
::google::protobuf::int32 CCSUsrMsg_ReloadEffect::actanim() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReloadEffect.actanim)
  return actanim_;
}
void CCSUsrMsg_ReloadEffect::set_actanim(::google::protobuf::int32 value) {
  set_has_actanim();
  actanim_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReloadEffect.actanim)
}

// optional float origin_x = 3;
bool CCSUsrMsg_ReloadEffect::has_origin_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_ReloadEffect::set_has_origin_x() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_ReloadEffect::clear_has_origin_x() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_ReloadEffect::clear_origin_x() {
  origin_x_ = 0;
  clear_has_origin_x();
}
float CCSUsrMsg_ReloadEffect::origin_x() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReloadEffect.origin_x)
  return origin_x_;
}
void CCSUsrMsg_ReloadEffect::set_origin_x(float value) {
  set_has_origin_x();
  origin_x_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReloadEffect.origin_x)
}

// optional float origin_y = 4;
bool CCSUsrMsg_ReloadEffect::has_origin_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CCSUsrMsg_ReloadEffect::set_has_origin_y() {
  _has_bits_[0] |= 0x00000008u;
}
void CCSUsrMsg_ReloadEffect::clear_has_origin_y() {
  _has_bits_[0] &= ~0x00000008u;
}
void CCSUsrMsg_ReloadEffect::clear_origin_y() {
  origin_y_ = 0;
  clear_has_origin_y();
}
float CCSUsrMsg_ReloadEffect::origin_y() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReloadEffect.origin_y)
  return origin_y_;
}
void CCSUsrMsg_ReloadEffect::set_origin_y(float value) {
  set_has_origin_y();
  origin_y_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReloadEffect.origin_y)
}

// optional float origin_z = 5;
bool CCSUsrMsg_ReloadEffect::has_origin_z() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CCSUsrMsg_ReloadEffect::set_has_origin_z() {
  _has_bits_[0] |= 0x00000010u;
}
void CCSUsrMsg_ReloadEffect::clear_has_origin_z() {
  _has_bits_[0] &= ~0x00000010u;
}
void CCSUsrMsg_ReloadEffect::clear_origin_z() {
  origin_z_ = 0;
  clear_has_origin_z();
}
float CCSUsrMsg_ReloadEffect::origin_z() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReloadEffect.origin_z)
  return origin_z_;
}
void CCSUsrMsg_ReloadEffect::set_origin_z(float value) {
  set_has_origin_z();
  origin_z_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReloadEffect.origin_z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_AdjustMoney::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_AdjustMoney::CCSUsrMsg_AdjustMoney()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_AdjustMoney)
}
CCSUsrMsg_AdjustMoney::CCSUsrMsg_AdjustMoney(const CCSUsrMsg_AdjustMoney& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_AdjustMoney)
}

void CCSUsrMsg_AdjustMoney::SharedCtor() {
  _cached_size_ = 0;
  amount_ = 0;
}

CCSUsrMsg_AdjustMoney::~CCSUsrMsg_AdjustMoney() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_AdjustMoney)
  SharedDtor();
}

void CCSUsrMsg_AdjustMoney::SharedDtor() {
}

void CCSUsrMsg_AdjustMoney::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_AdjustMoney::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[27].descriptor;
}

const CCSUsrMsg_AdjustMoney& CCSUsrMsg_AdjustMoney::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_AdjustMoney* CCSUsrMsg_AdjustMoney::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_AdjustMoney* n = new CCSUsrMsg_AdjustMoney;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_AdjustMoney::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_AdjustMoney)
  amount_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_AdjustMoney::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_AdjustMoney)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 amount = 1;
      case 1: {
        if (tag == 8u) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_AdjustMoney)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_AdjustMoney)
  return false;
#undef DO_
}

void CCSUsrMsg_AdjustMoney::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_AdjustMoney)
  // optional int32 amount = 1;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->amount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_AdjustMoney)
}

::google::protobuf::uint8* CCSUsrMsg_AdjustMoney::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_AdjustMoney)
  // optional int32 amount = 1;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->amount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_AdjustMoney)
  return target;
}

size_t CCSUsrMsg_AdjustMoney::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_AdjustMoney)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 amount = 1;
  if (has_amount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_AdjustMoney::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_AdjustMoney)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_AdjustMoney* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_AdjustMoney>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_AdjustMoney)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_AdjustMoney)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_AdjustMoney::MergeFrom(const CCSUsrMsg_AdjustMoney& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_AdjustMoney)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_amount()) {
    set_amount(from.amount());
  }
}

void CCSUsrMsg_AdjustMoney::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_AdjustMoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_AdjustMoney::CopyFrom(const CCSUsrMsg_AdjustMoney& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_AdjustMoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_AdjustMoney::IsInitialized() const {
  return true;
}

void CCSUsrMsg_AdjustMoney::Swap(CCSUsrMsg_AdjustMoney* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_AdjustMoney::InternalSwap(CCSUsrMsg_AdjustMoney* other) {
  std::swap(amount_, other->amount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_AdjustMoney::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[27];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_AdjustMoney

// optional int32 amount = 1;
bool CCSUsrMsg_AdjustMoney::has_amount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_AdjustMoney::set_has_amount() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_AdjustMoney::clear_has_amount() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_AdjustMoney::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
::google::protobuf::int32 CCSUsrMsg_AdjustMoney::amount() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_AdjustMoney.amount)
  return amount_;
}
void CCSUsrMsg_AdjustMoney::set_amount(::google::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_AdjustMoney.amount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ReportHit::kPosXFieldNumber;
const int CCSUsrMsg_ReportHit::kPosYFieldNumber;
const int CCSUsrMsg_ReportHit::kTimestampFieldNumber;
const int CCSUsrMsg_ReportHit::kPosZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ReportHit::CCSUsrMsg_ReportHit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ReportHit)
}
CCSUsrMsg_ReportHit::CCSUsrMsg_ReportHit(const CCSUsrMsg_ReportHit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pos_x_, &from.pos_x_,
    reinterpret_cast<char*>(&pos_z_) -
    reinterpret_cast<char*>(&pos_x_) + sizeof(pos_z_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ReportHit)
}

void CCSUsrMsg_ReportHit::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pos_x_, 0, reinterpret_cast<char*>(&pos_z_) -
    reinterpret_cast<char*>(&pos_x_) + sizeof(pos_z_));
}

CCSUsrMsg_ReportHit::~CCSUsrMsg_ReportHit() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ReportHit)
  SharedDtor();
}

void CCSUsrMsg_ReportHit::SharedDtor() {
}

void CCSUsrMsg_ReportHit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ReportHit::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[28].descriptor;
}

const CCSUsrMsg_ReportHit& CCSUsrMsg_ReportHit::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_ReportHit* CCSUsrMsg_ReportHit::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ReportHit* n = new CCSUsrMsg_ReportHit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ReportHit::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ReportHit)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&pos_x_, 0, reinterpret_cast<char*>(&pos_z_) -
      reinterpret_cast<char*>(&pos_x_) + sizeof(pos_z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ReportHit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ReportHit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float pos_x = 1;
      case 1: {
        if (tag == 13u) {
          set_has_pos_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pos_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float pos_y = 2;
      case 2: {
        if (tag == 21u) {
          set_has_pos_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pos_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float pos_z = 3;
      case 3: {
        if (tag == 29u) {
          set_has_pos_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pos_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float timestamp = 4;
      case 4: {
        if (tag == 37u) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ReportHit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ReportHit)
  return false;
#undef DO_
}

void CCSUsrMsg_ReportHit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ReportHit)
  // optional float pos_x = 1;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->pos_x(), output);
  }

  // optional float pos_y = 2;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->pos_y(), output);
  }

  // optional float pos_z = 3;
  if (has_pos_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->pos_z(), output);
  }

  // optional float timestamp = 4;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ReportHit)
}

::google::protobuf::uint8* CCSUsrMsg_ReportHit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ReportHit)
  // optional float pos_x = 1;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->pos_x(), target);
  }

  // optional float pos_y = 2;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->pos_y(), target);
  }

  // optional float pos_z = 3;
  if (has_pos_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->pos_z(), target);
  }

  // optional float timestamp = 4;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ReportHit)
  return target;
}

size_t CCSUsrMsg_ReportHit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ReportHit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional float pos_x = 1;
    if (has_pos_x()) {
      total_size += 1 + 4;
    }

    // optional float pos_y = 2;
    if (has_pos_y()) {
      total_size += 1 + 4;
    }

    // optional float timestamp = 4;
    if (has_timestamp()) {
      total_size += 1 + 4;
    }

    // optional float pos_z = 3;
    if (has_pos_z()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ReportHit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ReportHit)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ReportHit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ReportHit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ReportHit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ReportHit)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ReportHit::MergeFrom(const CCSUsrMsg_ReportHit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ReportHit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_pos_z()) {
      set_pos_z(from.pos_z());
    }
  }
}

void CCSUsrMsg_ReportHit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ReportHit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ReportHit::CopyFrom(const CCSUsrMsg_ReportHit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ReportHit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ReportHit::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ReportHit::Swap(CCSUsrMsg_ReportHit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ReportHit::InternalSwap(CCSUsrMsg_ReportHit* other) {
  std::swap(pos_x_, other->pos_x_);
  std::swap(pos_y_, other->pos_y_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(pos_z_, other->pos_z_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ReportHit::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[28];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_ReportHit

// optional float pos_x = 1;
bool CCSUsrMsg_ReportHit::has_pos_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_ReportHit::set_has_pos_x() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_ReportHit::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_ReportHit::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
float CCSUsrMsg_ReportHit::pos_x() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReportHit.pos_x)
  return pos_x_;
}
void CCSUsrMsg_ReportHit::set_pos_x(float value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReportHit.pos_x)
}

// optional float pos_y = 2;
bool CCSUsrMsg_ReportHit::has_pos_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_ReportHit::set_has_pos_y() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_ReportHit::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_ReportHit::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
float CCSUsrMsg_ReportHit::pos_y() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReportHit.pos_y)
  return pos_y_;
}
void CCSUsrMsg_ReportHit::set_pos_y(float value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReportHit.pos_y)
}

// optional float timestamp = 4;
bool CCSUsrMsg_ReportHit::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_ReportHit::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_ReportHit::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_ReportHit::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
float CCSUsrMsg_ReportHit::timestamp() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReportHit.timestamp)
  return timestamp_;
}
void CCSUsrMsg_ReportHit::set_timestamp(float value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReportHit.timestamp)
}

// optional float pos_z = 3;
bool CCSUsrMsg_ReportHit::has_pos_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CCSUsrMsg_ReportHit::set_has_pos_z() {
  _has_bits_[0] |= 0x00000008u;
}
void CCSUsrMsg_ReportHit::clear_has_pos_z() {
  _has_bits_[0] &= ~0x00000008u;
}
void CCSUsrMsg_ReportHit::clear_pos_z() {
  pos_z_ = 0;
  clear_has_pos_z();
}
float CCSUsrMsg_ReportHit::pos_z() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReportHit.pos_z)
  return pos_z_;
}
void CCSUsrMsg_ReportHit::set_pos_z(float value) {
  set_has_pos_z();
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReportHit.pos_z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_KillCam::kObsModeFieldNumber;
const int CCSUsrMsg_KillCam::kFirstTargetFieldNumber;
const int CCSUsrMsg_KillCam::kSecondTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_KillCam::CCSUsrMsg_KillCam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_KillCam)
}
CCSUsrMsg_KillCam::CCSUsrMsg_KillCam(const CCSUsrMsg_KillCam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&obs_mode_, &from.obs_mode_,
    reinterpret_cast<char*>(&second_target_) -
    reinterpret_cast<char*>(&obs_mode_) + sizeof(second_target_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_KillCam)
}

void CCSUsrMsg_KillCam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&obs_mode_, 0, reinterpret_cast<char*>(&second_target_) -
    reinterpret_cast<char*>(&obs_mode_) + sizeof(second_target_));
}

CCSUsrMsg_KillCam::~CCSUsrMsg_KillCam() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_KillCam)
  SharedDtor();
}

void CCSUsrMsg_KillCam::SharedDtor() {
}

void CCSUsrMsg_KillCam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_KillCam::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[29].descriptor;
}

const CCSUsrMsg_KillCam& CCSUsrMsg_KillCam::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_KillCam* CCSUsrMsg_KillCam::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_KillCam* n = new CCSUsrMsg_KillCam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_KillCam::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_KillCam)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&obs_mode_, 0, reinterpret_cast<char*>(&second_target_) -
      reinterpret_cast<char*>(&obs_mode_) + sizeof(second_target_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_KillCam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_KillCam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 obs_mode = 1;
      case 1: {
        if (tag == 8u) {
          set_has_obs_mode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &obs_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 first_target = 2;
      case 2: {
        if (tag == 16u) {
          set_has_first_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 second_target = 3;
      case 3: {
        if (tag == 24u) {
          set_has_second_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_KillCam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_KillCam)
  return false;
#undef DO_
}

void CCSUsrMsg_KillCam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_KillCam)
  // optional int32 obs_mode = 1;
  if (has_obs_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->obs_mode(), output);
  }

  // optional int32 first_target = 2;
  if (has_first_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->first_target(), output);
  }

  // optional int32 second_target = 3;
  if (has_second_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->second_target(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_KillCam)
}

::google::protobuf::uint8* CCSUsrMsg_KillCam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_KillCam)
  // optional int32 obs_mode = 1;
  if (has_obs_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->obs_mode(), target);
  }

  // optional int32 first_target = 2;
  if (has_first_target()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->first_target(), target);
  }

  // optional int32 second_target = 3;
  if (has_second_target()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->second_target(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_KillCam)
  return target;
}

size_t CCSUsrMsg_KillCam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_KillCam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 obs_mode = 1;
    if (has_obs_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->obs_mode());
    }

    // optional int32 first_target = 2;
    if (has_first_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_target());
    }

    // optional int32 second_target = 3;
    if (has_second_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_target());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_KillCam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_KillCam)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_KillCam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_KillCam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_KillCam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_KillCam)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_KillCam::MergeFrom(const CCSUsrMsg_KillCam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_KillCam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_obs_mode()) {
      set_obs_mode(from.obs_mode());
    }
    if (from.has_first_target()) {
      set_first_target(from.first_target());
    }
    if (from.has_second_target()) {
      set_second_target(from.second_target());
    }
  }
}

void CCSUsrMsg_KillCam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_KillCam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_KillCam::CopyFrom(const CCSUsrMsg_KillCam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_KillCam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_KillCam::IsInitialized() const {
  return true;
}

void CCSUsrMsg_KillCam::Swap(CCSUsrMsg_KillCam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_KillCam::InternalSwap(CCSUsrMsg_KillCam* other) {
  std::swap(obs_mode_, other->obs_mode_);
  std::swap(first_target_, other->first_target_);
  std::swap(second_target_, other->second_target_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_KillCam::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[29];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_KillCam

// optional int32 obs_mode = 1;
bool CCSUsrMsg_KillCam::has_obs_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_KillCam::set_has_obs_mode() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_KillCam::clear_has_obs_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_KillCam::clear_obs_mode() {
  obs_mode_ = 0;
  clear_has_obs_mode();
}
::google::protobuf::int32 CCSUsrMsg_KillCam::obs_mode() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_KillCam.obs_mode)
  return obs_mode_;
}
void CCSUsrMsg_KillCam::set_obs_mode(::google::protobuf::int32 value) {
  set_has_obs_mode();
  obs_mode_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_KillCam.obs_mode)
}

// optional int32 first_target = 2;
bool CCSUsrMsg_KillCam::has_first_target() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_KillCam::set_has_first_target() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_KillCam::clear_has_first_target() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_KillCam::clear_first_target() {
  first_target_ = 0;
  clear_has_first_target();
}
::google::protobuf::int32 CCSUsrMsg_KillCam::first_target() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_KillCam.first_target)
  return first_target_;
}
void CCSUsrMsg_KillCam::set_first_target(::google::protobuf::int32 value) {
  set_has_first_target();
  first_target_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_KillCam.first_target)
}

// optional int32 second_target = 3;
bool CCSUsrMsg_KillCam::has_second_target() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_KillCam::set_has_second_target() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_KillCam::clear_has_second_target() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_KillCam::clear_second_target() {
  second_target_ = 0;
  clear_has_second_target();
}
::google::protobuf::int32 CCSUsrMsg_KillCam::second_target() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_KillCam.second_target)
  return second_target_;
}
void CCSUsrMsg_KillCam::set_second_target(::google::protobuf::int32 value) {
  set_has_second_target();
  second_target_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_KillCam.second_target)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_DesiredTimescale::kDesiredTimescaleFieldNumber;
const int CCSUsrMsg_DesiredTimescale::kDurationRealtimeSecFieldNumber;
const int CCSUsrMsg_DesiredTimescale::kInterpolatorTypeFieldNumber;
const int CCSUsrMsg_DesiredTimescale::kStartBlendTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_DesiredTimescale::CCSUsrMsg_DesiredTimescale()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_DesiredTimescale)
}
CCSUsrMsg_DesiredTimescale::CCSUsrMsg_DesiredTimescale(const CCSUsrMsg_DesiredTimescale& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&desired_timescale_, &from.desired_timescale_,
    reinterpret_cast<char*>(&start_blend_time_) -
    reinterpret_cast<char*>(&desired_timescale_) + sizeof(start_blend_time_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_DesiredTimescale)
}

void CCSUsrMsg_DesiredTimescale::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&desired_timescale_, 0, reinterpret_cast<char*>(&start_blend_time_) -
    reinterpret_cast<char*>(&desired_timescale_) + sizeof(start_blend_time_));
}

CCSUsrMsg_DesiredTimescale::~CCSUsrMsg_DesiredTimescale() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_DesiredTimescale)
  SharedDtor();
}

void CCSUsrMsg_DesiredTimescale::SharedDtor() {
}

void CCSUsrMsg_DesiredTimescale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_DesiredTimescale::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[30].descriptor;
}

const CCSUsrMsg_DesiredTimescale& CCSUsrMsg_DesiredTimescale::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_DesiredTimescale* CCSUsrMsg_DesiredTimescale::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_DesiredTimescale* n = new CCSUsrMsg_DesiredTimescale;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_DesiredTimescale::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_DesiredTimescale)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&desired_timescale_, 0, reinterpret_cast<char*>(&start_blend_time_) -
      reinterpret_cast<char*>(&desired_timescale_) + sizeof(start_blend_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_DesiredTimescale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_DesiredTimescale)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float desired_timescale = 1;
      case 1: {
        if (tag == 13u) {
          set_has_desired_timescale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &desired_timescale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration_realtime_sec = 2;
      case 2: {
        if (tag == 21u) {
          set_has_duration_realtime_sec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_realtime_sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 interpolator_type = 3;
      case 3: {
        if (tag == 24u) {
          set_has_interpolator_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &interpolator_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float start_blend_time = 4;
      case 4: {
        if (tag == 37u) {
          set_has_start_blend_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &start_blend_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_DesiredTimescale)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_DesiredTimescale)
  return false;
#undef DO_
}

void CCSUsrMsg_DesiredTimescale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_DesiredTimescale)
  // optional float desired_timescale = 1;
  if (has_desired_timescale()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->desired_timescale(), output);
  }

  // optional float duration_realtime_sec = 2;
  if (has_duration_realtime_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->duration_realtime_sec(), output);
  }

  // optional int32 interpolator_type = 3;
  if (has_interpolator_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->interpolator_type(), output);
  }

  // optional float start_blend_time = 4;
  if (has_start_blend_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->start_blend_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_DesiredTimescale)
}

::google::protobuf::uint8* CCSUsrMsg_DesiredTimescale::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_DesiredTimescale)
  // optional float desired_timescale = 1;
  if (has_desired_timescale()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->desired_timescale(), target);
  }

  // optional float duration_realtime_sec = 2;
  if (has_duration_realtime_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->duration_realtime_sec(), target);
  }

  // optional int32 interpolator_type = 3;
  if (has_interpolator_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->interpolator_type(), target);
  }

  // optional float start_blend_time = 4;
  if (has_start_blend_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->start_blend_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_DesiredTimescale)
  return target;
}

size_t CCSUsrMsg_DesiredTimescale::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_DesiredTimescale)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional float desired_timescale = 1;
    if (has_desired_timescale()) {
      total_size += 1 + 4;
    }

    // optional float duration_realtime_sec = 2;
    if (has_duration_realtime_sec()) {
      total_size += 1 + 4;
    }

    // optional int32 interpolator_type = 3;
    if (has_interpolator_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->interpolator_type());
    }

    // optional float start_blend_time = 4;
    if (has_start_blend_time()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_DesiredTimescale::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_DesiredTimescale)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_DesiredTimescale* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_DesiredTimescale>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_DesiredTimescale)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_DesiredTimescale)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_DesiredTimescale::MergeFrom(const CCSUsrMsg_DesiredTimescale& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_DesiredTimescale)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_desired_timescale()) {
      set_desired_timescale(from.desired_timescale());
    }
    if (from.has_duration_realtime_sec()) {
      set_duration_realtime_sec(from.duration_realtime_sec());
    }
    if (from.has_interpolator_type()) {
      set_interpolator_type(from.interpolator_type());
    }
    if (from.has_start_blend_time()) {
      set_start_blend_time(from.start_blend_time());
    }
  }
}

void CCSUsrMsg_DesiredTimescale::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_DesiredTimescale)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_DesiredTimescale::CopyFrom(const CCSUsrMsg_DesiredTimescale& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_DesiredTimescale)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_DesiredTimescale::IsInitialized() const {
  return true;
}

void CCSUsrMsg_DesiredTimescale::Swap(CCSUsrMsg_DesiredTimescale* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_DesiredTimescale::InternalSwap(CCSUsrMsg_DesiredTimescale* other) {
  std::swap(desired_timescale_, other->desired_timescale_);
  std::swap(duration_realtime_sec_, other->duration_realtime_sec_);
  std::swap(interpolator_type_, other->interpolator_type_);
  std::swap(start_blend_time_, other->start_blend_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_DesiredTimescale::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[30];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_DesiredTimescale

// optional float desired_timescale = 1;
bool CCSUsrMsg_DesiredTimescale::has_desired_timescale() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_DesiredTimescale::set_has_desired_timescale() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_DesiredTimescale::clear_has_desired_timescale() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_DesiredTimescale::clear_desired_timescale() {
  desired_timescale_ = 0;
  clear_has_desired_timescale();
}
float CCSUsrMsg_DesiredTimescale::desired_timescale() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DesiredTimescale.desired_timescale)
  return desired_timescale_;
}
void CCSUsrMsg_DesiredTimescale::set_desired_timescale(float value) {
  set_has_desired_timescale();
  desired_timescale_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DesiredTimescale.desired_timescale)
}

// optional float duration_realtime_sec = 2;
bool CCSUsrMsg_DesiredTimescale::has_duration_realtime_sec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_DesiredTimescale::set_has_duration_realtime_sec() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_DesiredTimescale::clear_has_duration_realtime_sec() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_DesiredTimescale::clear_duration_realtime_sec() {
  duration_realtime_sec_ = 0;
  clear_has_duration_realtime_sec();
}
float CCSUsrMsg_DesiredTimescale::duration_realtime_sec() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DesiredTimescale.duration_realtime_sec)
  return duration_realtime_sec_;
}
void CCSUsrMsg_DesiredTimescale::set_duration_realtime_sec(float value) {
  set_has_duration_realtime_sec();
  duration_realtime_sec_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DesiredTimescale.duration_realtime_sec)
}

// optional int32 interpolator_type = 3;
bool CCSUsrMsg_DesiredTimescale::has_interpolator_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_DesiredTimescale::set_has_interpolator_type() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_DesiredTimescale::clear_has_interpolator_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_DesiredTimescale::clear_interpolator_type() {
  interpolator_type_ = 0;
  clear_has_interpolator_type();
}
::google::protobuf::int32 CCSUsrMsg_DesiredTimescale::interpolator_type() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DesiredTimescale.interpolator_type)
  return interpolator_type_;
}
void CCSUsrMsg_DesiredTimescale::set_interpolator_type(::google::protobuf::int32 value) {
  set_has_interpolator_type();
  interpolator_type_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DesiredTimescale.interpolator_type)
}

// optional float start_blend_time = 4;
bool CCSUsrMsg_DesiredTimescale::has_start_blend_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CCSUsrMsg_DesiredTimescale::set_has_start_blend_time() {
  _has_bits_[0] |= 0x00000008u;
}
void CCSUsrMsg_DesiredTimescale::clear_has_start_blend_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void CCSUsrMsg_DesiredTimescale::clear_start_blend_time() {
  start_blend_time_ = 0;
  clear_has_start_blend_time();
}
float CCSUsrMsg_DesiredTimescale::start_blend_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DesiredTimescale.start_blend_time)
  return start_blend_time_;
}
void CCSUsrMsg_DesiredTimescale::set_start_blend_time(float value) {
  set_has_start_blend_time();
  start_blend_time_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DesiredTimescale.start_blend_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_CurrentTimescale::kCurTimescaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_CurrentTimescale::CCSUsrMsg_CurrentTimescale()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_CurrentTimescale)
}
CCSUsrMsg_CurrentTimescale::CCSUsrMsg_CurrentTimescale(const CCSUsrMsg_CurrentTimescale& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cur_timescale_ = from.cur_timescale_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_CurrentTimescale)
}

void CCSUsrMsg_CurrentTimescale::SharedCtor() {
  _cached_size_ = 0;
  cur_timescale_ = 0;
}

CCSUsrMsg_CurrentTimescale::~CCSUsrMsg_CurrentTimescale() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_CurrentTimescale)
  SharedDtor();
}

void CCSUsrMsg_CurrentTimescale::SharedDtor() {
}

void CCSUsrMsg_CurrentTimescale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_CurrentTimescale::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[31].descriptor;
}

const CCSUsrMsg_CurrentTimescale& CCSUsrMsg_CurrentTimescale::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_CurrentTimescale* CCSUsrMsg_CurrentTimescale::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_CurrentTimescale* n = new CCSUsrMsg_CurrentTimescale;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_CurrentTimescale::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_CurrentTimescale)
  cur_timescale_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_CurrentTimescale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_CurrentTimescale)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float cur_timescale = 1;
      case 1: {
        if (tag == 13u) {
          set_has_cur_timescale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cur_timescale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_CurrentTimescale)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_CurrentTimescale)
  return false;
#undef DO_
}

void CCSUsrMsg_CurrentTimescale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_CurrentTimescale)
  // optional float cur_timescale = 1;
  if (has_cur_timescale()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->cur_timescale(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_CurrentTimescale)
}

::google::protobuf::uint8* CCSUsrMsg_CurrentTimescale::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_CurrentTimescale)
  // optional float cur_timescale = 1;
  if (has_cur_timescale()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->cur_timescale(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_CurrentTimescale)
  return target;
}

size_t CCSUsrMsg_CurrentTimescale::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_CurrentTimescale)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional float cur_timescale = 1;
  if (has_cur_timescale()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_CurrentTimescale::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_CurrentTimescale)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_CurrentTimescale* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_CurrentTimescale>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_CurrentTimescale)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_CurrentTimescale)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_CurrentTimescale::MergeFrom(const CCSUsrMsg_CurrentTimescale& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_CurrentTimescale)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cur_timescale()) {
    set_cur_timescale(from.cur_timescale());
  }
}

void CCSUsrMsg_CurrentTimescale::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_CurrentTimescale)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_CurrentTimescale::CopyFrom(const CCSUsrMsg_CurrentTimescale& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_CurrentTimescale)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_CurrentTimescale::IsInitialized() const {
  return true;
}

void CCSUsrMsg_CurrentTimescale::Swap(CCSUsrMsg_CurrentTimescale* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_CurrentTimescale::InternalSwap(CCSUsrMsg_CurrentTimescale* other) {
  std::swap(cur_timescale_, other->cur_timescale_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_CurrentTimescale::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[31];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_CurrentTimescale

// optional float cur_timescale = 1;
bool CCSUsrMsg_CurrentTimescale::has_cur_timescale() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_CurrentTimescale::set_has_cur_timescale() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_CurrentTimescale::clear_has_cur_timescale() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_CurrentTimescale::clear_cur_timescale() {
  cur_timescale_ = 0;
  clear_has_cur_timescale();
}
float CCSUsrMsg_CurrentTimescale::cur_timescale() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CurrentTimescale.cur_timescale)
  return cur_timescale_;
}
void CCSUsrMsg_CurrentTimescale::set_cur_timescale(float value) {
  set_has_cur_timescale();
  cur_timescale_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CurrentTimescale.cur_timescale)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_AchievementEvent::kAchievementFieldNumber;
const int CCSUsrMsg_AchievementEvent::kCountFieldNumber;
const int CCSUsrMsg_AchievementEvent::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_AchievementEvent::CCSUsrMsg_AchievementEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_AchievementEvent)
}
CCSUsrMsg_AchievementEvent::CCSUsrMsg_AchievementEvent(const CCSUsrMsg_AchievementEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&achievement_, &from.achievement_,
    reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&achievement_) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_AchievementEvent)
}

void CCSUsrMsg_AchievementEvent::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&achievement_, 0, reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&achievement_) + sizeof(user_id_));
}

CCSUsrMsg_AchievementEvent::~CCSUsrMsg_AchievementEvent() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_AchievementEvent)
  SharedDtor();
}

void CCSUsrMsg_AchievementEvent::SharedDtor() {
}

void CCSUsrMsg_AchievementEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_AchievementEvent::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[32].descriptor;
}

const CCSUsrMsg_AchievementEvent& CCSUsrMsg_AchievementEvent::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_AchievementEvent* CCSUsrMsg_AchievementEvent::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_AchievementEvent* n = new CCSUsrMsg_AchievementEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_AchievementEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_AchievementEvent)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&achievement_, 0, reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&achievement_) + sizeof(user_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_AchievementEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_AchievementEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 achievement = 1;
      case 1: {
        if (tag == 8u) {
          set_has_achievement();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &achievement_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 count = 2;
      case 2: {
        if (tag == 16u) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 user_id = 3;
      case 3: {
        if (tag == 24u) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_AchievementEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_AchievementEvent)
  return false;
#undef DO_
}

void CCSUsrMsg_AchievementEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_AchievementEvent)
  // optional int32 achievement = 1;
  if (has_achievement()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->achievement(), output);
  }

  // optional int32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  // optional int32 user_id = 3;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->user_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_AchievementEvent)
}

::google::protobuf::uint8* CCSUsrMsg_AchievementEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_AchievementEvent)
  // optional int32 achievement = 1;
  if (has_achievement()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->achievement(), target);
  }

  // optional int32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  // optional int32 user_id = 3;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->user_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_AchievementEvent)
  return target;
}

size_t CCSUsrMsg_AchievementEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_AchievementEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 achievement = 1;
    if (has_achievement()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->achievement());
    }

    // optional int32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional int32 user_id = 3;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->user_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_AchievementEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_AchievementEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_AchievementEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_AchievementEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_AchievementEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_AchievementEvent)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_AchievementEvent::MergeFrom(const CCSUsrMsg_AchievementEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_AchievementEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_achievement()) {
      set_achievement(from.achievement());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
  }
}

void CCSUsrMsg_AchievementEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_AchievementEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_AchievementEvent::CopyFrom(const CCSUsrMsg_AchievementEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_AchievementEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_AchievementEvent::IsInitialized() const {
  return true;
}

void CCSUsrMsg_AchievementEvent::Swap(CCSUsrMsg_AchievementEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_AchievementEvent::InternalSwap(CCSUsrMsg_AchievementEvent* other) {
  std::swap(achievement_, other->achievement_);
  std::swap(count_, other->count_);
  std::swap(user_id_, other->user_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_AchievementEvent::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[32];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_AchievementEvent

// optional int32 achievement = 1;
bool CCSUsrMsg_AchievementEvent::has_achievement() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_AchievementEvent::set_has_achievement() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_AchievementEvent::clear_has_achievement() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_AchievementEvent::clear_achievement() {
  achievement_ = 0;
  clear_has_achievement();
}
::google::protobuf::int32 CCSUsrMsg_AchievementEvent::achievement() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_AchievementEvent.achievement)
  return achievement_;
}
void CCSUsrMsg_AchievementEvent::set_achievement(::google::protobuf::int32 value) {
  set_has_achievement();
  achievement_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_AchievementEvent.achievement)
}

// optional int32 count = 2;
bool CCSUsrMsg_AchievementEvent::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_AchievementEvent::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_AchievementEvent::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_AchievementEvent::clear_count() {
  count_ = 0;
  clear_has_count();
}
::google::protobuf::int32 CCSUsrMsg_AchievementEvent::count() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_AchievementEvent.count)
  return count_;
}
void CCSUsrMsg_AchievementEvent::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_AchievementEvent.count)
}

// optional int32 user_id = 3;
bool CCSUsrMsg_AchievementEvent::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_AchievementEvent::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_AchievementEvent::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_AchievementEvent::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
::google::protobuf::int32 CCSUsrMsg_AchievementEvent::user_id() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_AchievementEvent.user_id)
  return user_id_;
}
void CCSUsrMsg_AchievementEvent::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_AchievementEvent.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_MatchEndConditions::kFraglimitFieldNumber;
const int CCSUsrMsg_MatchEndConditions::kMpMaxroundsFieldNumber;
const int CCSUsrMsg_MatchEndConditions::kMpWinlimitFieldNumber;
const int CCSUsrMsg_MatchEndConditions::kMpTimelimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_MatchEndConditions::CCSUsrMsg_MatchEndConditions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_MatchEndConditions)
}
CCSUsrMsg_MatchEndConditions::CCSUsrMsg_MatchEndConditions(const CCSUsrMsg_MatchEndConditions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&fraglimit_, &from.fraglimit_,
    reinterpret_cast<char*>(&mp_timelimit_) -
    reinterpret_cast<char*>(&fraglimit_) + sizeof(mp_timelimit_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_MatchEndConditions)
}

void CCSUsrMsg_MatchEndConditions::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&fraglimit_, 0, reinterpret_cast<char*>(&mp_timelimit_) -
    reinterpret_cast<char*>(&fraglimit_) + sizeof(mp_timelimit_));
}

CCSUsrMsg_MatchEndConditions::~CCSUsrMsg_MatchEndConditions() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_MatchEndConditions)
  SharedDtor();
}

void CCSUsrMsg_MatchEndConditions::SharedDtor() {
}

void CCSUsrMsg_MatchEndConditions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_MatchEndConditions::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[33].descriptor;
}

const CCSUsrMsg_MatchEndConditions& CCSUsrMsg_MatchEndConditions::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_MatchEndConditions* CCSUsrMsg_MatchEndConditions::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_MatchEndConditions* n = new CCSUsrMsg_MatchEndConditions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_MatchEndConditions::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_MatchEndConditions)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&fraglimit_, 0, reinterpret_cast<char*>(&mp_timelimit_) -
      reinterpret_cast<char*>(&fraglimit_) + sizeof(mp_timelimit_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_MatchEndConditions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_MatchEndConditions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fraglimit = 1;
      case 1: {
        if (tag == 8u) {
          set_has_fraglimit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fraglimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mp_maxrounds = 2;
      case 2: {
        if (tag == 16u) {
          set_has_mp_maxrounds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mp_maxrounds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mp_winlimit = 3;
      case 3: {
        if (tag == 24u) {
          set_has_mp_winlimit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mp_winlimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mp_timelimit = 4;
      case 4: {
        if (tag == 32u) {
          set_has_mp_timelimit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mp_timelimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_MatchEndConditions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_MatchEndConditions)
  return false;
#undef DO_
}

void CCSUsrMsg_MatchEndConditions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_MatchEndConditions)
  // optional int32 fraglimit = 1;
  if (has_fraglimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fraglimit(), output);
  }

  // optional int32 mp_maxrounds = 2;
  if (has_mp_maxrounds()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mp_maxrounds(), output);
  }

  // optional int32 mp_winlimit = 3;
  if (has_mp_winlimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mp_winlimit(), output);
  }

  // optional int32 mp_timelimit = 4;
  if (has_mp_timelimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mp_timelimit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_MatchEndConditions)
}

::google::protobuf::uint8* CCSUsrMsg_MatchEndConditions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_MatchEndConditions)
  // optional int32 fraglimit = 1;
  if (has_fraglimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fraglimit(), target);
  }

  // optional int32 mp_maxrounds = 2;
  if (has_mp_maxrounds()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mp_maxrounds(), target);
  }

  // optional int32 mp_winlimit = 3;
  if (has_mp_winlimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mp_winlimit(), target);
  }

  // optional int32 mp_timelimit = 4;
  if (has_mp_timelimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mp_timelimit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_MatchEndConditions)
  return target;
}

size_t CCSUsrMsg_MatchEndConditions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_MatchEndConditions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 fraglimit = 1;
    if (has_fraglimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fraglimit());
    }

    // optional int32 mp_maxrounds = 2;
    if (has_mp_maxrounds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mp_maxrounds());
    }

    // optional int32 mp_winlimit = 3;
    if (has_mp_winlimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mp_winlimit());
    }

    // optional int32 mp_timelimit = 4;
    if (has_mp_timelimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mp_timelimit());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_MatchEndConditions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_MatchEndConditions)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_MatchEndConditions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_MatchEndConditions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_MatchEndConditions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_MatchEndConditions)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_MatchEndConditions::MergeFrom(const CCSUsrMsg_MatchEndConditions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_MatchEndConditions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_fraglimit()) {
      set_fraglimit(from.fraglimit());
    }
    if (from.has_mp_maxrounds()) {
      set_mp_maxrounds(from.mp_maxrounds());
    }
    if (from.has_mp_winlimit()) {
      set_mp_winlimit(from.mp_winlimit());
    }
    if (from.has_mp_timelimit()) {
      set_mp_timelimit(from.mp_timelimit());
    }
  }
}

void CCSUsrMsg_MatchEndConditions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_MatchEndConditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_MatchEndConditions::CopyFrom(const CCSUsrMsg_MatchEndConditions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_MatchEndConditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_MatchEndConditions::IsInitialized() const {
  return true;
}

void CCSUsrMsg_MatchEndConditions::Swap(CCSUsrMsg_MatchEndConditions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_MatchEndConditions::InternalSwap(CCSUsrMsg_MatchEndConditions* other) {
  std::swap(fraglimit_, other->fraglimit_);
  std::swap(mp_maxrounds_, other->mp_maxrounds_);
  std::swap(mp_winlimit_, other->mp_winlimit_);
  std::swap(mp_timelimit_, other->mp_timelimit_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_MatchEndConditions::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[33];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_MatchEndConditions

// optional int32 fraglimit = 1;
bool CCSUsrMsg_MatchEndConditions::has_fraglimit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_MatchEndConditions::set_has_fraglimit() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_MatchEndConditions::clear_has_fraglimit() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_MatchEndConditions::clear_fraglimit() {
  fraglimit_ = 0;
  clear_has_fraglimit();
}
::google::protobuf::int32 CCSUsrMsg_MatchEndConditions::fraglimit() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_MatchEndConditions.fraglimit)
  return fraglimit_;
}
void CCSUsrMsg_MatchEndConditions::set_fraglimit(::google::protobuf::int32 value) {
  set_has_fraglimit();
  fraglimit_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_MatchEndConditions.fraglimit)
}

// optional int32 mp_maxrounds = 2;
bool CCSUsrMsg_MatchEndConditions::has_mp_maxrounds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_MatchEndConditions::set_has_mp_maxrounds() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_MatchEndConditions::clear_has_mp_maxrounds() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_MatchEndConditions::clear_mp_maxrounds() {
  mp_maxrounds_ = 0;
  clear_has_mp_maxrounds();
}
::google::protobuf::int32 CCSUsrMsg_MatchEndConditions::mp_maxrounds() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_MatchEndConditions.mp_maxrounds)
  return mp_maxrounds_;
}
void CCSUsrMsg_MatchEndConditions::set_mp_maxrounds(::google::protobuf::int32 value) {
  set_has_mp_maxrounds();
  mp_maxrounds_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_MatchEndConditions.mp_maxrounds)
}

// optional int32 mp_winlimit = 3;
bool CCSUsrMsg_MatchEndConditions::has_mp_winlimit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_MatchEndConditions::set_has_mp_winlimit() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_MatchEndConditions::clear_has_mp_winlimit() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_MatchEndConditions::clear_mp_winlimit() {
  mp_winlimit_ = 0;
  clear_has_mp_winlimit();
}
::google::protobuf::int32 CCSUsrMsg_MatchEndConditions::mp_winlimit() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_MatchEndConditions.mp_winlimit)
  return mp_winlimit_;
}
void CCSUsrMsg_MatchEndConditions::set_mp_winlimit(::google::protobuf::int32 value) {
  set_has_mp_winlimit();
  mp_winlimit_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_MatchEndConditions.mp_winlimit)
}

// optional int32 mp_timelimit = 4;
bool CCSUsrMsg_MatchEndConditions::has_mp_timelimit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CCSUsrMsg_MatchEndConditions::set_has_mp_timelimit() {
  _has_bits_[0] |= 0x00000008u;
}
void CCSUsrMsg_MatchEndConditions::clear_has_mp_timelimit() {
  _has_bits_[0] &= ~0x00000008u;
}
void CCSUsrMsg_MatchEndConditions::clear_mp_timelimit() {
  mp_timelimit_ = 0;
  clear_has_mp_timelimit();
}
::google::protobuf::int32 CCSUsrMsg_MatchEndConditions::mp_timelimit() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_MatchEndConditions.mp_timelimit)
  return mp_timelimit_;
}
void CCSUsrMsg_MatchEndConditions::set_mp_timelimit(::google::protobuf::int32 value) {
  set_has_mp_timelimit();
  mp_timelimit_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_MatchEndConditions.mp_timelimit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_PlayerStatsUpdate_Stat::kIdxFieldNumber;
const int CCSUsrMsg_PlayerStatsUpdate_Stat::kDeltaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_PlayerStatsUpdate_Stat::CCSUsrMsg_PlayerStatsUpdate_Stat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_PlayerStatsUpdate.Stat)
}
CCSUsrMsg_PlayerStatsUpdate_Stat::CCSUsrMsg_PlayerStatsUpdate_Stat(const CCSUsrMsg_PlayerStatsUpdate_Stat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&idx_, &from.idx_,
    reinterpret_cast<char*>(&delta_) -
    reinterpret_cast<char*>(&idx_) + sizeof(delta_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_PlayerStatsUpdate.Stat)
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&idx_, 0, reinterpret_cast<char*>(&delta_) -
    reinterpret_cast<char*>(&idx_) + sizeof(delta_));
}

CCSUsrMsg_PlayerStatsUpdate_Stat::~CCSUsrMsg_PlayerStatsUpdate_Stat() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_PlayerStatsUpdate.Stat)
  SharedDtor();
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::SharedDtor() {
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_PlayerStatsUpdate_Stat::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[34].descriptor;
}

const CCSUsrMsg_PlayerStatsUpdate_Stat& CCSUsrMsg_PlayerStatsUpdate_Stat::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_PlayerStatsUpdate_Stat* CCSUsrMsg_PlayerStatsUpdate_Stat::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_PlayerStatsUpdate_Stat* n = new CCSUsrMsg_PlayerStatsUpdate_Stat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_PlayerStatsUpdate.Stat)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&idx_, 0, reinterpret_cast<char*>(&delta_) -
      reinterpret_cast<char*>(&idx_) + sizeof(delta_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_PlayerStatsUpdate_Stat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_PlayerStatsUpdate.Stat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 idx = 1;
      case 1: {
        if (tag == 8u) {
          set_has_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 delta = 2;
      case 2: {
        if (tag == 16u) {
          set_has_delta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_PlayerStatsUpdate.Stat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_PlayerStatsUpdate.Stat)
  return false;
#undef DO_
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_PlayerStatsUpdate.Stat)
  // optional int32 idx = 1;
  if (has_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->idx(), output);
  }

  // optional int32 delta = 2;
  if (has_delta()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delta(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_PlayerStatsUpdate.Stat)
}

::google::protobuf::uint8* CCSUsrMsg_PlayerStatsUpdate_Stat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_PlayerStatsUpdate.Stat)
  // optional int32 idx = 1;
  if (has_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->idx(), target);
  }

  // optional int32 delta = 2;
  if (has_delta()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delta(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_PlayerStatsUpdate.Stat)
  return target;
}

size_t CCSUsrMsg_PlayerStatsUpdate_Stat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_PlayerStatsUpdate.Stat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 idx = 1;
    if (has_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->idx());
    }

    // optional int32 delta = 2;
    if (has_delta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delta());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_PlayerStatsUpdate.Stat)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_PlayerStatsUpdate_Stat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_PlayerStatsUpdate_Stat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_PlayerStatsUpdate.Stat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_PlayerStatsUpdate.Stat)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::MergeFrom(const CCSUsrMsg_PlayerStatsUpdate_Stat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_PlayerStatsUpdate.Stat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_idx()) {
      set_idx(from.idx());
    }
    if (from.has_delta()) {
      set_delta(from.delta());
    }
  }
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_PlayerStatsUpdate.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::CopyFrom(const CCSUsrMsg_PlayerStatsUpdate_Stat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_PlayerStatsUpdate.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_PlayerStatsUpdate_Stat::IsInitialized() const {
  return true;
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::Swap(CCSUsrMsg_PlayerStatsUpdate_Stat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_PlayerStatsUpdate_Stat::InternalSwap(CCSUsrMsg_PlayerStatsUpdate_Stat* other) {
  std::swap(idx_, other->idx_);
  std::swap(delta_, other->delta_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_PlayerStatsUpdate_Stat::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[34];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_PlayerStatsUpdate_Stat

// optional int32 idx = 1;
bool CCSUsrMsg_PlayerStatsUpdate_Stat::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_PlayerStatsUpdate_Stat::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_PlayerStatsUpdate_Stat::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_PlayerStatsUpdate_Stat::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
::google::protobuf::int32 CCSUsrMsg_PlayerStatsUpdate_Stat::idx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_PlayerStatsUpdate.Stat.idx)
  return idx_;
}
void CCSUsrMsg_PlayerStatsUpdate_Stat::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_PlayerStatsUpdate.Stat.idx)
}

// optional int32 delta = 2;
bool CCSUsrMsg_PlayerStatsUpdate_Stat::has_delta() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_PlayerStatsUpdate_Stat::set_has_delta() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_PlayerStatsUpdate_Stat::clear_has_delta() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_PlayerStatsUpdate_Stat::clear_delta() {
  delta_ = 0;
  clear_has_delta();
}
::google::protobuf::int32 CCSUsrMsg_PlayerStatsUpdate_Stat::delta() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_PlayerStatsUpdate.Stat.delta)
  return delta_;
}
void CCSUsrMsg_PlayerStatsUpdate_Stat::set_delta(::google::protobuf::int32 value) {
  set_has_delta();
  delta_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_PlayerStatsUpdate.Stat.delta)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_PlayerStatsUpdate::kVersionFieldNumber;
const int CCSUsrMsg_PlayerStatsUpdate::kStatsFieldNumber;
const int CCSUsrMsg_PlayerStatsUpdate::kUserIdFieldNumber;
const int CCSUsrMsg_PlayerStatsUpdate::kCrcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_PlayerStatsUpdate::CCSUsrMsg_PlayerStatsUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_PlayerStatsUpdate)
}
CCSUsrMsg_PlayerStatsUpdate::CCSUsrMsg_PlayerStatsUpdate(const CCSUsrMsg_PlayerStatsUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stats_(from.stats_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    reinterpret_cast<char*>(&crc_) -
    reinterpret_cast<char*>(&version_) + sizeof(crc_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_PlayerStatsUpdate)
}

void CCSUsrMsg_PlayerStatsUpdate::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&version_, 0, reinterpret_cast<char*>(&crc_) -
    reinterpret_cast<char*>(&version_) + sizeof(crc_));
}

CCSUsrMsg_PlayerStatsUpdate::~CCSUsrMsg_PlayerStatsUpdate() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_PlayerStatsUpdate)
  SharedDtor();
}

void CCSUsrMsg_PlayerStatsUpdate::SharedDtor() {
}

void CCSUsrMsg_PlayerStatsUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_PlayerStatsUpdate::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[35].descriptor;
}

const CCSUsrMsg_PlayerStatsUpdate& CCSUsrMsg_PlayerStatsUpdate::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_PlayerStatsUpdate* CCSUsrMsg_PlayerStatsUpdate::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_PlayerStatsUpdate* n = new CCSUsrMsg_PlayerStatsUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_PlayerStatsUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_PlayerStatsUpdate)
  stats_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&version_, 0, reinterpret_cast<char*>(&crc_) -
      reinterpret_cast<char*>(&version_) + sizeof(crc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_PlayerStatsUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_PlayerStatsUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 version = 1;
      case 1: {
        if (tag == 8u) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CCSUsrMsg_PlayerStatsUpdate.Stat stats = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_stats()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional int32 user_id = 5;
      case 5: {
        if (tag == 40u) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 crc = 6;
      case 6: {
        if (tag == 48u) {
          set_has_crc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_PlayerStatsUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_PlayerStatsUpdate)
  return false;
#undef DO_
}

void CCSUsrMsg_PlayerStatsUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_PlayerStatsUpdate)
  // optional int32 version = 1;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // repeated .CCSUsrMsg_PlayerStatsUpdate.Stat stats = 4;
  for (unsigned int i = 0, n = this->stats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->stats(i), output);
  }

  // optional int32 user_id = 5;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->user_id(), output);
  }

  // optional int32 crc = 6;
  if (has_crc()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->crc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_PlayerStatsUpdate)
}

::google::protobuf::uint8* CCSUsrMsg_PlayerStatsUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_PlayerStatsUpdate)
  // optional int32 version = 1;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // repeated .CCSUsrMsg_PlayerStatsUpdate.Stat stats = 4;
  for (unsigned int i = 0, n = this->stats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->stats(i), false, target);
  }

  // optional int32 user_id = 5;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->user_id(), target);
  }

  // optional int32 crc = 6;
  if (has_crc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->crc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_PlayerStatsUpdate)
  return target;
}

size_t CCSUsrMsg_PlayerStatsUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_PlayerStatsUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .CCSUsrMsg_PlayerStatsUpdate.Stat stats = 4;
  {
    unsigned int count = this->stats_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stats(i));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }

    // optional int32 user_id = 5;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->user_id());
    }

    // optional int32 crc = 6;
    if (has_crc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->crc());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_PlayerStatsUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_PlayerStatsUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_PlayerStatsUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_PlayerStatsUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_PlayerStatsUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_PlayerStatsUpdate)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_PlayerStatsUpdate::MergeFrom(const CCSUsrMsg_PlayerStatsUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_PlayerStatsUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stats_.MergeFrom(from.stats_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_crc()) {
      set_crc(from.crc());
    }
  }
}

void CCSUsrMsg_PlayerStatsUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_PlayerStatsUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_PlayerStatsUpdate::CopyFrom(const CCSUsrMsg_PlayerStatsUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_PlayerStatsUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_PlayerStatsUpdate::IsInitialized() const {
  return true;
}

void CCSUsrMsg_PlayerStatsUpdate::Swap(CCSUsrMsg_PlayerStatsUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_PlayerStatsUpdate::InternalSwap(CCSUsrMsg_PlayerStatsUpdate* other) {
  stats_.UnsafeArenaSwap(&other->stats_);
  std::swap(version_, other->version_);
  std::swap(user_id_, other->user_id_);
  std::swap(crc_, other->crc_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_PlayerStatsUpdate::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[35];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_PlayerStatsUpdate

// optional int32 version = 1;
bool CCSUsrMsg_PlayerStatsUpdate::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_PlayerStatsUpdate::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_PlayerStatsUpdate::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_PlayerStatsUpdate::clear_version() {
  version_ = 0;
  clear_has_version();
}
::google::protobuf::int32 CCSUsrMsg_PlayerStatsUpdate::version() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_PlayerStatsUpdate.version)
  return version_;
}
void CCSUsrMsg_PlayerStatsUpdate::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_PlayerStatsUpdate.version)
}

// repeated .CCSUsrMsg_PlayerStatsUpdate.Stat stats = 4;
int CCSUsrMsg_PlayerStatsUpdate::stats_size() const {
  return stats_.size();
}
void CCSUsrMsg_PlayerStatsUpdate::clear_stats() {
  stats_.Clear();
}
const ::CCSUsrMsg_PlayerStatsUpdate_Stat& CCSUsrMsg_PlayerStatsUpdate::stats(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_PlayerStatsUpdate.stats)
  return stats_.Get(index);
}
::CCSUsrMsg_PlayerStatsUpdate_Stat* CCSUsrMsg_PlayerStatsUpdate::mutable_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_PlayerStatsUpdate.stats)
  return stats_.Mutable(index);
}
::CCSUsrMsg_PlayerStatsUpdate_Stat* CCSUsrMsg_PlayerStatsUpdate::add_stats() {
  // @@protoc_insertion_point(field_add:CCSUsrMsg_PlayerStatsUpdate.stats)
  return stats_.Add();
}
::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_PlayerStatsUpdate_Stat >*
CCSUsrMsg_PlayerStatsUpdate::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_PlayerStatsUpdate.stats)
  return &stats_;
}
const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_PlayerStatsUpdate_Stat >&
CCSUsrMsg_PlayerStatsUpdate::stats() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_PlayerStatsUpdate.stats)
  return stats_;
}

// optional int32 user_id = 5;
bool CCSUsrMsg_PlayerStatsUpdate::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_PlayerStatsUpdate::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_PlayerStatsUpdate::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_PlayerStatsUpdate::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
::google::protobuf::int32 CCSUsrMsg_PlayerStatsUpdate::user_id() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_PlayerStatsUpdate.user_id)
  return user_id_;
}
void CCSUsrMsg_PlayerStatsUpdate::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_PlayerStatsUpdate.user_id)
}

// optional int32 crc = 6;
bool CCSUsrMsg_PlayerStatsUpdate::has_crc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_PlayerStatsUpdate::set_has_crc() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_PlayerStatsUpdate::clear_has_crc() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_PlayerStatsUpdate::clear_crc() {
  crc_ = 0;
  clear_has_crc();
}
::google::protobuf::int32 CCSUsrMsg_PlayerStatsUpdate::crc() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_PlayerStatsUpdate.crc)
  return crc_;
}
void CCSUsrMsg_PlayerStatsUpdate::set_crc(::google::protobuf::int32 value) {
  set_has_crc();
  crc_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_PlayerStatsUpdate.crc)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_DisplayInventory::kDisplayFieldNumber;
const int CCSUsrMsg_DisplayInventory::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_DisplayInventory::CCSUsrMsg_DisplayInventory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_DisplayInventory)
}
CCSUsrMsg_DisplayInventory::CCSUsrMsg_DisplayInventory(const CCSUsrMsg_DisplayInventory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&display_, &from.display_,
    reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&display_) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_DisplayInventory)
}

void CCSUsrMsg_DisplayInventory::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&display_, 0, reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&display_) + sizeof(user_id_));
}

CCSUsrMsg_DisplayInventory::~CCSUsrMsg_DisplayInventory() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_DisplayInventory)
  SharedDtor();
}

void CCSUsrMsg_DisplayInventory::SharedDtor() {
}

void CCSUsrMsg_DisplayInventory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_DisplayInventory::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[36].descriptor;
}

const CCSUsrMsg_DisplayInventory& CCSUsrMsg_DisplayInventory::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_DisplayInventory* CCSUsrMsg_DisplayInventory::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_DisplayInventory* n = new CCSUsrMsg_DisplayInventory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_DisplayInventory::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_DisplayInventory)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&display_, 0, reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&display_) + sizeof(user_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_DisplayInventory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_DisplayInventory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool display = 1;
      case 1: {
        if (tag == 8u) {
          set_has_display();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &display_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 user_id = 2;
      case 2: {
        if (tag == 16u) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_DisplayInventory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_DisplayInventory)
  return false;
#undef DO_
}

void CCSUsrMsg_DisplayInventory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_DisplayInventory)
  // optional bool display = 1;
  if (has_display()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->display(), output);
  }

  // optional int32 user_id = 2;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->user_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_DisplayInventory)
}

::google::protobuf::uint8* CCSUsrMsg_DisplayInventory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_DisplayInventory)
  // optional bool display = 1;
  if (has_display()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->display(), target);
  }

  // optional int32 user_id = 2;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->user_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_DisplayInventory)
  return target;
}

size_t CCSUsrMsg_DisplayInventory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_DisplayInventory)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bool display = 1;
    if (has_display()) {
      total_size += 1 + 1;
    }

    // optional int32 user_id = 2;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->user_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_DisplayInventory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_DisplayInventory)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_DisplayInventory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_DisplayInventory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_DisplayInventory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_DisplayInventory)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_DisplayInventory::MergeFrom(const CCSUsrMsg_DisplayInventory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_DisplayInventory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_display()) {
      set_display(from.display());
    }
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
  }
}

void CCSUsrMsg_DisplayInventory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_DisplayInventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_DisplayInventory::CopyFrom(const CCSUsrMsg_DisplayInventory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_DisplayInventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_DisplayInventory::IsInitialized() const {
  return true;
}

void CCSUsrMsg_DisplayInventory::Swap(CCSUsrMsg_DisplayInventory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_DisplayInventory::InternalSwap(CCSUsrMsg_DisplayInventory* other) {
  std::swap(display_, other->display_);
  std::swap(user_id_, other->user_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_DisplayInventory::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[36];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_DisplayInventory

// optional bool display = 1;
bool CCSUsrMsg_DisplayInventory::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_DisplayInventory::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_DisplayInventory::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_DisplayInventory::clear_display() {
  display_ = false;
  clear_has_display();
}
bool CCSUsrMsg_DisplayInventory::display() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DisplayInventory.display)
  return display_;
}
void CCSUsrMsg_DisplayInventory::set_display(bool value) {
  set_has_display();
  display_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DisplayInventory.display)
}

// optional int32 user_id = 2;
bool CCSUsrMsg_DisplayInventory::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_DisplayInventory::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_DisplayInventory::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_DisplayInventory::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
::google::protobuf::int32 CCSUsrMsg_DisplayInventory::user_id() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DisplayInventory.user_id)
  return user_id_;
}
void CCSUsrMsg_DisplayInventory::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DisplayInventory.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_QuestProgress::kQuestIdFieldNumber;
const int CCSUsrMsg_QuestProgress::kNormalPointsFieldNumber;
const int CCSUsrMsg_QuestProgress::kBonusPointsFieldNumber;
const int CCSUsrMsg_QuestProgress::kIsEventQuestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_QuestProgress::CCSUsrMsg_QuestProgress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_QuestProgress)
}
CCSUsrMsg_QuestProgress::CCSUsrMsg_QuestProgress(const CCSUsrMsg_QuestProgress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&quest_id_, &from.quest_id_,
    reinterpret_cast<char*>(&is_event_quest_) -
    reinterpret_cast<char*>(&quest_id_) + sizeof(is_event_quest_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_QuestProgress)
}

void CCSUsrMsg_QuestProgress::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&quest_id_, 0, reinterpret_cast<char*>(&is_event_quest_) -
    reinterpret_cast<char*>(&quest_id_) + sizeof(is_event_quest_));
}

CCSUsrMsg_QuestProgress::~CCSUsrMsg_QuestProgress() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_QuestProgress)
  SharedDtor();
}

void CCSUsrMsg_QuestProgress::SharedDtor() {
}

void CCSUsrMsg_QuestProgress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_QuestProgress::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[37].descriptor;
}

const CCSUsrMsg_QuestProgress& CCSUsrMsg_QuestProgress::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_QuestProgress* CCSUsrMsg_QuestProgress::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_QuestProgress* n = new CCSUsrMsg_QuestProgress;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_QuestProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_QuestProgress)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&quest_id_, 0, reinterpret_cast<char*>(&is_event_quest_) -
      reinterpret_cast<char*>(&quest_id_) + sizeof(is_event_quest_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_QuestProgress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_QuestProgress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 quest_id = 1;
      case 1: {
        if (tag == 8u) {
          set_has_quest_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 normal_points = 2;
      case 2: {
        if (tag == 16u) {
          set_has_normal_points();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &normal_points_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 bonus_points = 3;
      case 3: {
        if (tag == 24u) {
          set_has_bonus_points();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bonus_points_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_event_quest = 4;
      case 4: {
        if (tag == 32u) {
          set_has_is_event_quest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_event_quest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_QuestProgress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_QuestProgress)
  return false;
#undef DO_
}

void CCSUsrMsg_QuestProgress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_QuestProgress)
  // optional uint32 quest_id = 1;
  if (has_quest_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->quest_id(), output);
  }

  // optional uint32 normal_points = 2;
  if (has_normal_points()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->normal_points(), output);
  }

  // optional uint32 bonus_points = 3;
  if (has_bonus_points()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->bonus_points(), output);
  }

  // optional bool is_event_quest = 4;
  if (has_is_event_quest()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_event_quest(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_QuestProgress)
}

::google::protobuf::uint8* CCSUsrMsg_QuestProgress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_QuestProgress)
  // optional uint32 quest_id = 1;
  if (has_quest_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->quest_id(), target);
  }

  // optional uint32 normal_points = 2;
  if (has_normal_points()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->normal_points(), target);
  }

  // optional uint32 bonus_points = 3;
  if (has_bonus_points()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->bonus_points(), target);
  }

  // optional bool is_event_quest = 4;
  if (has_is_event_quest()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_event_quest(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_QuestProgress)
  return target;
}

size_t CCSUsrMsg_QuestProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_QuestProgress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 quest_id = 1;
    if (has_quest_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quest_id());
    }

    // optional uint32 normal_points = 2;
    if (has_normal_points()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->normal_points());
    }

    // optional uint32 bonus_points = 3;
    if (has_bonus_points()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bonus_points());
    }

    // optional bool is_event_quest = 4;
    if (has_is_event_quest()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_QuestProgress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_QuestProgress)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_QuestProgress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_QuestProgress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_QuestProgress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_QuestProgress)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_QuestProgress::MergeFrom(const CCSUsrMsg_QuestProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_QuestProgress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_quest_id()) {
      set_quest_id(from.quest_id());
    }
    if (from.has_normal_points()) {
      set_normal_points(from.normal_points());
    }
    if (from.has_bonus_points()) {
      set_bonus_points(from.bonus_points());
    }
    if (from.has_is_event_quest()) {
      set_is_event_quest(from.is_event_quest());
    }
  }
}

void CCSUsrMsg_QuestProgress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_QuestProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_QuestProgress::CopyFrom(const CCSUsrMsg_QuestProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_QuestProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_QuestProgress::IsInitialized() const {
  return true;
}

void CCSUsrMsg_QuestProgress::Swap(CCSUsrMsg_QuestProgress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_QuestProgress::InternalSwap(CCSUsrMsg_QuestProgress* other) {
  std::swap(quest_id_, other->quest_id_);
  std::swap(normal_points_, other->normal_points_);
  std::swap(bonus_points_, other->bonus_points_);
  std::swap(is_event_quest_, other->is_event_quest_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_QuestProgress::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[37];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_QuestProgress

// optional uint32 quest_id = 1;
bool CCSUsrMsg_QuestProgress::has_quest_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_QuestProgress::set_has_quest_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_QuestProgress::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_QuestProgress::clear_quest_id() {
  quest_id_ = 0u;
  clear_has_quest_id();
}
::google::protobuf::uint32 CCSUsrMsg_QuestProgress::quest_id() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_QuestProgress.quest_id)
  return quest_id_;
}
void CCSUsrMsg_QuestProgress::set_quest_id(::google::protobuf::uint32 value) {
  set_has_quest_id();
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_QuestProgress.quest_id)
}

// optional uint32 normal_points = 2;
bool CCSUsrMsg_QuestProgress::has_normal_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_QuestProgress::set_has_normal_points() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_QuestProgress::clear_has_normal_points() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_QuestProgress::clear_normal_points() {
  normal_points_ = 0u;
  clear_has_normal_points();
}
::google::protobuf::uint32 CCSUsrMsg_QuestProgress::normal_points() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_QuestProgress.normal_points)
  return normal_points_;
}
void CCSUsrMsg_QuestProgress::set_normal_points(::google::protobuf::uint32 value) {
  set_has_normal_points();
  normal_points_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_QuestProgress.normal_points)
}

// optional uint32 bonus_points = 3;
bool CCSUsrMsg_QuestProgress::has_bonus_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_QuestProgress::set_has_bonus_points() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_QuestProgress::clear_has_bonus_points() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_QuestProgress::clear_bonus_points() {
  bonus_points_ = 0u;
  clear_has_bonus_points();
}
::google::protobuf::uint32 CCSUsrMsg_QuestProgress::bonus_points() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_QuestProgress.bonus_points)
  return bonus_points_;
}
void CCSUsrMsg_QuestProgress::set_bonus_points(::google::protobuf::uint32 value) {
  set_has_bonus_points();
  bonus_points_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_QuestProgress.bonus_points)
}

// optional bool is_event_quest = 4;
bool CCSUsrMsg_QuestProgress::has_is_event_quest() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CCSUsrMsg_QuestProgress::set_has_is_event_quest() {
  _has_bits_[0] |= 0x00000008u;
}
void CCSUsrMsg_QuestProgress::clear_has_is_event_quest() {
  _has_bits_[0] &= ~0x00000008u;
}
void CCSUsrMsg_QuestProgress::clear_is_event_quest() {
  is_event_quest_ = false;
  clear_has_is_event_quest();
}
bool CCSUsrMsg_QuestProgress::is_event_quest() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_QuestProgress.is_event_quest)
  return is_event_quest_;
}
void CCSUsrMsg_QuestProgress::set_is_event_quest(bool value) {
  set_has_is_event_quest();
  is_event_quest_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_QuestProgress.is_event_quest)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ScoreLeaderboardData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ScoreLeaderboardData::CCSUsrMsg_ScoreLeaderboardData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ScoreLeaderboardData)
}
CCSUsrMsg_ScoreLeaderboardData::CCSUsrMsg_ScoreLeaderboardData(const CCSUsrMsg_ScoreLeaderboardData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::ScoreLeaderboardData(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ScoreLeaderboardData)
}

void CCSUsrMsg_ScoreLeaderboardData::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
}

CCSUsrMsg_ScoreLeaderboardData::~CCSUsrMsg_ScoreLeaderboardData() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ScoreLeaderboardData)
  SharedDtor();
}

void CCSUsrMsg_ScoreLeaderboardData::SharedDtor() {
  if (this != internal_default_instance()) {
    delete data_;
  }
}

void CCSUsrMsg_ScoreLeaderboardData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ScoreLeaderboardData::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[38].descriptor;
}

const CCSUsrMsg_ScoreLeaderboardData& CCSUsrMsg_ScoreLeaderboardData::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_ScoreLeaderboardData* CCSUsrMsg_ScoreLeaderboardData::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ScoreLeaderboardData* n = new CCSUsrMsg_ScoreLeaderboardData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ScoreLeaderboardData::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ScoreLeaderboardData)
  if (has_data()) {
    GOOGLE_DCHECK(data_ != NULL);
    data_->::ScoreLeaderboardData::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ScoreLeaderboardData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ScoreLeaderboardData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ScoreLeaderboardData data = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ScoreLeaderboardData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ScoreLeaderboardData)
  return false;
#undef DO_
}

void CCSUsrMsg_ScoreLeaderboardData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ScoreLeaderboardData)
  // optional .ScoreLeaderboardData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ScoreLeaderboardData)
}

::google::protobuf::uint8* CCSUsrMsg_ScoreLeaderboardData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ScoreLeaderboardData)
  // optional .ScoreLeaderboardData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->data_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ScoreLeaderboardData)
  return target;
}

size_t CCSUsrMsg_ScoreLeaderboardData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ScoreLeaderboardData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .ScoreLeaderboardData data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ScoreLeaderboardData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ScoreLeaderboardData)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ScoreLeaderboardData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ScoreLeaderboardData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ScoreLeaderboardData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ScoreLeaderboardData)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ScoreLeaderboardData::MergeFrom(const CCSUsrMsg_ScoreLeaderboardData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ScoreLeaderboardData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    mutable_data()->::ScoreLeaderboardData::MergeFrom(from.data());
  }
}

void CCSUsrMsg_ScoreLeaderboardData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ScoreLeaderboardData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ScoreLeaderboardData::CopyFrom(const CCSUsrMsg_ScoreLeaderboardData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ScoreLeaderboardData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ScoreLeaderboardData::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ScoreLeaderboardData::Swap(CCSUsrMsg_ScoreLeaderboardData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ScoreLeaderboardData::InternalSwap(CCSUsrMsg_ScoreLeaderboardData* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ScoreLeaderboardData::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[38];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_ScoreLeaderboardData

// optional .ScoreLeaderboardData data = 1;
bool CCSUsrMsg_ScoreLeaderboardData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_ScoreLeaderboardData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_ScoreLeaderboardData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_ScoreLeaderboardData::clear_data() {
  if (data_ != NULL) data_->::ScoreLeaderboardData::Clear();
  clear_has_data();
}
const ::ScoreLeaderboardData& CCSUsrMsg_ScoreLeaderboardData::data() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ScoreLeaderboardData.data)
  return data_ != NULL ? *data_
                         : *::ScoreLeaderboardData::internal_default_instance();
}
::ScoreLeaderboardData* CCSUsrMsg_ScoreLeaderboardData::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::ScoreLeaderboardData;
  }
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_ScoreLeaderboardData.data)
  return data_;
}
::ScoreLeaderboardData* CCSUsrMsg_ScoreLeaderboardData::release_data() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_ScoreLeaderboardData.data)
  clear_has_data();
  ::ScoreLeaderboardData* temp = data_;
  data_ = NULL;
  return temp;
}
void CCSUsrMsg_ScoreLeaderboardData::set_allocated_data(::ScoreLeaderboardData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_ScoreLeaderboardData.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_PlayerDecalDigitalSignature::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_PlayerDecalDigitalSignature::CCSUsrMsg_PlayerDecalDigitalSignature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_PlayerDecalDigitalSignature)
}
CCSUsrMsg_PlayerDecalDigitalSignature::CCSUsrMsg_PlayerDecalDigitalSignature(const CCSUsrMsg_PlayerDecalDigitalSignature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::PlayerDecalDigitalSignature(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_PlayerDecalDigitalSignature)
}

void CCSUsrMsg_PlayerDecalDigitalSignature::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
}

CCSUsrMsg_PlayerDecalDigitalSignature::~CCSUsrMsg_PlayerDecalDigitalSignature() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_PlayerDecalDigitalSignature)
  SharedDtor();
}

void CCSUsrMsg_PlayerDecalDigitalSignature::SharedDtor() {
  if (this != internal_default_instance()) {
    delete data_;
  }
}

void CCSUsrMsg_PlayerDecalDigitalSignature::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_PlayerDecalDigitalSignature::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[39].descriptor;
}

const CCSUsrMsg_PlayerDecalDigitalSignature& CCSUsrMsg_PlayerDecalDigitalSignature::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_PlayerDecalDigitalSignature* CCSUsrMsg_PlayerDecalDigitalSignature::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_PlayerDecalDigitalSignature* n = new CCSUsrMsg_PlayerDecalDigitalSignature;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_PlayerDecalDigitalSignature::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_PlayerDecalDigitalSignature)
  if (has_data()) {
    GOOGLE_DCHECK(data_ != NULL);
    data_->::PlayerDecalDigitalSignature::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_PlayerDecalDigitalSignature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_PlayerDecalDigitalSignature)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PlayerDecalDigitalSignature data = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_PlayerDecalDigitalSignature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_PlayerDecalDigitalSignature)
  return false;
#undef DO_
}

void CCSUsrMsg_PlayerDecalDigitalSignature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_PlayerDecalDigitalSignature)
  // optional .PlayerDecalDigitalSignature data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_PlayerDecalDigitalSignature)
}

::google::protobuf::uint8* CCSUsrMsg_PlayerDecalDigitalSignature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_PlayerDecalDigitalSignature)
  // optional .PlayerDecalDigitalSignature data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->data_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_PlayerDecalDigitalSignature)
  return target;
}

size_t CCSUsrMsg_PlayerDecalDigitalSignature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_PlayerDecalDigitalSignature)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .PlayerDecalDigitalSignature data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_PlayerDecalDigitalSignature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_PlayerDecalDigitalSignature)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_PlayerDecalDigitalSignature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_PlayerDecalDigitalSignature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_PlayerDecalDigitalSignature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_PlayerDecalDigitalSignature)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_PlayerDecalDigitalSignature::MergeFrom(const CCSUsrMsg_PlayerDecalDigitalSignature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_PlayerDecalDigitalSignature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    mutable_data()->::PlayerDecalDigitalSignature::MergeFrom(from.data());
  }
}

void CCSUsrMsg_PlayerDecalDigitalSignature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_PlayerDecalDigitalSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_PlayerDecalDigitalSignature::CopyFrom(const CCSUsrMsg_PlayerDecalDigitalSignature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_PlayerDecalDigitalSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_PlayerDecalDigitalSignature::IsInitialized() const {
  return true;
}

void CCSUsrMsg_PlayerDecalDigitalSignature::Swap(CCSUsrMsg_PlayerDecalDigitalSignature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_PlayerDecalDigitalSignature::InternalSwap(CCSUsrMsg_PlayerDecalDigitalSignature* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_PlayerDecalDigitalSignature::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[39];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_PlayerDecalDigitalSignature

// optional .PlayerDecalDigitalSignature data = 1;
bool CCSUsrMsg_PlayerDecalDigitalSignature::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_PlayerDecalDigitalSignature::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_PlayerDecalDigitalSignature::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_PlayerDecalDigitalSignature::clear_data() {
  if (data_ != NULL) data_->::PlayerDecalDigitalSignature::Clear();
  clear_has_data();
}
const ::PlayerDecalDigitalSignature& CCSUsrMsg_PlayerDecalDigitalSignature::data() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_PlayerDecalDigitalSignature.data)
  return data_ != NULL ? *data_
                         : *::PlayerDecalDigitalSignature::internal_default_instance();
}
::PlayerDecalDigitalSignature* CCSUsrMsg_PlayerDecalDigitalSignature::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::PlayerDecalDigitalSignature;
  }
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_PlayerDecalDigitalSignature.data)
  return data_;
}
::PlayerDecalDigitalSignature* CCSUsrMsg_PlayerDecalDigitalSignature::release_data() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_PlayerDecalDigitalSignature.data)
  clear_has_data();
  ::PlayerDecalDigitalSignature* temp = data_;
  data_ = NULL;
  return temp;
}
void CCSUsrMsg_PlayerDecalDigitalSignature::set_allocated_data(::PlayerDecalDigitalSignature* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_PlayerDecalDigitalSignature.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_XRankGet::kModeIdxFieldNumber;
const int CCSUsrMsg_XRankGet::kControllerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_XRankGet::CCSUsrMsg_XRankGet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_XRankGet)
}
CCSUsrMsg_XRankGet::CCSUsrMsg_XRankGet(const CCSUsrMsg_XRankGet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mode_idx_, &from.mode_idx_,
    reinterpret_cast<char*>(&controller_) -
    reinterpret_cast<char*>(&mode_idx_) + sizeof(controller_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_XRankGet)
}

void CCSUsrMsg_XRankGet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&mode_idx_, 0, reinterpret_cast<char*>(&controller_) -
    reinterpret_cast<char*>(&mode_idx_) + sizeof(controller_));
}

CCSUsrMsg_XRankGet::~CCSUsrMsg_XRankGet() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_XRankGet)
  SharedDtor();
}

void CCSUsrMsg_XRankGet::SharedDtor() {
}

void CCSUsrMsg_XRankGet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_XRankGet::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[40].descriptor;
}

const CCSUsrMsg_XRankGet& CCSUsrMsg_XRankGet::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_XRankGet* CCSUsrMsg_XRankGet::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_XRankGet* n = new CCSUsrMsg_XRankGet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_XRankGet::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_XRankGet)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&mode_idx_, 0, reinterpret_cast<char*>(&controller_) -
      reinterpret_cast<char*>(&mode_idx_) + sizeof(controller_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_XRankGet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_XRankGet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mode_idx = 1;
      case 1: {
        if (tag == 8u) {
          set_has_mode_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 controller = 2;
      case 2: {
        if (tag == 16u) {
          set_has_controller();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &controller_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_XRankGet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_XRankGet)
  return false;
#undef DO_
}

void CCSUsrMsg_XRankGet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_XRankGet)
  // optional int32 mode_idx = 1;
  if (has_mode_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mode_idx(), output);
  }

  // optional int32 controller = 2;
  if (has_controller()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->controller(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_XRankGet)
}

::google::protobuf::uint8* CCSUsrMsg_XRankGet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_XRankGet)
  // optional int32 mode_idx = 1;
  if (has_mode_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mode_idx(), target);
  }

  // optional int32 controller = 2;
  if (has_controller()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->controller(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_XRankGet)
  return target;
}

size_t CCSUsrMsg_XRankGet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_XRankGet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 mode_idx = 1;
    if (has_mode_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mode_idx());
    }

    // optional int32 controller = 2;
    if (has_controller()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->controller());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_XRankGet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_XRankGet)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_XRankGet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_XRankGet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_XRankGet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_XRankGet)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_XRankGet::MergeFrom(const CCSUsrMsg_XRankGet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_XRankGet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_mode_idx()) {
      set_mode_idx(from.mode_idx());
    }
    if (from.has_controller()) {
      set_controller(from.controller());
    }
  }
}

void CCSUsrMsg_XRankGet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_XRankGet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_XRankGet::CopyFrom(const CCSUsrMsg_XRankGet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_XRankGet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_XRankGet::IsInitialized() const {
  return true;
}

void CCSUsrMsg_XRankGet::Swap(CCSUsrMsg_XRankGet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_XRankGet::InternalSwap(CCSUsrMsg_XRankGet* other) {
  std::swap(mode_idx_, other->mode_idx_);
  std::swap(controller_, other->controller_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_XRankGet::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[40];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_XRankGet

// optional int32 mode_idx = 1;
bool CCSUsrMsg_XRankGet::has_mode_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_XRankGet::set_has_mode_idx() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_XRankGet::clear_has_mode_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_XRankGet::clear_mode_idx() {
  mode_idx_ = 0;
  clear_has_mode_idx();
}
::google::protobuf::int32 CCSUsrMsg_XRankGet::mode_idx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_XRankGet.mode_idx)
  return mode_idx_;
}
void CCSUsrMsg_XRankGet::set_mode_idx(::google::protobuf::int32 value) {
  set_has_mode_idx();
  mode_idx_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_XRankGet.mode_idx)
}

// optional int32 controller = 2;
bool CCSUsrMsg_XRankGet::has_controller() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_XRankGet::set_has_controller() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_XRankGet::clear_has_controller() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_XRankGet::clear_controller() {
  controller_ = 0;
  clear_has_controller();
}
::google::protobuf::int32 CCSUsrMsg_XRankGet::controller() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_XRankGet.controller)
  return controller_;
}
void CCSUsrMsg_XRankGet::set_controller(::google::protobuf::int32 value) {
  set_has_controller();
  controller_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_XRankGet.controller)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_XRankUpd::kModeIdxFieldNumber;
const int CCSUsrMsg_XRankUpd::kControllerFieldNumber;
const int CCSUsrMsg_XRankUpd::kRankingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_XRankUpd::CCSUsrMsg_XRankUpd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_XRankUpd)
}
CCSUsrMsg_XRankUpd::CCSUsrMsg_XRankUpd(const CCSUsrMsg_XRankUpd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mode_idx_, &from.mode_idx_,
    reinterpret_cast<char*>(&ranking_) -
    reinterpret_cast<char*>(&mode_idx_) + sizeof(ranking_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_XRankUpd)
}

void CCSUsrMsg_XRankUpd::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&mode_idx_, 0, reinterpret_cast<char*>(&ranking_) -
    reinterpret_cast<char*>(&mode_idx_) + sizeof(ranking_));
}

CCSUsrMsg_XRankUpd::~CCSUsrMsg_XRankUpd() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_XRankUpd)
  SharedDtor();
}

void CCSUsrMsg_XRankUpd::SharedDtor() {
}

void CCSUsrMsg_XRankUpd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_XRankUpd::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[41].descriptor;
}

const CCSUsrMsg_XRankUpd& CCSUsrMsg_XRankUpd::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_XRankUpd* CCSUsrMsg_XRankUpd::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_XRankUpd* n = new CCSUsrMsg_XRankUpd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_XRankUpd::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_XRankUpd)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&mode_idx_, 0, reinterpret_cast<char*>(&ranking_) -
      reinterpret_cast<char*>(&mode_idx_) + sizeof(ranking_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_XRankUpd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_XRankUpd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mode_idx = 1;
      case 1: {
        if (tag == 8u) {
          set_has_mode_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 controller = 2;
      case 2: {
        if (tag == 16u) {
          set_has_controller();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &controller_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ranking = 3;
      case 3: {
        if (tag == 24u) {
          set_has_ranking();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ranking_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_XRankUpd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_XRankUpd)
  return false;
#undef DO_
}

void CCSUsrMsg_XRankUpd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_XRankUpd)
  // optional int32 mode_idx = 1;
  if (has_mode_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mode_idx(), output);
  }

  // optional int32 controller = 2;
  if (has_controller()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->controller(), output);
  }

  // optional int32 ranking = 3;
  if (has_ranking()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ranking(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_XRankUpd)
}

::google::protobuf::uint8* CCSUsrMsg_XRankUpd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_XRankUpd)
  // optional int32 mode_idx = 1;
  if (has_mode_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mode_idx(), target);
  }

  // optional int32 controller = 2;
  if (has_controller()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->controller(), target);
  }

  // optional int32 ranking = 3;
  if (has_ranking()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ranking(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_XRankUpd)
  return target;
}

size_t CCSUsrMsg_XRankUpd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_XRankUpd)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 mode_idx = 1;
    if (has_mode_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mode_idx());
    }

    // optional int32 controller = 2;
    if (has_controller()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->controller());
    }

    // optional int32 ranking = 3;
    if (has_ranking()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ranking());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_XRankUpd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_XRankUpd)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_XRankUpd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_XRankUpd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_XRankUpd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_XRankUpd)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_XRankUpd::MergeFrom(const CCSUsrMsg_XRankUpd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_XRankUpd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_mode_idx()) {
      set_mode_idx(from.mode_idx());
    }
    if (from.has_controller()) {
      set_controller(from.controller());
    }
    if (from.has_ranking()) {
      set_ranking(from.ranking());
    }
  }
}

void CCSUsrMsg_XRankUpd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_XRankUpd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_XRankUpd::CopyFrom(const CCSUsrMsg_XRankUpd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_XRankUpd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_XRankUpd::IsInitialized() const {
  return true;
}

void CCSUsrMsg_XRankUpd::Swap(CCSUsrMsg_XRankUpd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_XRankUpd::InternalSwap(CCSUsrMsg_XRankUpd* other) {
  std::swap(mode_idx_, other->mode_idx_);
  std::swap(controller_, other->controller_);
  std::swap(ranking_, other->ranking_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_XRankUpd::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[41];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_XRankUpd

// optional int32 mode_idx = 1;
bool CCSUsrMsg_XRankUpd::has_mode_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_XRankUpd::set_has_mode_idx() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_XRankUpd::clear_has_mode_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_XRankUpd::clear_mode_idx() {
  mode_idx_ = 0;
  clear_has_mode_idx();
}
::google::protobuf::int32 CCSUsrMsg_XRankUpd::mode_idx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_XRankUpd.mode_idx)
  return mode_idx_;
}
void CCSUsrMsg_XRankUpd::set_mode_idx(::google::protobuf::int32 value) {
  set_has_mode_idx();
  mode_idx_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_XRankUpd.mode_idx)
}

// optional int32 controller = 2;
bool CCSUsrMsg_XRankUpd::has_controller() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_XRankUpd::set_has_controller() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_XRankUpd::clear_has_controller() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_XRankUpd::clear_controller() {
  controller_ = 0;
  clear_has_controller();
}
::google::protobuf::int32 CCSUsrMsg_XRankUpd::controller() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_XRankUpd.controller)
  return controller_;
}
void CCSUsrMsg_XRankUpd::set_controller(::google::protobuf::int32 value) {
  set_has_controller();
  controller_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_XRankUpd.controller)
}

// optional int32 ranking = 3;
bool CCSUsrMsg_XRankUpd::has_ranking() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_XRankUpd::set_has_ranking() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_XRankUpd::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_XRankUpd::clear_ranking() {
  ranking_ = 0;
  clear_has_ranking();
}
::google::protobuf::int32 CCSUsrMsg_XRankUpd::ranking() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_XRankUpd.ranking)
  return ranking_;
}
void CCSUsrMsg_XRankUpd::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_XRankUpd.ranking)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_CallVoteFailed::kReasonFieldNumber;
const int CCSUsrMsg_CallVoteFailed::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_CallVoteFailed::CCSUsrMsg_CallVoteFailed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_CallVoteFailed)
}
CCSUsrMsg_CallVoteFailed::CCSUsrMsg_CallVoteFailed(const CCSUsrMsg_CallVoteFailed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&reason_, &from.reason_,
    reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&reason_) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_CallVoteFailed)
}

void CCSUsrMsg_CallVoteFailed::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&reason_, 0, reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&reason_) + sizeof(time_));
}

CCSUsrMsg_CallVoteFailed::~CCSUsrMsg_CallVoteFailed() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_CallVoteFailed)
  SharedDtor();
}

void CCSUsrMsg_CallVoteFailed::SharedDtor() {
}

void CCSUsrMsg_CallVoteFailed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_CallVoteFailed::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[42].descriptor;
}

const CCSUsrMsg_CallVoteFailed& CCSUsrMsg_CallVoteFailed::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_CallVoteFailed* CCSUsrMsg_CallVoteFailed::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_CallVoteFailed* n = new CCSUsrMsg_CallVoteFailed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_CallVoteFailed::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_CallVoteFailed)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&reason_, 0, reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&reason_) + sizeof(time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_CallVoteFailed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_CallVoteFailed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 reason = 1;
      case 1: {
        if (tag == 8u) {
          set_has_reason();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 time = 2;
      case 2: {
        if (tag == 16u) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_CallVoteFailed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_CallVoteFailed)
  return false;
#undef DO_
}

void CCSUsrMsg_CallVoteFailed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_CallVoteFailed)
  // optional int32 reason = 1;
  if (has_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reason(), output);
  }

  // optional int32 time = 2;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_CallVoteFailed)
}

::google::protobuf::uint8* CCSUsrMsg_CallVoteFailed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_CallVoteFailed)
  // optional int32 reason = 1;
  if (has_reason()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reason(), target);
  }

  // optional int32 time = 2;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_CallVoteFailed)
  return target;
}

size_t CCSUsrMsg_CallVoteFailed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_CallVoteFailed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 reason = 1;
    if (has_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reason());
    }

    // optional int32 time = 2;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_CallVoteFailed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_CallVoteFailed)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_CallVoteFailed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_CallVoteFailed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_CallVoteFailed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_CallVoteFailed)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_CallVoteFailed::MergeFrom(const CCSUsrMsg_CallVoteFailed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_CallVoteFailed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_reason()) {
      set_reason(from.reason());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
}

void CCSUsrMsg_CallVoteFailed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_CallVoteFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_CallVoteFailed::CopyFrom(const CCSUsrMsg_CallVoteFailed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_CallVoteFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_CallVoteFailed::IsInitialized() const {
  return true;
}

void CCSUsrMsg_CallVoteFailed::Swap(CCSUsrMsg_CallVoteFailed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_CallVoteFailed::InternalSwap(CCSUsrMsg_CallVoteFailed* other) {
  std::swap(reason_, other->reason_);
  std::swap(time_, other->time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_CallVoteFailed::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[42];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_CallVoteFailed

// optional int32 reason = 1;
bool CCSUsrMsg_CallVoteFailed::has_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_CallVoteFailed::set_has_reason() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_CallVoteFailed::clear_has_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_CallVoteFailed::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
::google::protobuf::int32 CCSUsrMsg_CallVoteFailed::reason() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CallVoteFailed.reason)
  return reason_;
}
void CCSUsrMsg_CallVoteFailed::set_reason(::google::protobuf::int32 value) {
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CallVoteFailed.reason)
}

// optional int32 time = 2;
bool CCSUsrMsg_CallVoteFailed::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_CallVoteFailed::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_CallVoteFailed::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_CallVoteFailed::clear_time() {
  time_ = 0;
  clear_has_time();
}
::google::protobuf::int32 CCSUsrMsg_CallVoteFailed::time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CallVoteFailed.time)
  return time_;
}
void CCSUsrMsg_CallVoteFailed::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CallVoteFailed.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_VoteStart::kTeamFieldNumber;
const int CCSUsrMsg_VoteStart::kEntIdxFieldNumber;
const int CCSUsrMsg_VoteStart::kVoteTypeFieldNumber;
const int CCSUsrMsg_VoteStart::kDispStrFieldNumber;
const int CCSUsrMsg_VoteStart::kDetailsStrFieldNumber;
const int CCSUsrMsg_VoteStart::kOtherTeamStrFieldNumber;
const int CCSUsrMsg_VoteStart::kIsYesNoVoteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_VoteStart::CCSUsrMsg_VoteStart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_VoteStart)
}
CCSUsrMsg_VoteStart::CCSUsrMsg_VoteStart(const CCSUsrMsg_VoteStart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disp_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_disp_str()) {
    disp_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.disp_str_);
  }
  details_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_details_str()) {
    details_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_str_);
  }
  other_team_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_other_team_str()) {
    other_team_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_team_str_);
  }
  ::memcpy(&team_, &from.team_,
    reinterpret_cast<char*>(&is_yes_no_vote_) -
    reinterpret_cast<char*>(&team_) + sizeof(is_yes_no_vote_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_VoteStart)
}

void CCSUsrMsg_VoteStart::SharedCtor() {
  _cached_size_ = 0;
  disp_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_team_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&team_, 0, reinterpret_cast<char*>(&is_yes_no_vote_) -
    reinterpret_cast<char*>(&team_) + sizeof(is_yes_no_vote_));
}

CCSUsrMsg_VoteStart::~CCSUsrMsg_VoteStart() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_VoteStart)
  SharedDtor();
}

void CCSUsrMsg_VoteStart::SharedDtor() {
  disp_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_team_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_VoteStart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_VoteStart::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[43].descriptor;
}

const CCSUsrMsg_VoteStart& CCSUsrMsg_VoteStart::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_VoteStart* CCSUsrMsg_VoteStart::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_VoteStart* n = new CCSUsrMsg_VoteStart;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_VoteStart::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_VoteStart)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_disp_str()) {
      GOOGLE_DCHECK(!disp_str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*disp_str_.UnsafeRawStringPointer())->clear();
    }
    if (has_details_str()) {
      GOOGLE_DCHECK(!details_str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*details_str_.UnsafeRawStringPointer())->clear();
    }
    if (has_other_team_str()) {
      GOOGLE_DCHECK(!other_team_str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*other_team_str_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 120u) {
    ::memset(&team_, 0, reinterpret_cast<char*>(&is_yes_no_vote_) -
      reinterpret_cast<char*>(&team_) + sizeof(is_yes_no_vote_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_VoteStart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_VoteStart)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 team = 1;
      case 1: {
        if (tag == 8u) {
          set_has_team();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ent_idx = 2;
      case 2: {
        if (tag == 16u) {
          set_has_ent_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ent_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vote_type = 3;
      case 3: {
        if (tag == 24u) {
          set_has_vote_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vote_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string disp_str = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_disp_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->disp_str().data(), this->disp_str().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_VoteStart.disp_str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string details_str = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_details_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->details_str().data(), this->details_str().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_VoteStart.details_str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string other_team_str = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_other_team_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->other_team_str().data(), this->other_team_str().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_VoteStart.other_team_str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_yes_no_vote = 7;
      case 7: {
        if (tag == 56u) {
          set_has_is_yes_no_vote();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_yes_no_vote_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_VoteStart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_VoteStart)
  return false;
#undef DO_
}

void CCSUsrMsg_VoteStart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_VoteStart)
  // optional int32 team = 1;
  if (has_team()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->team(), output);
  }

  // optional int32 ent_idx = 2;
  if (has_ent_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ent_idx(), output);
  }

  // optional int32 vote_type = 3;
  if (has_vote_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->vote_type(), output);
  }

  // optional string disp_str = 4;
  if (has_disp_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->disp_str().data(), this->disp_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VoteStart.disp_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->disp_str(), output);
  }

  // optional string details_str = 5;
  if (has_details_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->details_str().data(), this->details_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VoteStart.details_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->details_str(), output);
  }

  // optional string other_team_str = 6;
  if (has_other_team_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->other_team_str().data(), this->other_team_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VoteStart.other_team_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->other_team_str(), output);
  }

  // optional bool is_yes_no_vote = 7;
  if (has_is_yes_no_vote()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_yes_no_vote(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_VoteStart)
}

::google::protobuf::uint8* CCSUsrMsg_VoteStart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_VoteStart)
  // optional int32 team = 1;
  if (has_team()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->team(), target);
  }

  // optional int32 ent_idx = 2;
  if (has_ent_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ent_idx(), target);
  }

  // optional int32 vote_type = 3;
  if (has_vote_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->vote_type(), target);
  }

  // optional string disp_str = 4;
  if (has_disp_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->disp_str().data(), this->disp_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VoteStart.disp_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->disp_str(), target);
  }

  // optional string details_str = 5;
  if (has_details_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->details_str().data(), this->details_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VoteStart.details_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->details_str(), target);
  }

  // optional string other_team_str = 6;
  if (has_other_team_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->other_team_str().data(), this->other_team_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VoteStart.other_team_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->other_team_str(), target);
  }

  // optional bool is_yes_no_vote = 7;
  if (has_is_yes_no_vote()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_yes_no_vote(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_VoteStart)
  return target;
}

size_t CCSUsrMsg_VoteStart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_VoteStart)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string disp_str = 4;
    if (has_disp_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->disp_str());
    }

    // optional string details_str = 5;
    if (has_details_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->details_str());
    }

    // optional string other_team_str = 6;
    if (has_other_team_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->other_team_str());
    }

    // optional int32 team = 1;
    if (has_team()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team());
    }

    // optional int32 ent_idx = 2;
    if (has_ent_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ent_idx());
    }

    // optional int32 vote_type = 3;
    if (has_vote_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vote_type());
    }

    // optional bool is_yes_no_vote = 7;
    if (has_is_yes_no_vote()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_VoteStart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_VoteStart)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_VoteStart* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_VoteStart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_VoteStart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_VoteStart)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_VoteStart::MergeFrom(const CCSUsrMsg_VoteStart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_VoteStart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 127u) {
    if (from.has_disp_str()) {
      set_has_disp_str();
      disp_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.disp_str_);
    }
    if (from.has_details_str()) {
      set_has_details_str();
      details_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_str_);
    }
    if (from.has_other_team_str()) {
      set_has_other_team_str();
      other_team_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_team_str_);
    }
    if (from.has_team()) {
      set_team(from.team());
    }
    if (from.has_ent_idx()) {
      set_ent_idx(from.ent_idx());
    }
    if (from.has_vote_type()) {
      set_vote_type(from.vote_type());
    }
    if (from.has_is_yes_no_vote()) {
      set_is_yes_no_vote(from.is_yes_no_vote());
    }
  }
}

void CCSUsrMsg_VoteStart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_VoteStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_VoteStart::CopyFrom(const CCSUsrMsg_VoteStart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_VoteStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_VoteStart::IsInitialized() const {
  return true;
}

void CCSUsrMsg_VoteStart::Swap(CCSUsrMsg_VoteStart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_VoteStart::InternalSwap(CCSUsrMsg_VoteStart* other) {
  disp_str_.Swap(&other->disp_str_);
  details_str_.Swap(&other->details_str_);
  other_team_str_.Swap(&other->other_team_str_);
  std::swap(team_, other->team_);
  std::swap(ent_idx_, other->ent_idx_);
  std::swap(vote_type_, other->vote_type_);
  std::swap(is_yes_no_vote_, other->is_yes_no_vote_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_VoteStart::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[43];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_VoteStart

// optional int32 team = 1;
bool CCSUsrMsg_VoteStart::has_team() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CCSUsrMsg_VoteStart::set_has_team() {
  _has_bits_[0] |= 0x00000008u;
}
void CCSUsrMsg_VoteStart::clear_has_team() {
  _has_bits_[0] &= ~0x00000008u;
}
void CCSUsrMsg_VoteStart::clear_team() {
  team_ = 0;
  clear_has_team();
}
::google::protobuf::int32 CCSUsrMsg_VoteStart::team() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.team)
  return team_;
}
void CCSUsrMsg_VoteStart::set_team(::google::protobuf::int32 value) {
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.team)
}

// optional int32 ent_idx = 2;
bool CCSUsrMsg_VoteStart::has_ent_idx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CCSUsrMsg_VoteStart::set_has_ent_idx() {
  _has_bits_[0] |= 0x00000010u;
}
void CCSUsrMsg_VoteStart::clear_has_ent_idx() {
  _has_bits_[0] &= ~0x00000010u;
}
void CCSUsrMsg_VoteStart::clear_ent_idx() {
  ent_idx_ = 0;
  clear_has_ent_idx();
}
::google::protobuf::int32 CCSUsrMsg_VoteStart::ent_idx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.ent_idx)
  return ent_idx_;
}
void CCSUsrMsg_VoteStart::set_ent_idx(::google::protobuf::int32 value) {
  set_has_ent_idx();
  ent_idx_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.ent_idx)
}

// optional int32 vote_type = 3;
bool CCSUsrMsg_VoteStart::has_vote_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CCSUsrMsg_VoteStart::set_has_vote_type() {
  _has_bits_[0] |= 0x00000020u;
}
void CCSUsrMsg_VoteStart::clear_has_vote_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void CCSUsrMsg_VoteStart::clear_vote_type() {
  vote_type_ = 0;
  clear_has_vote_type();
}
::google::protobuf::int32 CCSUsrMsg_VoteStart::vote_type() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.vote_type)
  return vote_type_;
}
void CCSUsrMsg_VoteStart::set_vote_type(::google::protobuf::int32 value) {
  set_has_vote_type();
  vote_type_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.vote_type)
}

// optional string disp_str = 4;
bool CCSUsrMsg_VoteStart::has_disp_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_VoteStart::set_has_disp_str() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_VoteStart::clear_has_disp_str() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_VoteStart::clear_disp_str() {
  disp_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_disp_str();
}
const ::std::string& CCSUsrMsg_VoteStart::disp_str() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.disp_str)
  return disp_str_.GetNoArena();
}
void CCSUsrMsg_VoteStart::set_disp_str(const ::std::string& value) {
  set_has_disp_str();
  disp_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.disp_str)
}
#if LANG_CXX11
void CCSUsrMsg_VoteStart::set_disp_str(::std::string&& value) {
  set_has_disp_str();
  disp_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_VoteStart.disp_str)
}
#endif
void CCSUsrMsg_VoteStart::set_disp_str(const char* value) {
  set_has_disp_str();
  disp_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_VoteStart.disp_str)
}
void CCSUsrMsg_VoteStart::set_disp_str(const char* value, size_t size) {
  set_has_disp_str();
  disp_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_VoteStart.disp_str)
}
::std::string* CCSUsrMsg_VoteStart::mutable_disp_str() {
  set_has_disp_str();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VoteStart.disp_str)
  return disp_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_VoteStart::release_disp_str() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VoteStart.disp_str)
  clear_has_disp_str();
  return disp_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_VoteStart::set_allocated_disp_str(::std::string* disp_str) {
  if (disp_str != NULL) {
    set_has_disp_str();
  } else {
    clear_has_disp_str();
  }
  disp_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), disp_str);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VoteStart.disp_str)
}

// optional string details_str = 5;
bool CCSUsrMsg_VoteStart::has_details_str() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_VoteStart::set_has_details_str() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_VoteStart::clear_has_details_str() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_VoteStart::clear_details_str() {
  details_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_details_str();
}
const ::std::string& CCSUsrMsg_VoteStart::details_str() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.details_str)
  return details_str_.GetNoArena();
}
void CCSUsrMsg_VoteStart::set_details_str(const ::std::string& value) {
  set_has_details_str();
  details_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.details_str)
}
#if LANG_CXX11
void CCSUsrMsg_VoteStart::set_details_str(::std::string&& value) {
  set_has_details_str();
  details_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_VoteStart.details_str)
}
#endif
void CCSUsrMsg_VoteStart::set_details_str(const char* value) {
  set_has_details_str();
  details_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_VoteStart.details_str)
}
void CCSUsrMsg_VoteStart::set_details_str(const char* value, size_t size) {
  set_has_details_str();
  details_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_VoteStart.details_str)
}
::std::string* CCSUsrMsg_VoteStart::mutable_details_str() {
  set_has_details_str();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VoteStart.details_str)
  return details_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_VoteStart::release_details_str() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VoteStart.details_str)
  clear_has_details_str();
  return details_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_VoteStart::set_allocated_details_str(::std::string* details_str) {
  if (details_str != NULL) {
    set_has_details_str();
  } else {
    clear_has_details_str();
  }
  details_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), details_str);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VoteStart.details_str)
}

// optional string other_team_str = 6;
bool CCSUsrMsg_VoteStart::has_other_team_str() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_VoteStart::set_has_other_team_str() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_VoteStart::clear_has_other_team_str() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_VoteStart::clear_other_team_str() {
  other_team_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_other_team_str();
}
const ::std::string& CCSUsrMsg_VoteStart::other_team_str() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.other_team_str)
  return other_team_str_.GetNoArena();
}
void CCSUsrMsg_VoteStart::set_other_team_str(const ::std::string& value) {
  set_has_other_team_str();
  other_team_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.other_team_str)
}
#if LANG_CXX11
void CCSUsrMsg_VoteStart::set_other_team_str(::std::string&& value) {
  set_has_other_team_str();
  other_team_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_VoteStart.other_team_str)
}
#endif
void CCSUsrMsg_VoteStart::set_other_team_str(const char* value) {
  set_has_other_team_str();
  other_team_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_VoteStart.other_team_str)
}
void CCSUsrMsg_VoteStart::set_other_team_str(const char* value, size_t size) {
  set_has_other_team_str();
  other_team_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_VoteStart.other_team_str)
}
::std::string* CCSUsrMsg_VoteStart::mutable_other_team_str() {
  set_has_other_team_str();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VoteStart.other_team_str)
  return other_team_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_VoteStart::release_other_team_str() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VoteStart.other_team_str)
  clear_has_other_team_str();
  return other_team_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_VoteStart::set_allocated_other_team_str(::std::string* other_team_str) {
  if (other_team_str != NULL) {
    set_has_other_team_str();
  } else {
    clear_has_other_team_str();
  }
  other_team_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), other_team_str);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VoteStart.other_team_str)
}

// optional bool is_yes_no_vote = 7;
bool CCSUsrMsg_VoteStart::has_is_yes_no_vote() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CCSUsrMsg_VoteStart::set_has_is_yes_no_vote() {
  _has_bits_[0] |= 0x00000040u;
}
void CCSUsrMsg_VoteStart::clear_has_is_yes_no_vote() {
  _has_bits_[0] &= ~0x00000040u;
}
void CCSUsrMsg_VoteStart::clear_is_yes_no_vote() {
  is_yes_no_vote_ = false;
  clear_has_is_yes_no_vote();
}
bool CCSUsrMsg_VoteStart::is_yes_no_vote() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.is_yes_no_vote)
  return is_yes_no_vote_;
}
void CCSUsrMsg_VoteStart::set_is_yes_no_vote(bool value) {
  set_has_is_yes_no_vote();
  is_yes_no_vote_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.is_yes_no_vote)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_VotePass::kTeamFieldNumber;
const int CCSUsrMsg_VotePass::kVoteTypeFieldNumber;
const int CCSUsrMsg_VotePass::kDispStrFieldNumber;
const int CCSUsrMsg_VotePass::kDetailsStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_VotePass::CCSUsrMsg_VotePass()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_VotePass)
}
CCSUsrMsg_VotePass::CCSUsrMsg_VotePass(const CCSUsrMsg_VotePass& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disp_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_disp_str()) {
    disp_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.disp_str_);
  }
  details_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_details_str()) {
    details_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_str_);
  }
  ::memcpy(&team_, &from.team_,
    reinterpret_cast<char*>(&vote_type_) -
    reinterpret_cast<char*>(&team_) + sizeof(vote_type_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_VotePass)
}

void CCSUsrMsg_VotePass::SharedCtor() {
  _cached_size_ = 0;
  disp_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&team_, 0, reinterpret_cast<char*>(&vote_type_) -
    reinterpret_cast<char*>(&team_) + sizeof(vote_type_));
}

CCSUsrMsg_VotePass::~CCSUsrMsg_VotePass() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_VotePass)
  SharedDtor();
}

void CCSUsrMsg_VotePass::SharedDtor() {
  disp_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_VotePass::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_VotePass::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[44].descriptor;
}

const CCSUsrMsg_VotePass& CCSUsrMsg_VotePass::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_VotePass* CCSUsrMsg_VotePass::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_VotePass* n = new CCSUsrMsg_VotePass;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_VotePass::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_VotePass)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_disp_str()) {
      GOOGLE_DCHECK(!disp_str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*disp_str_.UnsafeRawStringPointer())->clear();
    }
    if (has_details_str()) {
      GOOGLE_DCHECK(!details_str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*details_str_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&team_, 0, reinterpret_cast<char*>(&vote_type_) -
      reinterpret_cast<char*>(&team_) + sizeof(vote_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_VotePass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_VotePass)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 team = 1;
      case 1: {
        if (tag == 8u) {
          set_has_team();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vote_type = 2;
      case 2: {
        if (tag == 16u) {
          set_has_vote_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vote_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string disp_str = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_disp_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->disp_str().data(), this->disp_str().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_VotePass.disp_str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string details_str = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_details_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->details_str().data(), this->details_str().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_VotePass.details_str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_VotePass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_VotePass)
  return false;
#undef DO_
}

void CCSUsrMsg_VotePass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_VotePass)
  // optional int32 team = 1;
  if (has_team()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->team(), output);
  }

  // optional int32 vote_type = 2;
  if (has_vote_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vote_type(), output);
  }

  // optional string disp_str = 3;
  if (has_disp_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->disp_str().data(), this->disp_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VotePass.disp_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->disp_str(), output);
  }

  // optional string details_str = 4;
  if (has_details_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->details_str().data(), this->details_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VotePass.details_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->details_str(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_VotePass)
}

::google::protobuf::uint8* CCSUsrMsg_VotePass::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_VotePass)
  // optional int32 team = 1;
  if (has_team()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->team(), target);
  }

  // optional int32 vote_type = 2;
  if (has_vote_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vote_type(), target);
  }

  // optional string disp_str = 3;
  if (has_disp_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->disp_str().data(), this->disp_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VotePass.disp_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->disp_str(), target);
  }

  // optional string details_str = 4;
  if (has_details_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->details_str().data(), this->details_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VotePass.details_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->details_str(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_VotePass)
  return target;
}

size_t CCSUsrMsg_VotePass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_VotePass)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string disp_str = 3;
    if (has_disp_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->disp_str());
    }

    // optional string details_str = 4;
    if (has_details_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->details_str());
    }

    // optional int32 team = 1;
    if (has_team()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team());
    }

    // optional int32 vote_type = 2;
    if (has_vote_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vote_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_VotePass::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_VotePass)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_VotePass* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_VotePass>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_VotePass)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_VotePass)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_VotePass::MergeFrom(const CCSUsrMsg_VotePass& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_VotePass)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_disp_str()) {
      set_has_disp_str();
      disp_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.disp_str_);
    }
    if (from.has_details_str()) {
      set_has_details_str();
      details_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_str_);
    }
    if (from.has_team()) {
      set_team(from.team());
    }
    if (from.has_vote_type()) {
      set_vote_type(from.vote_type());
    }
  }
}

void CCSUsrMsg_VotePass::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_VotePass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_VotePass::CopyFrom(const CCSUsrMsg_VotePass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_VotePass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_VotePass::IsInitialized() const {
  return true;
}

void CCSUsrMsg_VotePass::Swap(CCSUsrMsg_VotePass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_VotePass::InternalSwap(CCSUsrMsg_VotePass* other) {
  disp_str_.Swap(&other->disp_str_);
  details_str_.Swap(&other->details_str_);
  std::swap(team_, other->team_);
  std::swap(vote_type_, other->vote_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_VotePass::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[44];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_VotePass

// optional int32 team = 1;
bool CCSUsrMsg_VotePass::has_team() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_VotePass::set_has_team() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_VotePass::clear_has_team() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_VotePass::clear_team() {
  team_ = 0;
  clear_has_team();
}
::google::protobuf::int32 CCSUsrMsg_VotePass::team() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VotePass.team)
  return team_;
}
void CCSUsrMsg_VotePass::set_team(::google::protobuf::int32 value) {
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VotePass.team)
}

// optional int32 vote_type = 2;
bool CCSUsrMsg_VotePass::has_vote_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CCSUsrMsg_VotePass::set_has_vote_type() {
  _has_bits_[0] |= 0x00000008u;
}
void CCSUsrMsg_VotePass::clear_has_vote_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void CCSUsrMsg_VotePass::clear_vote_type() {
  vote_type_ = 0;
  clear_has_vote_type();
}
::google::protobuf::int32 CCSUsrMsg_VotePass::vote_type() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VotePass.vote_type)
  return vote_type_;
}
void CCSUsrMsg_VotePass::set_vote_type(::google::protobuf::int32 value) {
  set_has_vote_type();
  vote_type_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VotePass.vote_type)
}

// optional string disp_str = 3;
bool CCSUsrMsg_VotePass::has_disp_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_VotePass::set_has_disp_str() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_VotePass::clear_has_disp_str() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_VotePass::clear_disp_str() {
  disp_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_disp_str();
}
const ::std::string& CCSUsrMsg_VotePass::disp_str() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VotePass.disp_str)
  return disp_str_.GetNoArena();
}
void CCSUsrMsg_VotePass::set_disp_str(const ::std::string& value) {
  set_has_disp_str();
  disp_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VotePass.disp_str)
}
#if LANG_CXX11
void CCSUsrMsg_VotePass::set_disp_str(::std::string&& value) {
  set_has_disp_str();
  disp_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_VotePass.disp_str)
}
#endif
void CCSUsrMsg_VotePass::set_disp_str(const char* value) {
  set_has_disp_str();
  disp_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_VotePass.disp_str)
}
void CCSUsrMsg_VotePass::set_disp_str(const char* value, size_t size) {
  set_has_disp_str();
  disp_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_VotePass.disp_str)
}
::std::string* CCSUsrMsg_VotePass::mutable_disp_str() {
  set_has_disp_str();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VotePass.disp_str)
  return disp_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_VotePass::release_disp_str() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VotePass.disp_str)
  clear_has_disp_str();
  return disp_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_VotePass::set_allocated_disp_str(::std::string* disp_str) {
  if (disp_str != NULL) {
    set_has_disp_str();
  } else {
    clear_has_disp_str();
  }
  disp_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), disp_str);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VotePass.disp_str)
}

// optional string details_str = 4;
bool CCSUsrMsg_VotePass::has_details_str() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_VotePass::set_has_details_str() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_VotePass::clear_has_details_str() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_VotePass::clear_details_str() {
  details_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_details_str();
}
const ::std::string& CCSUsrMsg_VotePass::details_str() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VotePass.details_str)
  return details_str_.GetNoArena();
}
void CCSUsrMsg_VotePass::set_details_str(const ::std::string& value) {
  set_has_details_str();
  details_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VotePass.details_str)
}
#if LANG_CXX11
void CCSUsrMsg_VotePass::set_details_str(::std::string&& value) {
  set_has_details_str();
  details_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_VotePass.details_str)
}
#endif
void CCSUsrMsg_VotePass::set_details_str(const char* value) {
  set_has_details_str();
  details_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_VotePass.details_str)
}
void CCSUsrMsg_VotePass::set_details_str(const char* value, size_t size) {
  set_has_details_str();
  details_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_VotePass.details_str)
}
::std::string* CCSUsrMsg_VotePass::mutable_details_str() {
  set_has_details_str();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VotePass.details_str)
  return details_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_VotePass::release_details_str() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VotePass.details_str)
  clear_has_details_str();
  return details_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_VotePass::set_allocated_details_str(::std::string* details_str) {
  if (details_str != NULL) {
    set_has_details_str();
  } else {
    clear_has_details_str();
  }
  details_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), details_str);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VotePass.details_str)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_VoteFailed::kTeamFieldNumber;
const int CCSUsrMsg_VoteFailed::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_VoteFailed::CCSUsrMsg_VoteFailed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_VoteFailed)
}
CCSUsrMsg_VoteFailed::CCSUsrMsg_VoteFailed(const CCSUsrMsg_VoteFailed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&team_, &from.team_,
    reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&team_) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_VoteFailed)
}

void CCSUsrMsg_VoteFailed::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&team_, 0, reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&team_) + sizeof(reason_));
}

CCSUsrMsg_VoteFailed::~CCSUsrMsg_VoteFailed() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_VoteFailed)
  SharedDtor();
}

void CCSUsrMsg_VoteFailed::SharedDtor() {
}

void CCSUsrMsg_VoteFailed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_VoteFailed::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[45].descriptor;
}

const CCSUsrMsg_VoteFailed& CCSUsrMsg_VoteFailed::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_VoteFailed* CCSUsrMsg_VoteFailed::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_VoteFailed* n = new CCSUsrMsg_VoteFailed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_VoteFailed::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_VoteFailed)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&team_, 0, reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&team_) + sizeof(reason_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_VoteFailed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_VoteFailed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 team = 1;
      case 1: {
        if (tag == 8u) {
          set_has_team();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 reason = 2;
      case 2: {
        if (tag == 16u) {
          set_has_reason();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_VoteFailed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_VoteFailed)
  return false;
#undef DO_
}

void CCSUsrMsg_VoteFailed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_VoteFailed)
  // optional int32 team = 1;
  if (has_team()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->team(), output);
  }

  // optional int32 reason = 2;
  if (has_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_VoteFailed)
}

::google::protobuf::uint8* CCSUsrMsg_VoteFailed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_VoteFailed)
  // optional int32 team = 1;
  if (has_team()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->team(), target);
  }

  // optional int32 reason = 2;
  if (has_reason()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_VoteFailed)
  return target;
}

size_t CCSUsrMsg_VoteFailed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_VoteFailed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 team = 1;
    if (has_team()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team());
    }

    // optional int32 reason = 2;
    if (has_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reason());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_VoteFailed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_VoteFailed)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_VoteFailed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_VoteFailed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_VoteFailed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_VoteFailed)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_VoteFailed::MergeFrom(const CCSUsrMsg_VoteFailed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_VoteFailed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_team()) {
      set_team(from.team());
    }
    if (from.has_reason()) {
      set_reason(from.reason());
    }
  }
}

void CCSUsrMsg_VoteFailed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_VoteFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_VoteFailed::CopyFrom(const CCSUsrMsg_VoteFailed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_VoteFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_VoteFailed::IsInitialized() const {
  return true;
}

void CCSUsrMsg_VoteFailed::Swap(CCSUsrMsg_VoteFailed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_VoteFailed::InternalSwap(CCSUsrMsg_VoteFailed* other) {
  std::swap(team_, other->team_);
  std::swap(reason_, other->reason_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_VoteFailed::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[45];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_VoteFailed

// optional int32 team = 1;
bool CCSUsrMsg_VoteFailed::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_VoteFailed::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_VoteFailed::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_VoteFailed::clear_team() {
  team_ = 0;
  clear_has_team();
}
::google::protobuf::int32 CCSUsrMsg_VoteFailed::team() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteFailed.team)
  return team_;
}
void CCSUsrMsg_VoteFailed::set_team(::google::protobuf::int32 value) {
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteFailed.team)
}

// optional int32 reason = 2;
bool CCSUsrMsg_VoteFailed::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_VoteFailed::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_VoteFailed::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_VoteFailed::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
::google::protobuf::int32 CCSUsrMsg_VoteFailed::reason() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteFailed.reason)
  return reason_;
}
void CCSUsrMsg_VoteFailed::set_reason(::google::protobuf::int32 value) {
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteFailed.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_VoteSetup::kPotentialIssuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_VoteSetup::CCSUsrMsg_VoteSetup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_VoteSetup)
}
CCSUsrMsg_VoteSetup::CCSUsrMsg_VoteSetup(const CCSUsrMsg_VoteSetup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      potential_issues_(from.potential_issues_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_VoteSetup)
}

void CCSUsrMsg_VoteSetup::SharedCtor() {
  _cached_size_ = 0;
}

CCSUsrMsg_VoteSetup::~CCSUsrMsg_VoteSetup() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_VoteSetup)
  SharedDtor();
}

void CCSUsrMsg_VoteSetup::SharedDtor() {
}

void CCSUsrMsg_VoteSetup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_VoteSetup::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[46].descriptor;
}

const CCSUsrMsg_VoteSetup& CCSUsrMsg_VoteSetup::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_VoteSetup* CCSUsrMsg_VoteSetup::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_VoteSetup* n = new CCSUsrMsg_VoteSetup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_VoteSetup::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_VoteSetup)
  potential_issues_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_VoteSetup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_VoteSetup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string potential_issues = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_potential_issues()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->potential_issues(this->potential_issues_size() - 1).data(),
            this->potential_issues(this->potential_issues_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_VoteSetup.potential_issues");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_VoteSetup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_VoteSetup)
  return false;
#undef DO_
}

void CCSUsrMsg_VoteSetup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_VoteSetup)
  // repeated string potential_issues = 1;
  for (int i = 0; i < this->potential_issues_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->potential_issues(i).data(), this->potential_issues(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VoteSetup.potential_issues");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->potential_issues(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_VoteSetup)
}

::google::protobuf::uint8* CCSUsrMsg_VoteSetup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_VoteSetup)
  // repeated string potential_issues = 1;
  for (int i = 0; i < this->potential_issues_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->potential_issues(i).data(), this->potential_issues(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VoteSetup.potential_issues");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->potential_issues(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_VoteSetup)
  return target;
}

size_t CCSUsrMsg_VoteSetup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_VoteSetup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated string potential_issues = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->potential_issues_size());
  for (int i = 0; i < this->potential_issues_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->potential_issues(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_VoteSetup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_VoteSetup)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_VoteSetup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_VoteSetup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_VoteSetup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_VoteSetup)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_VoteSetup::MergeFrom(const CCSUsrMsg_VoteSetup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_VoteSetup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  potential_issues_.MergeFrom(from.potential_issues_);
}

void CCSUsrMsg_VoteSetup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_VoteSetup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_VoteSetup::CopyFrom(const CCSUsrMsg_VoteSetup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_VoteSetup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_VoteSetup::IsInitialized() const {
  return true;
}

void CCSUsrMsg_VoteSetup::Swap(CCSUsrMsg_VoteSetup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_VoteSetup::InternalSwap(CCSUsrMsg_VoteSetup* other) {
  potential_issues_.UnsafeArenaSwap(&other->potential_issues_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_VoteSetup::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[46];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_VoteSetup

// repeated string potential_issues = 1;
int CCSUsrMsg_VoteSetup::potential_issues_size() const {
  return potential_issues_.size();
}
void CCSUsrMsg_VoteSetup::clear_potential_issues() {
  potential_issues_.Clear();
}
const ::std::string& CCSUsrMsg_VoteSetup::potential_issues(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteSetup.potential_issues)
  return potential_issues_.Get(index);
}
::std::string* CCSUsrMsg_VoteSetup::mutable_potential_issues(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VoteSetup.potential_issues)
  return potential_issues_.Mutable(index);
}
void CCSUsrMsg_VoteSetup::set_potential_issues(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteSetup.potential_issues)
  potential_issues_.Mutable(index)->assign(value);
}
void CCSUsrMsg_VoteSetup::set_potential_issues(int index, const char* value) {
  potential_issues_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_VoteSetup.potential_issues)
}
void CCSUsrMsg_VoteSetup::set_potential_issues(int index, const char* value, size_t size) {
  potential_issues_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_VoteSetup.potential_issues)
}
::std::string* CCSUsrMsg_VoteSetup::add_potential_issues() {
  // @@protoc_insertion_point(field_add_mutable:CCSUsrMsg_VoteSetup.potential_issues)
  return potential_issues_.Add();
}
void CCSUsrMsg_VoteSetup::add_potential_issues(const ::std::string& value) {
  potential_issues_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CCSUsrMsg_VoteSetup.potential_issues)
}
void CCSUsrMsg_VoteSetup::add_potential_issues(const char* value) {
  potential_issues_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CCSUsrMsg_VoteSetup.potential_issues)
}
void CCSUsrMsg_VoteSetup::add_potential_issues(const char* value, size_t size) {
  potential_issues_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CCSUsrMsg_VoteSetup.potential_issues)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_VoteSetup::potential_issues() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_VoteSetup.potential_issues)
  return potential_issues_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_VoteSetup::mutable_potential_issues() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_VoteSetup.potential_issues)
  return &potential_issues_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_SendLastKillerDamageToClient::kNumHitsGivenFieldNumber;
const int CCSUsrMsg_SendLastKillerDamageToClient::kDamageGivenFieldNumber;
const int CCSUsrMsg_SendLastKillerDamageToClient::kNumHitsTakenFieldNumber;
const int CCSUsrMsg_SendLastKillerDamageToClient::kDamageTakenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_SendLastKillerDamageToClient::CCSUsrMsg_SendLastKillerDamageToClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_SendLastKillerDamageToClient)
}
CCSUsrMsg_SendLastKillerDamageToClient::CCSUsrMsg_SendLastKillerDamageToClient(const CCSUsrMsg_SendLastKillerDamageToClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num_hits_given_, &from.num_hits_given_,
    reinterpret_cast<char*>(&damage_taken_) -
    reinterpret_cast<char*>(&num_hits_given_) + sizeof(damage_taken_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_SendLastKillerDamageToClient)
}

void CCSUsrMsg_SendLastKillerDamageToClient::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&num_hits_given_, 0, reinterpret_cast<char*>(&damage_taken_) -
    reinterpret_cast<char*>(&num_hits_given_) + sizeof(damage_taken_));
}

CCSUsrMsg_SendLastKillerDamageToClient::~CCSUsrMsg_SendLastKillerDamageToClient() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_SendLastKillerDamageToClient)
  SharedDtor();
}

void CCSUsrMsg_SendLastKillerDamageToClient::SharedDtor() {
}

void CCSUsrMsg_SendLastKillerDamageToClient::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_SendLastKillerDamageToClient::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[47].descriptor;
}

const CCSUsrMsg_SendLastKillerDamageToClient& CCSUsrMsg_SendLastKillerDamageToClient::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_SendLastKillerDamageToClient* CCSUsrMsg_SendLastKillerDamageToClient::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_SendLastKillerDamageToClient* n = new CCSUsrMsg_SendLastKillerDamageToClient;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_SendLastKillerDamageToClient::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_SendLastKillerDamageToClient)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&num_hits_given_, 0, reinterpret_cast<char*>(&damage_taken_) -
      reinterpret_cast<char*>(&num_hits_given_) + sizeof(damage_taken_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_SendLastKillerDamageToClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_SendLastKillerDamageToClient)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num_hits_given = 1;
      case 1: {
        if (tag == 8u) {
          set_has_num_hits_given();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_hits_given_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 damage_given = 2;
      case 2: {
        if (tag == 16u) {
          set_has_damage_given();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_given_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_hits_taken = 3;
      case 3: {
        if (tag == 24u) {
          set_has_num_hits_taken();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_hits_taken_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 damage_taken = 4;
      case 4: {
        if (tag == 32u) {
          set_has_damage_taken();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_taken_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_SendLastKillerDamageToClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_SendLastKillerDamageToClient)
  return false;
#undef DO_
}

void CCSUsrMsg_SendLastKillerDamageToClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_SendLastKillerDamageToClient)
  // optional int32 num_hits_given = 1;
  if (has_num_hits_given()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_hits_given(), output);
  }

  // optional int32 damage_given = 2;
  if (has_damage_given()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->damage_given(), output);
  }

  // optional int32 num_hits_taken = 3;
  if (has_num_hits_taken()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num_hits_taken(), output);
  }

  // optional int32 damage_taken = 4;
  if (has_damage_taken()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->damage_taken(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_SendLastKillerDamageToClient)
}

::google::protobuf::uint8* CCSUsrMsg_SendLastKillerDamageToClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_SendLastKillerDamageToClient)
  // optional int32 num_hits_given = 1;
  if (has_num_hits_given()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_hits_given(), target);
  }

  // optional int32 damage_given = 2;
  if (has_damage_given()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->damage_given(), target);
  }

  // optional int32 num_hits_taken = 3;
  if (has_num_hits_taken()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num_hits_taken(), target);
  }

  // optional int32 damage_taken = 4;
  if (has_damage_taken()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->damage_taken(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_SendLastKillerDamageToClient)
  return target;
}

size_t CCSUsrMsg_SendLastKillerDamageToClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_SendLastKillerDamageToClient)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 num_hits_given = 1;
    if (has_num_hits_given()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_hits_given());
    }

    // optional int32 damage_given = 2;
    if (has_damage_given()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->damage_given());
    }

    // optional int32 num_hits_taken = 3;
    if (has_num_hits_taken()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_hits_taken());
    }

    // optional int32 damage_taken = 4;
    if (has_damage_taken()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->damage_taken());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_SendLastKillerDamageToClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_SendLastKillerDamageToClient)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_SendLastKillerDamageToClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_SendLastKillerDamageToClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_SendLastKillerDamageToClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_SendLastKillerDamageToClient)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_SendLastKillerDamageToClient::MergeFrom(const CCSUsrMsg_SendLastKillerDamageToClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_SendLastKillerDamageToClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_num_hits_given()) {
      set_num_hits_given(from.num_hits_given());
    }
    if (from.has_damage_given()) {
      set_damage_given(from.damage_given());
    }
    if (from.has_num_hits_taken()) {
      set_num_hits_taken(from.num_hits_taken());
    }
    if (from.has_damage_taken()) {
      set_damage_taken(from.damage_taken());
    }
  }
}

void CCSUsrMsg_SendLastKillerDamageToClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_SendLastKillerDamageToClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_SendLastKillerDamageToClient::CopyFrom(const CCSUsrMsg_SendLastKillerDamageToClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_SendLastKillerDamageToClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_SendLastKillerDamageToClient::IsInitialized() const {
  return true;
}

void CCSUsrMsg_SendLastKillerDamageToClient::Swap(CCSUsrMsg_SendLastKillerDamageToClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_SendLastKillerDamageToClient::InternalSwap(CCSUsrMsg_SendLastKillerDamageToClient* other) {
  std::swap(num_hits_given_, other->num_hits_given_);
  std::swap(damage_given_, other->damage_given_);
  std::swap(num_hits_taken_, other->num_hits_taken_);
  std::swap(damage_taken_, other->damage_taken_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_SendLastKillerDamageToClient::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[47];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_SendLastKillerDamageToClient

// optional int32 num_hits_given = 1;
bool CCSUsrMsg_SendLastKillerDamageToClient::has_num_hits_given() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_SendLastKillerDamageToClient::set_has_num_hits_given() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_SendLastKillerDamageToClient::clear_has_num_hits_given() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_SendLastKillerDamageToClient::clear_num_hits_given() {
  num_hits_given_ = 0;
  clear_has_num_hits_given();
}
::google::protobuf::int32 CCSUsrMsg_SendLastKillerDamageToClient::num_hits_given() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendLastKillerDamageToClient.num_hits_given)
  return num_hits_given_;
}
void CCSUsrMsg_SendLastKillerDamageToClient::set_num_hits_given(::google::protobuf::int32 value) {
  set_has_num_hits_given();
  num_hits_given_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SendLastKillerDamageToClient.num_hits_given)
}

// optional int32 damage_given = 2;
bool CCSUsrMsg_SendLastKillerDamageToClient::has_damage_given() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_SendLastKillerDamageToClient::set_has_damage_given() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_SendLastKillerDamageToClient::clear_has_damage_given() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_SendLastKillerDamageToClient::clear_damage_given() {
  damage_given_ = 0;
  clear_has_damage_given();
}
::google::protobuf::int32 CCSUsrMsg_SendLastKillerDamageToClient::damage_given() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendLastKillerDamageToClient.damage_given)
  return damage_given_;
}
void CCSUsrMsg_SendLastKillerDamageToClient::set_damage_given(::google::protobuf::int32 value) {
  set_has_damage_given();
  damage_given_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SendLastKillerDamageToClient.damage_given)
}

// optional int32 num_hits_taken = 3;
bool CCSUsrMsg_SendLastKillerDamageToClient::has_num_hits_taken() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_SendLastKillerDamageToClient::set_has_num_hits_taken() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_SendLastKillerDamageToClient::clear_has_num_hits_taken() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_SendLastKillerDamageToClient::clear_num_hits_taken() {
  num_hits_taken_ = 0;
  clear_has_num_hits_taken();
}
::google::protobuf::int32 CCSUsrMsg_SendLastKillerDamageToClient::num_hits_taken() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendLastKillerDamageToClient.num_hits_taken)
  return num_hits_taken_;
}
void CCSUsrMsg_SendLastKillerDamageToClient::set_num_hits_taken(::google::protobuf::int32 value) {
  set_has_num_hits_taken();
  num_hits_taken_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SendLastKillerDamageToClient.num_hits_taken)
}

// optional int32 damage_taken = 4;
bool CCSUsrMsg_SendLastKillerDamageToClient::has_damage_taken() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CCSUsrMsg_SendLastKillerDamageToClient::set_has_damage_taken() {
  _has_bits_[0] |= 0x00000008u;
}
void CCSUsrMsg_SendLastKillerDamageToClient::clear_has_damage_taken() {
  _has_bits_[0] &= ~0x00000008u;
}
void CCSUsrMsg_SendLastKillerDamageToClient::clear_damage_taken() {
  damage_taken_ = 0;
  clear_has_damage_taken();
}
::google::protobuf::int32 CCSUsrMsg_SendLastKillerDamageToClient::damage_taken() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendLastKillerDamageToClient.damage_taken)
  return damage_taken_;
}
void CCSUsrMsg_SendLastKillerDamageToClient::set_damage_taken(::google::protobuf::int32 value) {
  set_has_damage_taken();
  damage_taken_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SendLastKillerDamageToClient.damage_taken)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ServerRankUpdate_RankUpdate::kAccountIdFieldNumber;
const int CCSUsrMsg_ServerRankUpdate_RankUpdate::kRankOldFieldNumber;
const int CCSUsrMsg_ServerRankUpdate_RankUpdate::kRankNewFieldNumber;
const int CCSUsrMsg_ServerRankUpdate_RankUpdate::kNumWinsFieldNumber;
const int CCSUsrMsg_ServerRankUpdate_RankUpdate::kRankChangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ServerRankUpdate_RankUpdate::CCSUsrMsg_ServerRankUpdate_RankUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ServerRankUpdate.RankUpdate)
}
CCSUsrMsg_ServerRankUpdate_RankUpdate::CCSUsrMsg_ServerRankUpdate_RankUpdate(const CCSUsrMsg_ServerRankUpdate_RankUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    reinterpret_cast<char*>(&rank_change_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(rank_change_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ServerRankUpdate.RankUpdate)
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&account_id_, 0, reinterpret_cast<char*>(&rank_change_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(rank_change_));
}

CCSUsrMsg_ServerRankUpdate_RankUpdate::~CCSUsrMsg_ServerRankUpdate_RankUpdate() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  SharedDtor();
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::SharedDtor() {
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ServerRankUpdate_RankUpdate::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[48].descriptor;
}

const CCSUsrMsg_ServerRankUpdate_RankUpdate& CCSUsrMsg_ServerRankUpdate_RankUpdate::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_ServerRankUpdate_RankUpdate* CCSUsrMsg_ServerRankUpdate_RankUpdate::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ServerRankUpdate_RankUpdate* n = new CCSUsrMsg_ServerRankUpdate_RankUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&account_id_, 0, reinterpret_cast<char*>(&rank_change_) -
      reinterpret_cast<char*>(&account_id_) + sizeof(rank_change_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ServerRankUpdate_RankUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 account_id = 1;
      case 1: {
        if (tag == 8u) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rank_old = 2;
      case 2: {
        if (tag == 16u) {
          set_has_rank_old();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_old_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rank_new = 3;
      case 3: {
        if (tag == 24u) {
          set_has_rank_new();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_new_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_wins = 4;
      case 4: {
        if (tag == 32u) {
          set_has_num_wins();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_wins_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float rank_change = 5;
      case 5: {
        if (tag == 45u) {
          set_has_rank_change();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rank_change_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  return false;
#undef DO_
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  // optional int32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->account_id(), output);
  }

  // optional int32 rank_old = 2;
  if (has_rank_old()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rank_old(), output);
  }

  // optional int32 rank_new = 3;
  if (has_rank_new()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rank_new(), output);
  }

  // optional int32 num_wins = 4;
  if (has_num_wins()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->num_wins(), output);
  }

  // optional float rank_change = 5;
  if (has_rank_change()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->rank_change(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ServerRankUpdate.RankUpdate)
}

::google::protobuf::uint8* CCSUsrMsg_ServerRankUpdate_RankUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  // optional int32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->account_id(), target);
  }

  // optional int32 rank_old = 2;
  if (has_rank_old()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rank_old(), target);
  }

  // optional int32 rank_new = 3;
  if (has_rank_new()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rank_new(), target);
  }

  // optional int32 num_wins = 4;
  if (has_num_wins()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->num_wins(), target);
  }

  // optional float rank_change = 5;
  if (has_rank_change()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->rank_change(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  return target;
}

size_t CCSUsrMsg_ServerRankUpdate_RankUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->account_id());
    }

    // optional int32 rank_old = 2;
    if (has_rank_old()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_old());
    }

    // optional int32 rank_new = 3;
    if (has_rank_new()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_new());
    }

    // optional int32 num_wins = 4;
    if (has_num_wins()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_wins());
    }

    // optional float rank_change = 5;
    if (has_rank_change()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ServerRankUpdate_RankUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ServerRankUpdate_RankUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ServerRankUpdate.RankUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ServerRankUpdate.RankUpdate)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::MergeFrom(const CCSUsrMsg_ServerRankUpdate_RankUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 31u) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_rank_old()) {
      set_rank_old(from.rank_old());
    }
    if (from.has_rank_new()) {
      set_rank_new(from.rank_new());
    }
    if (from.has_num_wins()) {
      set_num_wins(from.num_wins());
    }
    if (from.has_rank_change()) {
      set_rank_change(from.rank_change());
    }
  }
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::CopyFrom(const CCSUsrMsg_ServerRankUpdate_RankUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ServerRankUpdate_RankUpdate::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::Swap(CCSUsrMsg_ServerRankUpdate_RankUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::InternalSwap(CCSUsrMsg_ServerRankUpdate_RankUpdate* other) {
  std::swap(account_id_, other->account_id_);
  std::swap(rank_old_, other->rank_old_);
  std::swap(rank_new_, other->rank_new_);
  std::swap(num_wins_, other->num_wins_);
  std::swap(rank_change_, other->rank_change_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ServerRankUpdate_RankUpdate::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[48];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_ServerRankUpdate_RankUpdate

// optional int32 account_id = 1;
bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_account_id() {
  account_id_ = 0;
  clear_has_account_id();
}
::google::protobuf::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::account_id() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ServerRankUpdate.RankUpdate.account_id)
  return account_id_;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_account_id(::google::protobuf::int32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ServerRankUpdate.RankUpdate.account_id)
}

// optional int32 rank_old = 2;
bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_rank_old() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_has_rank_old() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_has_rank_old() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_rank_old() {
  rank_old_ = 0;
  clear_has_rank_old();
}
::google::protobuf::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::rank_old() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ServerRankUpdate.RankUpdate.rank_old)
  return rank_old_;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_rank_old(::google::protobuf::int32 value) {
  set_has_rank_old();
  rank_old_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ServerRankUpdate.RankUpdate.rank_old)
}

// optional int32 rank_new = 3;
bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_rank_new() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_has_rank_new() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_has_rank_new() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_rank_new() {
  rank_new_ = 0;
  clear_has_rank_new();
}
::google::protobuf::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::rank_new() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ServerRankUpdate.RankUpdate.rank_new)
  return rank_new_;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_rank_new(::google::protobuf::int32 value) {
  set_has_rank_new();
  rank_new_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ServerRankUpdate.RankUpdate.rank_new)
}

// optional int32 num_wins = 4;
bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_num_wins() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_has_num_wins() {
  _has_bits_[0] |= 0x00000008u;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_has_num_wins() {
  _has_bits_[0] &= ~0x00000008u;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_num_wins() {
  num_wins_ = 0;
  clear_has_num_wins();
}
::google::protobuf::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::num_wins() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ServerRankUpdate.RankUpdate.num_wins)
  return num_wins_;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_num_wins(::google::protobuf::int32 value) {
  set_has_num_wins();
  num_wins_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ServerRankUpdate.RankUpdate.num_wins)
}

// optional float rank_change = 5;
bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_rank_change() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_has_rank_change() {
  _has_bits_[0] |= 0x00000010u;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_has_rank_change() {
  _has_bits_[0] &= ~0x00000010u;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_rank_change() {
  rank_change_ = 0;
  clear_has_rank_change();
}
float CCSUsrMsg_ServerRankUpdate_RankUpdate::rank_change() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ServerRankUpdate.RankUpdate.rank_change)
  return rank_change_;
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_rank_change(float value) {
  set_has_rank_change();
  rank_change_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ServerRankUpdate.RankUpdate.rank_change)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ServerRankUpdate::kRankUpdateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ServerRankUpdate::CCSUsrMsg_ServerRankUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ServerRankUpdate)
}
CCSUsrMsg_ServerRankUpdate::CCSUsrMsg_ServerRankUpdate(const CCSUsrMsg_ServerRankUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      rank_update_(from.rank_update_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ServerRankUpdate)
}

void CCSUsrMsg_ServerRankUpdate::SharedCtor() {
  _cached_size_ = 0;
}

CCSUsrMsg_ServerRankUpdate::~CCSUsrMsg_ServerRankUpdate() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ServerRankUpdate)
  SharedDtor();
}

void CCSUsrMsg_ServerRankUpdate::SharedDtor() {
}

void CCSUsrMsg_ServerRankUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ServerRankUpdate::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[49].descriptor;
}

const CCSUsrMsg_ServerRankUpdate& CCSUsrMsg_ServerRankUpdate::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_ServerRankUpdate* CCSUsrMsg_ServerRankUpdate::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ServerRankUpdate* n = new CCSUsrMsg_ServerRankUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ServerRankUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ServerRankUpdate)
  rank_update_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ServerRankUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ServerRankUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CCSUsrMsg_ServerRankUpdate.RankUpdate rank_update = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rank_update()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ServerRankUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ServerRankUpdate)
  return false;
#undef DO_
}

void CCSUsrMsg_ServerRankUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ServerRankUpdate)
  // repeated .CCSUsrMsg_ServerRankUpdate.RankUpdate rank_update = 1;
  for (unsigned int i = 0, n = this->rank_update_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rank_update(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ServerRankUpdate)
}

::google::protobuf::uint8* CCSUsrMsg_ServerRankUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ServerRankUpdate)
  // repeated .CCSUsrMsg_ServerRankUpdate.RankUpdate rank_update = 1;
  for (unsigned int i = 0, n = this->rank_update_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->rank_update(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ServerRankUpdate)
  return target;
}

size_t CCSUsrMsg_ServerRankUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ServerRankUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .CCSUsrMsg_ServerRankUpdate.RankUpdate rank_update = 1;
  {
    unsigned int count = this->rank_update_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rank_update(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ServerRankUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ServerRankUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ServerRankUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ServerRankUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ServerRankUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ServerRankUpdate)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ServerRankUpdate::MergeFrom(const CCSUsrMsg_ServerRankUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ServerRankUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rank_update_.MergeFrom(from.rank_update_);
}

void CCSUsrMsg_ServerRankUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ServerRankUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ServerRankUpdate::CopyFrom(const CCSUsrMsg_ServerRankUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ServerRankUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ServerRankUpdate::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ServerRankUpdate::Swap(CCSUsrMsg_ServerRankUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ServerRankUpdate::InternalSwap(CCSUsrMsg_ServerRankUpdate* other) {
  rank_update_.UnsafeArenaSwap(&other->rank_update_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ServerRankUpdate::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[49];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_ServerRankUpdate

// repeated .CCSUsrMsg_ServerRankUpdate.RankUpdate rank_update = 1;
int CCSUsrMsg_ServerRankUpdate::rank_update_size() const {
  return rank_update_.size();
}
void CCSUsrMsg_ServerRankUpdate::clear_rank_update() {
  rank_update_.Clear();
}
const ::CCSUsrMsg_ServerRankUpdate_RankUpdate& CCSUsrMsg_ServerRankUpdate::rank_update(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ServerRankUpdate.rank_update)
  return rank_update_.Get(index);
}
::CCSUsrMsg_ServerRankUpdate_RankUpdate* CCSUsrMsg_ServerRankUpdate::mutable_rank_update(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_ServerRankUpdate.rank_update)
  return rank_update_.Mutable(index);
}
::CCSUsrMsg_ServerRankUpdate_RankUpdate* CCSUsrMsg_ServerRankUpdate::add_rank_update() {
  // @@protoc_insertion_point(field_add:CCSUsrMsg_ServerRankUpdate.rank_update)
  return rank_update_.Add();
}
::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ServerRankUpdate_RankUpdate >*
CCSUsrMsg_ServerRankUpdate::mutable_rank_update() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_ServerRankUpdate.rank_update)
  return &rank_update_;
}
const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ServerRankUpdate_RankUpdate >&
CCSUsrMsg_ServerRankUpdate::rank_update() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_ServerRankUpdate.rank_update)
  return rank_update_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_XpUpdate::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_XpUpdate::CCSUsrMsg_XpUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_XpUpdate)
}
CCSUsrMsg_XpUpdate::CCSUsrMsg_XpUpdate(const CCSUsrMsg_XpUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_XpUpdate)
}

void CCSUsrMsg_XpUpdate::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
}

CCSUsrMsg_XpUpdate::~CCSUsrMsg_XpUpdate() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_XpUpdate)
  SharedDtor();
}

void CCSUsrMsg_XpUpdate::SharedDtor() {
  if (this != internal_default_instance()) {
    delete data_;
  }
}

void CCSUsrMsg_XpUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_XpUpdate::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[50].descriptor;
}

const CCSUsrMsg_XpUpdate& CCSUsrMsg_XpUpdate::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_XpUpdate* CCSUsrMsg_XpUpdate::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_XpUpdate* n = new CCSUsrMsg_XpUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_XpUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_XpUpdate)
  if (has_data()) {
    GOOGLE_DCHECK(data_ != NULL);
    data_->::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_XpUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_XpUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded data = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_XpUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_XpUpdate)
  return false;
#undef DO_
}

void CCSUsrMsg_XpUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_XpUpdate)
  // optional .CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_XpUpdate)
}

::google::protobuf::uint8* CCSUsrMsg_XpUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_XpUpdate)
  // optional .CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->data_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_XpUpdate)
  return target;
}

size_t CCSUsrMsg_XpUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_XpUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_XpUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_XpUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_XpUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_XpUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_XpUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_XpUpdate)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_XpUpdate::MergeFrom(const CCSUsrMsg_XpUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_XpUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    mutable_data()->::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::MergeFrom(from.data());
  }
}

void CCSUsrMsg_XpUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_XpUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_XpUpdate::CopyFrom(const CCSUsrMsg_XpUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_XpUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_XpUpdate::IsInitialized() const {
  return true;
}

void CCSUsrMsg_XpUpdate::Swap(CCSUsrMsg_XpUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_XpUpdate::InternalSwap(CCSUsrMsg_XpUpdate* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_XpUpdate::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[50];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_XpUpdate

// optional .CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded data = 1;
bool CCSUsrMsg_XpUpdate::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_XpUpdate::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_XpUpdate::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_XpUpdate::clear_data() {
  if (data_ != NULL) data_->::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::Clear();
  clear_has_data();
}
const ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& CCSUsrMsg_XpUpdate::data() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_XpUpdate.data)
  return data_ != NULL ? *data_
                         : *::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::internal_default_instance();
}
::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* CCSUsrMsg_XpUpdate::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded;
  }
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_XpUpdate.data)
  return data_;
}
::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* CCSUsrMsg_XpUpdate::release_data() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_XpUpdate.data)
  clear_has_data();
  ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* temp = data_;
  data_ = NULL;
  return temp;
}
void CCSUsrMsg_XpUpdate::set_allocated_data(::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_XpUpdate.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ItemPickup::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ItemPickup::CCSUsrMsg_ItemPickup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ItemPickup)
}
CCSUsrMsg_ItemPickup::CCSUsrMsg_ItemPickup(const CCSUsrMsg_ItemPickup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_item()) {
    item_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_);
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ItemPickup)
}

void CCSUsrMsg_ItemPickup::SharedCtor() {
  _cached_size_ = 0;
  item_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCSUsrMsg_ItemPickup::~CCSUsrMsg_ItemPickup() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ItemPickup)
  SharedDtor();
}

void CCSUsrMsg_ItemPickup::SharedDtor() {
  item_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_ItemPickup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ItemPickup::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[51].descriptor;
}

const CCSUsrMsg_ItemPickup& CCSUsrMsg_ItemPickup::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_ItemPickup* CCSUsrMsg_ItemPickup::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ItemPickup* n = new CCSUsrMsg_ItemPickup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ItemPickup::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ItemPickup)
  if (has_item()) {
    GOOGLE_DCHECK(!item_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*item_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ItemPickup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ItemPickup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item().data(), this->item().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_ItemPickup.item");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ItemPickup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ItemPickup)
  return false;
#undef DO_
}

void CCSUsrMsg_ItemPickup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ItemPickup)
  // optional string item = 1;
  if (has_item()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item().data(), this->item().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_ItemPickup.item");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ItemPickup)
}

::google::protobuf::uint8* CCSUsrMsg_ItemPickup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ItemPickup)
  // optional string item = 1;
  if (has_item()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item().data(), this->item().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_ItemPickup.item");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ItemPickup)
  return target;
}

size_t CCSUsrMsg_ItemPickup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ItemPickup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string item = 1;
  if (has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ItemPickup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ItemPickup)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ItemPickup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ItemPickup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ItemPickup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ItemPickup)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ItemPickup::MergeFrom(const CCSUsrMsg_ItemPickup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ItemPickup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_item()) {
    set_has_item();
    item_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_);
  }
}

void CCSUsrMsg_ItemPickup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ItemPickup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ItemPickup::CopyFrom(const CCSUsrMsg_ItemPickup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ItemPickup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ItemPickup::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ItemPickup::Swap(CCSUsrMsg_ItemPickup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ItemPickup::InternalSwap(CCSUsrMsg_ItemPickup* other) {
  item_.Swap(&other->item_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ItemPickup::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[51];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_ItemPickup

// optional string item = 1;
bool CCSUsrMsg_ItemPickup::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_ItemPickup::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_ItemPickup::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_ItemPickup::clear_item() {
  item_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item();
}
const ::std::string& CCSUsrMsg_ItemPickup::item() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ItemPickup.item)
  return item_.GetNoArena();
}
void CCSUsrMsg_ItemPickup::set_item(const ::std::string& value) {
  set_has_item();
  item_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ItemPickup.item)
}
#if LANG_CXX11
void CCSUsrMsg_ItemPickup::set_item(::std::string&& value) {
  set_has_item();
  item_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_ItemPickup.item)
}
#endif
void CCSUsrMsg_ItemPickup::set_item(const char* value) {
  set_has_item();
  item_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_ItemPickup.item)
}
void CCSUsrMsg_ItemPickup::set_item(const char* value, size_t size) {
  set_has_item();
  item_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_ItemPickup.item)
}
::std::string* CCSUsrMsg_ItemPickup::mutable_item() {
  set_has_item();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_ItemPickup.item)
  return item_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_ItemPickup::release_item() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_ItemPickup.item)
  clear_has_item();
  return item_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_ItemPickup::set_allocated_item(::std::string* item) {
  if (item != NULL) {
    set_has_item();
  } else {
    clear_has_item();
  }
  item_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_ItemPickup.item)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ShowMenu::kBitsValidSlotsFieldNumber;
const int CCSUsrMsg_ShowMenu::kDisplayTimeFieldNumber;
const int CCSUsrMsg_ShowMenu::kMenuStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ShowMenu::CCSUsrMsg_ShowMenu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ShowMenu)
}
CCSUsrMsg_ShowMenu::CCSUsrMsg_ShowMenu(const CCSUsrMsg_ShowMenu& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  menu_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_menu_string()) {
    menu_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.menu_string_);
  }
  ::memcpy(&bits_valid_slots_, &from.bits_valid_slots_,
    reinterpret_cast<char*>(&display_time_) -
    reinterpret_cast<char*>(&bits_valid_slots_) + sizeof(display_time_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ShowMenu)
}

void CCSUsrMsg_ShowMenu::SharedCtor() {
  _cached_size_ = 0;
  menu_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bits_valid_slots_, 0, reinterpret_cast<char*>(&display_time_) -
    reinterpret_cast<char*>(&bits_valid_slots_) + sizeof(display_time_));
}

CCSUsrMsg_ShowMenu::~CCSUsrMsg_ShowMenu() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ShowMenu)
  SharedDtor();
}

void CCSUsrMsg_ShowMenu::SharedDtor() {
  menu_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_ShowMenu::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ShowMenu::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[52].descriptor;
}

const CCSUsrMsg_ShowMenu& CCSUsrMsg_ShowMenu::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_ShowMenu* CCSUsrMsg_ShowMenu::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ShowMenu* n = new CCSUsrMsg_ShowMenu;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ShowMenu::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ShowMenu)
  if (has_menu_string()) {
    GOOGLE_DCHECK(!menu_string_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*menu_string_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&bits_valid_slots_, 0, reinterpret_cast<char*>(&display_time_) -
      reinterpret_cast<char*>(&bits_valid_slots_) + sizeof(display_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ShowMenu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ShowMenu)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bits_valid_slots = 1;
      case 1: {
        if (tag == 8u) {
          set_has_bits_valid_slots();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bits_valid_slots_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 display_time = 2;
      case 2: {
        if (tag == 16u) {
          set_has_display_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &display_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string menu_string = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_menu_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->menu_string().data(), this->menu_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_ShowMenu.menu_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ShowMenu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ShowMenu)
  return false;
#undef DO_
}

void CCSUsrMsg_ShowMenu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ShowMenu)
  // optional int32 bits_valid_slots = 1;
  if (has_bits_valid_slots()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bits_valid_slots(), output);
  }

  // optional int32 display_time = 2;
  if (has_display_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->display_time(), output);
  }

  // optional string menu_string = 3;
  if (has_menu_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->menu_string().data(), this->menu_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_ShowMenu.menu_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->menu_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ShowMenu)
}

::google::protobuf::uint8* CCSUsrMsg_ShowMenu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ShowMenu)
  // optional int32 bits_valid_slots = 1;
  if (has_bits_valid_slots()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bits_valid_slots(), target);
  }

  // optional int32 display_time = 2;
  if (has_display_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->display_time(), target);
  }

  // optional string menu_string = 3;
  if (has_menu_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->menu_string().data(), this->menu_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_ShowMenu.menu_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->menu_string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ShowMenu)
  return target;
}

size_t CCSUsrMsg_ShowMenu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ShowMenu)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string menu_string = 3;
    if (has_menu_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->menu_string());
    }

    // optional int32 bits_valid_slots = 1;
    if (has_bits_valid_slots()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bits_valid_slots());
    }

    // optional int32 display_time = 2;
    if (has_display_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->display_time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ShowMenu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ShowMenu)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ShowMenu* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ShowMenu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ShowMenu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ShowMenu)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ShowMenu::MergeFrom(const CCSUsrMsg_ShowMenu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ShowMenu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_menu_string()) {
      set_has_menu_string();
      menu_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.menu_string_);
    }
    if (from.has_bits_valid_slots()) {
      set_bits_valid_slots(from.bits_valid_slots());
    }
    if (from.has_display_time()) {
      set_display_time(from.display_time());
    }
  }
}

void CCSUsrMsg_ShowMenu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ShowMenu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ShowMenu::CopyFrom(const CCSUsrMsg_ShowMenu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ShowMenu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ShowMenu::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ShowMenu::Swap(CCSUsrMsg_ShowMenu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ShowMenu::InternalSwap(CCSUsrMsg_ShowMenu* other) {
  menu_string_.Swap(&other->menu_string_);
  std::swap(bits_valid_slots_, other->bits_valid_slots_);
  std::swap(display_time_, other->display_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ShowMenu::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[52];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_ShowMenu

// optional int32 bits_valid_slots = 1;
bool CCSUsrMsg_ShowMenu::has_bits_valid_slots() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_ShowMenu::set_has_bits_valid_slots() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_ShowMenu::clear_has_bits_valid_slots() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_ShowMenu::clear_bits_valid_slots() {
  bits_valid_slots_ = 0;
  clear_has_bits_valid_slots();
}
::google::protobuf::int32 CCSUsrMsg_ShowMenu::bits_valid_slots() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ShowMenu.bits_valid_slots)
  return bits_valid_slots_;
}
void CCSUsrMsg_ShowMenu::set_bits_valid_slots(::google::protobuf::int32 value) {
  set_has_bits_valid_slots();
  bits_valid_slots_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ShowMenu.bits_valid_slots)
}

// optional int32 display_time = 2;
bool CCSUsrMsg_ShowMenu::has_display_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_ShowMenu::set_has_display_time() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_ShowMenu::clear_has_display_time() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_ShowMenu::clear_display_time() {
  display_time_ = 0;
  clear_has_display_time();
}
::google::protobuf::int32 CCSUsrMsg_ShowMenu::display_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ShowMenu.display_time)
  return display_time_;
}
void CCSUsrMsg_ShowMenu::set_display_time(::google::protobuf::int32 value) {
  set_has_display_time();
  display_time_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ShowMenu.display_time)
}

// optional string menu_string = 3;
bool CCSUsrMsg_ShowMenu::has_menu_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_ShowMenu::set_has_menu_string() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_ShowMenu::clear_has_menu_string() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_ShowMenu::clear_menu_string() {
  menu_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_menu_string();
}
const ::std::string& CCSUsrMsg_ShowMenu::menu_string() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ShowMenu.menu_string)
  return menu_string_.GetNoArena();
}
void CCSUsrMsg_ShowMenu::set_menu_string(const ::std::string& value) {
  set_has_menu_string();
  menu_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ShowMenu.menu_string)
}
#if LANG_CXX11
void CCSUsrMsg_ShowMenu::set_menu_string(::std::string&& value) {
  set_has_menu_string();
  menu_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_ShowMenu.menu_string)
}
#endif
void CCSUsrMsg_ShowMenu::set_menu_string(const char* value) {
  set_has_menu_string();
  menu_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_ShowMenu.menu_string)
}
void CCSUsrMsg_ShowMenu::set_menu_string(const char* value, size_t size) {
  set_has_menu_string();
  menu_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_ShowMenu.menu_string)
}
::std::string* CCSUsrMsg_ShowMenu::mutable_menu_string() {
  set_has_menu_string();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_ShowMenu.menu_string)
  return menu_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_ShowMenu::release_menu_string() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_ShowMenu.menu_string)
  clear_has_menu_string();
  return menu_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_ShowMenu::set_allocated_menu_string(::std::string* menu_string) {
  if (menu_string != NULL) {
    set_has_menu_string();
  } else {
    clear_has_menu_string();
  }
  menu_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), menu_string);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_ShowMenu.menu_string)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_BarTime::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_BarTime::CCSUsrMsg_BarTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_BarTime)
}
CCSUsrMsg_BarTime::CCSUsrMsg_BarTime(const CCSUsrMsg_BarTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_time()) {
    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_BarTime)
}

void CCSUsrMsg_BarTime::SharedCtor() {
  _cached_size_ = 0;
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCSUsrMsg_BarTime::~CCSUsrMsg_BarTime() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_BarTime)
  SharedDtor();
}

void CCSUsrMsg_BarTime::SharedDtor() {
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_BarTime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_BarTime::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[53].descriptor;
}

const CCSUsrMsg_BarTime& CCSUsrMsg_BarTime::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_BarTime* CCSUsrMsg_BarTime::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_BarTime* n = new CCSUsrMsg_BarTime;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_BarTime::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_BarTime)
  if (has_time()) {
    GOOGLE_DCHECK(!time_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*time_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_BarTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_BarTime)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string time = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->time().data(), this->time().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_BarTime.time");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_BarTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_BarTime)
  return false;
#undef DO_
}

void CCSUsrMsg_BarTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_BarTime)
  // optional string time = 1;
  if (has_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_BarTime.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_BarTime)
}

::google::protobuf::uint8* CCSUsrMsg_BarTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_BarTime)
  // optional string time = 1;
  if (has_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_BarTime.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_BarTime)
  return target;
}

size_t CCSUsrMsg_BarTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_BarTime)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string time = 1;
  if (has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_BarTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_BarTime)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_BarTime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_BarTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_BarTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_BarTime)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_BarTime::MergeFrom(const CCSUsrMsg_BarTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_BarTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_time()) {
    set_has_time();
    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
}

void CCSUsrMsg_BarTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_BarTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_BarTime::CopyFrom(const CCSUsrMsg_BarTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_BarTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_BarTime::IsInitialized() const {
  return true;
}

void CCSUsrMsg_BarTime::Swap(CCSUsrMsg_BarTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_BarTime::InternalSwap(CCSUsrMsg_BarTime* other) {
  time_.Swap(&other->time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_BarTime::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[53];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_BarTime

// optional string time = 1;
bool CCSUsrMsg_BarTime::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_BarTime::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_BarTime::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_BarTime::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_time();
}
const ::std::string& CCSUsrMsg_BarTime::time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_BarTime.time)
  return time_.GetNoArena();
}
void CCSUsrMsg_BarTime::set_time(const ::std::string& value) {
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_BarTime.time)
}
#if LANG_CXX11
void CCSUsrMsg_BarTime::set_time(::std::string&& value) {
  set_has_time();
  time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_BarTime.time)
}
#endif
void CCSUsrMsg_BarTime::set_time(const char* value) {
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_BarTime.time)
}
void CCSUsrMsg_BarTime::set_time(const char* value, size_t size) {
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_BarTime.time)
}
::std::string* CCSUsrMsg_BarTime::mutable_time() {
  set_has_time();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_BarTime.time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_BarTime::release_time() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_BarTime.time)
  clear_has_time();
  return time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_BarTime::set_allocated_time(::std::string* time) {
  if (time != NULL) {
    set_has_time();
  } else {
    clear_has_time();
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_BarTime.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_AmmoDenied::kAmmoIdxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_AmmoDenied::CCSUsrMsg_AmmoDenied()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_AmmoDenied)
}
CCSUsrMsg_AmmoDenied::CCSUsrMsg_AmmoDenied(const CCSUsrMsg_AmmoDenied& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ammoidx_ = from.ammoidx_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_AmmoDenied)
}

void CCSUsrMsg_AmmoDenied::SharedCtor() {
  _cached_size_ = 0;
  ammoidx_ = 0;
}

CCSUsrMsg_AmmoDenied::~CCSUsrMsg_AmmoDenied() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_AmmoDenied)
  SharedDtor();
}

void CCSUsrMsg_AmmoDenied::SharedDtor() {
}

void CCSUsrMsg_AmmoDenied::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_AmmoDenied::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[54].descriptor;
}

const CCSUsrMsg_AmmoDenied& CCSUsrMsg_AmmoDenied::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_AmmoDenied* CCSUsrMsg_AmmoDenied::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_AmmoDenied* n = new CCSUsrMsg_AmmoDenied;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_AmmoDenied::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_AmmoDenied)
  ammoidx_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_AmmoDenied::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_AmmoDenied)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ammoIdx = 1;
      case 1: {
        if (tag == 8u) {
          set_has_ammoidx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ammoidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_AmmoDenied)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_AmmoDenied)
  return false;
#undef DO_
}

void CCSUsrMsg_AmmoDenied::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_AmmoDenied)
  // optional int32 ammoIdx = 1;
  if (has_ammoidx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ammoidx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_AmmoDenied)
}

::google::protobuf::uint8* CCSUsrMsg_AmmoDenied::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_AmmoDenied)
  // optional int32 ammoIdx = 1;
  if (has_ammoidx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ammoidx(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_AmmoDenied)
  return target;
}

size_t CCSUsrMsg_AmmoDenied::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_AmmoDenied)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 ammoIdx = 1;
  if (has_ammoidx()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ammoidx());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_AmmoDenied::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_AmmoDenied)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_AmmoDenied* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_AmmoDenied>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_AmmoDenied)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_AmmoDenied)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_AmmoDenied::MergeFrom(const CCSUsrMsg_AmmoDenied& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_AmmoDenied)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ammoidx()) {
    set_ammoidx(from.ammoidx());
  }
}

void CCSUsrMsg_AmmoDenied::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_AmmoDenied)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_AmmoDenied::CopyFrom(const CCSUsrMsg_AmmoDenied& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_AmmoDenied)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_AmmoDenied::IsInitialized() const {
  return true;
}

void CCSUsrMsg_AmmoDenied::Swap(CCSUsrMsg_AmmoDenied* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_AmmoDenied::InternalSwap(CCSUsrMsg_AmmoDenied* other) {
  std::swap(ammoidx_, other->ammoidx_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_AmmoDenied::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[54];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_AmmoDenied

// optional int32 ammoIdx = 1;
bool CCSUsrMsg_AmmoDenied::has_ammoidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_AmmoDenied::set_has_ammoidx() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_AmmoDenied::clear_has_ammoidx() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_AmmoDenied::clear_ammoidx() {
  ammoidx_ = 0;
  clear_has_ammoidx();
}
::google::protobuf::int32 CCSUsrMsg_AmmoDenied::ammoidx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_AmmoDenied.ammoIdx)
  return ammoidx_;
}
void CCSUsrMsg_AmmoDenied::set_ammoidx(::google::protobuf::int32 value) {
  set_has_ammoidx();
  ammoidx_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_AmmoDenied.ammoIdx)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_MarkAchievement::kAchievementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_MarkAchievement::CCSUsrMsg_MarkAchievement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_MarkAchievement)
}
CCSUsrMsg_MarkAchievement::CCSUsrMsg_MarkAchievement(const CCSUsrMsg_MarkAchievement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  achievement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_achievement()) {
    achievement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.achievement_);
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_MarkAchievement)
}

void CCSUsrMsg_MarkAchievement::SharedCtor() {
  _cached_size_ = 0;
  achievement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCSUsrMsg_MarkAchievement::~CCSUsrMsg_MarkAchievement() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_MarkAchievement)
  SharedDtor();
}

void CCSUsrMsg_MarkAchievement::SharedDtor() {
  achievement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_MarkAchievement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_MarkAchievement::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[55].descriptor;
}

const CCSUsrMsg_MarkAchievement& CCSUsrMsg_MarkAchievement::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_MarkAchievement* CCSUsrMsg_MarkAchievement::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_MarkAchievement* n = new CCSUsrMsg_MarkAchievement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_MarkAchievement::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_MarkAchievement)
  if (has_achievement()) {
    GOOGLE_DCHECK(!achievement_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*achievement_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_MarkAchievement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_MarkAchievement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string achievement = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_achievement()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->achievement().data(), this->achievement().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_MarkAchievement.achievement");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_MarkAchievement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_MarkAchievement)
  return false;
#undef DO_
}

void CCSUsrMsg_MarkAchievement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_MarkAchievement)
  // optional string achievement = 1;
  if (has_achievement()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->achievement().data(), this->achievement().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_MarkAchievement.achievement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->achievement(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_MarkAchievement)
}

::google::protobuf::uint8* CCSUsrMsg_MarkAchievement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_MarkAchievement)
  // optional string achievement = 1;
  if (has_achievement()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->achievement().data(), this->achievement().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_MarkAchievement.achievement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->achievement(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_MarkAchievement)
  return target;
}

size_t CCSUsrMsg_MarkAchievement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_MarkAchievement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string achievement = 1;
  if (has_achievement()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->achievement());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_MarkAchievement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_MarkAchievement)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_MarkAchievement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_MarkAchievement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_MarkAchievement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_MarkAchievement)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_MarkAchievement::MergeFrom(const CCSUsrMsg_MarkAchievement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_MarkAchievement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_achievement()) {
    set_has_achievement();
    achievement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.achievement_);
  }
}

void CCSUsrMsg_MarkAchievement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_MarkAchievement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_MarkAchievement::CopyFrom(const CCSUsrMsg_MarkAchievement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_MarkAchievement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_MarkAchievement::IsInitialized() const {
  return true;
}

void CCSUsrMsg_MarkAchievement::Swap(CCSUsrMsg_MarkAchievement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_MarkAchievement::InternalSwap(CCSUsrMsg_MarkAchievement* other) {
  achievement_.Swap(&other->achievement_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_MarkAchievement::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[55];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_MarkAchievement

// optional string achievement = 1;
bool CCSUsrMsg_MarkAchievement::has_achievement() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_MarkAchievement::set_has_achievement() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_MarkAchievement::clear_has_achievement() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_MarkAchievement::clear_achievement() {
  achievement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_achievement();
}
const ::std::string& CCSUsrMsg_MarkAchievement::achievement() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_MarkAchievement.achievement)
  return achievement_.GetNoArena();
}
void CCSUsrMsg_MarkAchievement::set_achievement(const ::std::string& value) {
  set_has_achievement();
  achievement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_MarkAchievement.achievement)
}
#if LANG_CXX11
void CCSUsrMsg_MarkAchievement::set_achievement(::std::string&& value) {
  set_has_achievement();
  achievement_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_MarkAchievement.achievement)
}
#endif
void CCSUsrMsg_MarkAchievement::set_achievement(const char* value) {
  set_has_achievement();
  achievement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_MarkAchievement.achievement)
}
void CCSUsrMsg_MarkAchievement::set_achievement(const char* value, size_t size) {
  set_has_achievement();
  achievement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_MarkAchievement.achievement)
}
::std::string* CCSUsrMsg_MarkAchievement::mutable_achievement() {
  set_has_achievement();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_MarkAchievement.achievement)
  return achievement_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_MarkAchievement::release_achievement() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_MarkAchievement.achievement)
  clear_has_achievement();
  return achievement_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_MarkAchievement::set_allocated_achievement(::std::string* achievement) {
  if (achievement != NULL) {
    set_has_achievement();
  } else {
    clear_has_achievement();
  }
  achievement_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), achievement);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_MarkAchievement.achievement)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_MatchStatsUpdate::kUpdateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_MatchStatsUpdate::CCSUsrMsg_MatchStatsUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_MatchStatsUpdate)
}
CCSUsrMsg_MatchStatsUpdate::CCSUsrMsg_MatchStatsUpdate(const CCSUsrMsg_MatchStatsUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  update_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_update()) {
    update_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.update_);
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_MatchStatsUpdate)
}

void CCSUsrMsg_MatchStatsUpdate::SharedCtor() {
  _cached_size_ = 0;
  update_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCSUsrMsg_MatchStatsUpdate::~CCSUsrMsg_MatchStatsUpdate() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_MatchStatsUpdate)
  SharedDtor();
}

void CCSUsrMsg_MatchStatsUpdate::SharedDtor() {
  update_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_MatchStatsUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_MatchStatsUpdate::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[56].descriptor;
}

const CCSUsrMsg_MatchStatsUpdate& CCSUsrMsg_MatchStatsUpdate::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_MatchStatsUpdate* CCSUsrMsg_MatchStatsUpdate::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_MatchStatsUpdate* n = new CCSUsrMsg_MatchStatsUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_MatchStatsUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_MatchStatsUpdate)
  if (has_update()) {
    GOOGLE_DCHECK(!update_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*update_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_MatchStatsUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_MatchStatsUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string update = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_update()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->update().data(), this->update().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_MatchStatsUpdate.update");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_MatchStatsUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_MatchStatsUpdate)
  return false;
#undef DO_
}

void CCSUsrMsg_MatchStatsUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_MatchStatsUpdate)
  // optional string update = 1;
  if (has_update()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->update().data(), this->update().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_MatchStatsUpdate.update");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->update(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_MatchStatsUpdate)
}

::google::protobuf::uint8* CCSUsrMsg_MatchStatsUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_MatchStatsUpdate)
  // optional string update = 1;
  if (has_update()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->update().data(), this->update().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_MatchStatsUpdate.update");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->update(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_MatchStatsUpdate)
  return target;
}

size_t CCSUsrMsg_MatchStatsUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_MatchStatsUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string update = 1;
  if (has_update()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->update());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_MatchStatsUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_MatchStatsUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_MatchStatsUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_MatchStatsUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_MatchStatsUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_MatchStatsUpdate)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_MatchStatsUpdate::MergeFrom(const CCSUsrMsg_MatchStatsUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_MatchStatsUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_update()) {
    set_has_update();
    update_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.update_);
  }
}

void CCSUsrMsg_MatchStatsUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_MatchStatsUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_MatchStatsUpdate::CopyFrom(const CCSUsrMsg_MatchStatsUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_MatchStatsUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_MatchStatsUpdate::IsInitialized() const {
  return true;
}

void CCSUsrMsg_MatchStatsUpdate::Swap(CCSUsrMsg_MatchStatsUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_MatchStatsUpdate::InternalSwap(CCSUsrMsg_MatchStatsUpdate* other) {
  update_.Swap(&other->update_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_MatchStatsUpdate::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[56];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_MatchStatsUpdate

// optional string update = 1;
bool CCSUsrMsg_MatchStatsUpdate::has_update() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_MatchStatsUpdate::set_has_update() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_MatchStatsUpdate::clear_has_update() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_MatchStatsUpdate::clear_update() {
  update_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_update();
}
const ::std::string& CCSUsrMsg_MatchStatsUpdate::update() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_MatchStatsUpdate.update)
  return update_.GetNoArena();
}
void CCSUsrMsg_MatchStatsUpdate::set_update(const ::std::string& value) {
  set_has_update();
  update_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_MatchStatsUpdate.update)
}
#if LANG_CXX11
void CCSUsrMsg_MatchStatsUpdate::set_update(::std::string&& value) {
  set_has_update();
  update_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_MatchStatsUpdate.update)
}
#endif
void CCSUsrMsg_MatchStatsUpdate::set_update(const char* value) {
  set_has_update();
  update_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_MatchStatsUpdate.update)
}
void CCSUsrMsg_MatchStatsUpdate::set_update(const char* value, size_t size) {
  set_has_update();
  update_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_MatchStatsUpdate.update)
}
::std::string* CCSUsrMsg_MatchStatsUpdate::mutable_update() {
  set_has_update();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_MatchStatsUpdate.update)
  return update_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_MatchStatsUpdate::release_update() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_MatchStatsUpdate.update)
  clear_has_update();
  return update_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_MatchStatsUpdate::set_allocated_update(::std::string* update) {
  if (update != NULL) {
    set_has_update();
  } else {
    clear_has_update();
  }
  update_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), update);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_MatchStatsUpdate.update)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ItemDrop::kItemidFieldNumber;
const int CCSUsrMsg_ItemDrop::kDeathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ItemDrop::CCSUsrMsg_ItemDrop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ItemDrop)
}
CCSUsrMsg_ItemDrop::CCSUsrMsg_ItemDrop(const CCSUsrMsg_ItemDrop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&itemid_, &from.itemid_,
    reinterpret_cast<char*>(&death_) -
    reinterpret_cast<char*>(&itemid_) + sizeof(death_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ItemDrop)
}

void CCSUsrMsg_ItemDrop::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&itemid_, 0, reinterpret_cast<char*>(&death_) -
    reinterpret_cast<char*>(&itemid_) + sizeof(death_));
}

CCSUsrMsg_ItemDrop::~CCSUsrMsg_ItemDrop() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ItemDrop)
  SharedDtor();
}

void CCSUsrMsg_ItemDrop::SharedDtor() {
}

void CCSUsrMsg_ItemDrop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ItemDrop::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[57].descriptor;
}

const CCSUsrMsg_ItemDrop& CCSUsrMsg_ItemDrop::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_ItemDrop* CCSUsrMsg_ItemDrop::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ItemDrop* n = new CCSUsrMsg_ItemDrop;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ItemDrop::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ItemDrop)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&itemid_, 0, reinterpret_cast<char*>(&death_) -
      reinterpret_cast<char*>(&itemid_) + sizeof(death_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ItemDrop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ItemDrop)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 itemid = 1;
      case 1: {
        if (tag == 8u) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool death = 2;
      case 2: {
        if (tag == 16u) {
          set_has_death();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &death_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ItemDrop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ItemDrop)
  return false;
#undef DO_
}

void CCSUsrMsg_ItemDrop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ItemDrop)
  // optional int64 itemid = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->itemid(), output);
  }

  // optional bool death = 2;
  if (has_death()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->death(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ItemDrop)
}

::google::protobuf::uint8* CCSUsrMsg_ItemDrop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ItemDrop)
  // optional int64 itemid = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->itemid(), target);
  }

  // optional bool death = 2;
  if (has_death()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->death(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ItemDrop)
  return target;
}

size_t CCSUsrMsg_ItemDrop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ItemDrop)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 itemid = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

    // optional bool death = 2;
    if (has_death()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ItemDrop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ItemDrop)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ItemDrop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ItemDrop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ItemDrop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ItemDrop)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ItemDrop::MergeFrom(const CCSUsrMsg_ItemDrop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ItemDrop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_death()) {
      set_death(from.death());
    }
  }
}

void CCSUsrMsg_ItemDrop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ItemDrop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ItemDrop::CopyFrom(const CCSUsrMsg_ItemDrop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ItemDrop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ItemDrop::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ItemDrop::Swap(CCSUsrMsg_ItemDrop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ItemDrop::InternalSwap(CCSUsrMsg_ItemDrop* other) {
  std::swap(itemid_, other->itemid_);
  std::swap(death_, other->death_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ItemDrop::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[57];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_ItemDrop

// optional int64 itemid = 1;
bool CCSUsrMsg_ItemDrop::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_ItemDrop::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_ItemDrop::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_ItemDrop::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(0);
  clear_has_itemid();
}
::google::protobuf::int64 CCSUsrMsg_ItemDrop::itemid() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ItemDrop.itemid)
  return itemid_;
}
void CCSUsrMsg_ItemDrop::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ItemDrop.itemid)
}

// optional bool death = 2;
bool CCSUsrMsg_ItemDrop::has_death() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_ItemDrop::set_has_death() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_ItemDrop::clear_has_death() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_ItemDrop::clear_death() {
  death_ = false;
  clear_has_death();
}
bool CCSUsrMsg_ItemDrop::death() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ItemDrop.death)
  return death_;
}
void CCSUsrMsg_ItemDrop::set_death(bool value) {
  set_has_death();
  death_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ItemDrop.death)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_GlowPropTurnOff::kEntidxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_GlowPropTurnOff::CCSUsrMsg_GlowPropTurnOff()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_GlowPropTurnOff)
}
CCSUsrMsg_GlowPropTurnOff::CCSUsrMsg_GlowPropTurnOff(const CCSUsrMsg_GlowPropTurnOff& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entidx_ = from.entidx_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_GlowPropTurnOff)
}

void CCSUsrMsg_GlowPropTurnOff::SharedCtor() {
  _cached_size_ = 0;
  entidx_ = 0;
}

CCSUsrMsg_GlowPropTurnOff::~CCSUsrMsg_GlowPropTurnOff() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_GlowPropTurnOff)
  SharedDtor();
}

void CCSUsrMsg_GlowPropTurnOff::SharedDtor() {
}

void CCSUsrMsg_GlowPropTurnOff::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_GlowPropTurnOff::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[58].descriptor;
}

const CCSUsrMsg_GlowPropTurnOff& CCSUsrMsg_GlowPropTurnOff::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_GlowPropTurnOff* CCSUsrMsg_GlowPropTurnOff::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_GlowPropTurnOff* n = new CCSUsrMsg_GlowPropTurnOff;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_GlowPropTurnOff::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_GlowPropTurnOff)
  entidx_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_GlowPropTurnOff::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_GlowPropTurnOff)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 entidx = 1;
      case 1: {
        if (tag == 8u) {
          set_has_entidx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_GlowPropTurnOff)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_GlowPropTurnOff)
  return false;
#undef DO_
}

void CCSUsrMsg_GlowPropTurnOff::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_GlowPropTurnOff)
  // optional int32 entidx = 1;
  if (has_entidx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entidx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_GlowPropTurnOff)
}

::google::protobuf::uint8* CCSUsrMsg_GlowPropTurnOff::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_GlowPropTurnOff)
  // optional int32 entidx = 1;
  if (has_entidx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entidx(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_GlowPropTurnOff)
  return target;
}

size_t CCSUsrMsg_GlowPropTurnOff::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_GlowPropTurnOff)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 entidx = 1;
  if (has_entidx()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->entidx());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_GlowPropTurnOff::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_GlowPropTurnOff)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_GlowPropTurnOff* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_GlowPropTurnOff>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_GlowPropTurnOff)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_GlowPropTurnOff)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_GlowPropTurnOff::MergeFrom(const CCSUsrMsg_GlowPropTurnOff& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_GlowPropTurnOff)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_entidx()) {
    set_entidx(from.entidx());
  }
}

void CCSUsrMsg_GlowPropTurnOff::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_GlowPropTurnOff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_GlowPropTurnOff::CopyFrom(const CCSUsrMsg_GlowPropTurnOff& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_GlowPropTurnOff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_GlowPropTurnOff::IsInitialized() const {
  return true;
}

void CCSUsrMsg_GlowPropTurnOff::Swap(CCSUsrMsg_GlowPropTurnOff* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_GlowPropTurnOff::InternalSwap(CCSUsrMsg_GlowPropTurnOff* other) {
  std::swap(entidx_, other->entidx_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_GlowPropTurnOff::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[58];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_GlowPropTurnOff

// optional int32 entidx = 1;
bool CCSUsrMsg_GlowPropTurnOff::has_entidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_GlowPropTurnOff::set_has_entidx() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_GlowPropTurnOff::clear_has_entidx() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_GlowPropTurnOff::clear_entidx() {
  entidx_ = 0;
  clear_has_entidx();
}
::google::protobuf::int32 CCSUsrMsg_GlowPropTurnOff::entidx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_GlowPropTurnOff.entidx)
  return entidx_;
}
void CCSUsrMsg_GlowPropTurnOff::set_entidx(::google::protobuf::int32 value) {
  set_has_entidx();
  entidx_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_GlowPropTurnOff.entidx)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_RoundBackupFilenames::kCountFieldNumber;
const int CCSUsrMsg_RoundBackupFilenames::kIndexFieldNumber;
const int CCSUsrMsg_RoundBackupFilenames::kFilenameFieldNumber;
const int CCSUsrMsg_RoundBackupFilenames::kNicenameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_RoundBackupFilenames::CCSUsrMsg_RoundBackupFilenames()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_RoundBackupFilenames)
}
CCSUsrMsg_RoundBackupFilenames::CCSUsrMsg_RoundBackupFilenames(const CCSUsrMsg_RoundBackupFilenames& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  nicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nicename()) {
    nicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nicename_);
  }
  ::memcpy(&count_, &from.count_,
    reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&count_) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_RoundBackupFilenames)
}

void CCSUsrMsg_RoundBackupFilenames::SharedCtor() {
  _cached_size_ = 0;
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&count_, 0, reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&count_) + sizeof(index_));
}

CCSUsrMsg_RoundBackupFilenames::~CCSUsrMsg_RoundBackupFilenames() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_RoundBackupFilenames)
  SharedDtor();
}

void CCSUsrMsg_RoundBackupFilenames::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_RoundBackupFilenames::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_RoundBackupFilenames::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[59].descriptor;
}

const CCSUsrMsg_RoundBackupFilenames& CCSUsrMsg_RoundBackupFilenames::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_RoundBackupFilenames* CCSUsrMsg_RoundBackupFilenames::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_RoundBackupFilenames* n = new CCSUsrMsg_RoundBackupFilenames;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_RoundBackupFilenames::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_RoundBackupFilenames)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_filename()) {
      GOOGLE_DCHECK(!filename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*filename_.UnsafeRawStringPointer())->clear();
    }
    if (has_nicename()) {
      GOOGLE_DCHECK(!nicename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nicename_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&count_, 0, reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&count_) + sizeof(index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_RoundBackupFilenames::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_RoundBackupFilenames)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 count = 1;
      case 1: {
        if (tag == 8u) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 index = 2;
      case 2: {
        if (tag == 16u) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_RoundBackupFilenames.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nicename = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nicename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nicename().data(), this->nicename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_RoundBackupFilenames.nicename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_RoundBackupFilenames)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_RoundBackupFilenames)
  return false;
#undef DO_
}

void CCSUsrMsg_RoundBackupFilenames::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_RoundBackupFilenames)
  // optional int32 count = 1;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->count(), output);
  }

  // optional int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }

  // optional string filename = 3;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RoundBackupFilenames.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filename(), output);
  }

  // optional string nicename = 4;
  if (has_nicename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nicename().data(), this->nicename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RoundBackupFilenames.nicename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->nicename(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_RoundBackupFilenames)
}

::google::protobuf::uint8* CCSUsrMsg_RoundBackupFilenames::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_RoundBackupFilenames)
  // optional int32 count = 1;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->count(), target);
  }

  // optional int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }

  // optional string filename = 3;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RoundBackupFilenames.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filename(), target);
  }

  // optional string nicename = 4;
  if (has_nicename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nicename().data(), this->nicename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RoundBackupFilenames.nicename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->nicename(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_RoundBackupFilenames)
  return target;
}

size_t CCSUsrMsg_RoundBackupFilenames::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_RoundBackupFilenames)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string filename = 3;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional string nicename = 4;
    if (has_nicename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nicename());
    }

    // optional int32 count = 1;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_RoundBackupFilenames::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_RoundBackupFilenames)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_RoundBackupFilenames* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_RoundBackupFilenames>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_RoundBackupFilenames)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_RoundBackupFilenames)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_RoundBackupFilenames::MergeFrom(const CCSUsrMsg_RoundBackupFilenames& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_RoundBackupFilenames)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_filename()) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (from.has_nicename()) {
      set_has_nicename();
      nicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nicename_);
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
}

void CCSUsrMsg_RoundBackupFilenames::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_RoundBackupFilenames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_RoundBackupFilenames::CopyFrom(const CCSUsrMsg_RoundBackupFilenames& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_RoundBackupFilenames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_RoundBackupFilenames::IsInitialized() const {
  return true;
}

void CCSUsrMsg_RoundBackupFilenames::Swap(CCSUsrMsg_RoundBackupFilenames* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_RoundBackupFilenames::InternalSwap(CCSUsrMsg_RoundBackupFilenames* other) {
  filename_.Swap(&other->filename_);
  nicename_.Swap(&other->nicename_);
  std::swap(count_, other->count_);
  std::swap(index_, other->index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_RoundBackupFilenames::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[59];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_RoundBackupFilenames

// optional int32 count = 1;
bool CCSUsrMsg_RoundBackupFilenames::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CCSUsrMsg_RoundBackupFilenames::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
void CCSUsrMsg_RoundBackupFilenames::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
void CCSUsrMsg_RoundBackupFilenames::clear_count() {
  count_ = 0;
  clear_has_count();
}
::google::protobuf::int32 CCSUsrMsg_RoundBackupFilenames::count() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RoundBackupFilenames.count)
  return count_;
}
void CCSUsrMsg_RoundBackupFilenames::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RoundBackupFilenames.count)
}

// optional int32 index = 2;
bool CCSUsrMsg_RoundBackupFilenames::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CCSUsrMsg_RoundBackupFilenames::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
void CCSUsrMsg_RoundBackupFilenames::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
void CCSUsrMsg_RoundBackupFilenames::clear_index() {
  index_ = 0;
  clear_has_index();
}
::google::protobuf::int32 CCSUsrMsg_RoundBackupFilenames::index() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RoundBackupFilenames.index)
  return index_;
}
void CCSUsrMsg_RoundBackupFilenames::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RoundBackupFilenames.index)
}

// optional string filename = 3;
bool CCSUsrMsg_RoundBackupFilenames::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_RoundBackupFilenames::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_RoundBackupFilenames::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_RoundBackupFilenames::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
const ::std::string& CCSUsrMsg_RoundBackupFilenames::filename() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RoundBackupFilenames.filename)
  return filename_.GetNoArena();
}
void CCSUsrMsg_RoundBackupFilenames::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RoundBackupFilenames.filename)
}
#if LANG_CXX11
void CCSUsrMsg_RoundBackupFilenames::set_filename(::std::string&& value) {
  set_has_filename();
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_RoundBackupFilenames.filename)
}
#endif
void CCSUsrMsg_RoundBackupFilenames::set_filename(const char* value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_RoundBackupFilenames.filename)
}
void CCSUsrMsg_RoundBackupFilenames::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_RoundBackupFilenames.filename)
}
::std::string* CCSUsrMsg_RoundBackupFilenames::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_RoundBackupFilenames.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_RoundBackupFilenames::release_filename() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_RoundBackupFilenames.filename)
  clear_has_filename();
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_RoundBackupFilenames::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_RoundBackupFilenames.filename)
}

// optional string nicename = 4;
bool CCSUsrMsg_RoundBackupFilenames::has_nicename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CCSUsrMsg_RoundBackupFilenames::set_has_nicename() {
  _has_bits_[0] |= 0x00000002u;
}
void CCSUsrMsg_RoundBackupFilenames::clear_has_nicename() {
  _has_bits_[0] &= ~0x00000002u;
}
void CCSUsrMsg_RoundBackupFilenames::clear_nicename() {
  nicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nicename();
}
const ::std::string& CCSUsrMsg_RoundBackupFilenames::nicename() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RoundBackupFilenames.nicename)
  return nicename_.GetNoArena();
}
void CCSUsrMsg_RoundBackupFilenames::set_nicename(const ::std::string& value) {
  set_has_nicename();
  nicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RoundBackupFilenames.nicename)
}
#if LANG_CXX11
void CCSUsrMsg_RoundBackupFilenames::set_nicename(::std::string&& value) {
  set_has_nicename();
  nicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_RoundBackupFilenames.nicename)
}
#endif
void CCSUsrMsg_RoundBackupFilenames::set_nicename(const char* value) {
  set_has_nicename();
  nicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_RoundBackupFilenames.nicename)
}
void CCSUsrMsg_RoundBackupFilenames::set_nicename(const char* value, size_t size) {
  set_has_nicename();
  nicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_RoundBackupFilenames.nicename)
}
::std::string* CCSUsrMsg_RoundBackupFilenames::mutable_nicename() {
  set_has_nicename();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_RoundBackupFilenames.nicename)
  return nicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CCSUsrMsg_RoundBackupFilenames::release_nicename() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_RoundBackupFilenames.nicename)
  clear_has_nicename();
  return nicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CCSUsrMsg_RoundBackupFilenames::set_allocated_nicename(::std::string* nicename) {
  if (nicename != NULL) {
    set_has_nicename();
  } else {
    clear_has_nicename();
  }
  nicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nicename);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_RoundBackupFilenames.nicename)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ResetHud::kResetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ResetHud::CCSUsrMsg_ResetHud()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ResetHud)
}
CCSUsrMsg_ResetHud::CCSUsrMsg_ResetHud(const CCSUsrMsg_ResetHud& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reset_ = from.reset_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ResetHud)
}

void CCSUsrMsg_ResetHud::SharedCtor() {
  _cached_size_ = 0;
  reset_ = false;
}

CCSUsrMsg_ResetHud::~CCSUsrMsg_ResetHud() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ResetHud)
  SharedDtor();
}

void CCSUsrMsg_ResetHud::SharedDtor() {
}

void CCSUsrMsg_ResetHud::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ResetHud::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[60].descriptor;
}

const CCSUsrMsg_ResetHud& CCSUsrMsg_ResetHud::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_ResetHud* CCSUsrMsg_ResetHud::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ResetHud* n = new CCSUsrMsg_ResetHud;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ResetHud::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ResetHud)
  reset_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ResetHud::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ResetHud)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool reset = 1;
      case 1: {
        if (tag == 8u) {
          set_has_reset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ResetHud)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ResetHud)
  return false;
#undef DO_
}

void CCSUsrMsg_ResetHud::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ResetHud)
  // optional bool reset = 1;
  if (has_reset()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->reset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ResetHud)
}

::google::protobuf::uint8* CCSUsrMsg_ResetHud::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ResetHud)
  // optional bool reset = 1;
  if (has_reset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->reset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ResetHud)
  return target;
}

size_t CCSUsrMsg_ResetHud::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ResetHud)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional bool reset = 1;
  if (has_reset()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ResetHud::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ResetHud)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ResetHud* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ResetHud>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ResetHud)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ResetHud)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ResetHud::MergeFrom(const CCSUsrMsg_ResetHud& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ResetHud)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_reset()) {
    set_reset(from.reset());
  }
}

void CCSUsrMsg_ResetHud::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ResetHud)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ResetHud::CopyFrom(const CCSUsrMsg_ResetHud& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ResetHud)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ResetHud::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ResetHud::Swap(CCSUsrMsg_ResetHud* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ResetHud::InternalSwap(CCSUsrMsg_ResetHud* other) {
  std::swap(reset_, other->reset_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ResetHud::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[60];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_ResetHud

// optional bool reset = 1;
bool CCSUsrMsg_ResetHud::has_reset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_ResetHud::set_has_reset() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_ResetHud::clear_has_reset() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_ResetHud::clear_reset() {
  reset_ = false;
  clear_has_reset();
}
bool CCSUsrMsg_ResetHud::reset() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ResetHud.reset)
  return reset_;
}
void CCSUsrMsg_ResetHud::set_reset(bool value) {
  set_has_reset();
  reset_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ResetHud.reset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_GameTitle::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_GameTitle::CCSUsrMsg_GameTitle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_GameTitle)
}
CCSUsrMsg_GameTitle::CCSUsrMsg_GameTitle(const CCSUsrMsg_GameTitle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_GameTitle)
}

void CCSUsrMsg_GameTitle::SharedCtor() {
  _cached_size_ = 0;
  dummy_ = 0;
}

CCSUsrMsg_GameTitle::~CCSUsrMsg_GameTitle() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_GameTitle)
  SharedDtor();
}

void CCSUsrMsg_GameTitle::SharedDtor() {
}

void CCSUsrMsg_GameTitle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_GameTitle::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[61].descriptor;
}

const CCSUsrMsg_GameTitle& CCSUsrMsg_GameTitle::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_GameTitle* CCSUsrMsg_GameTitle::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_GameTitle* n = new CCSUsrMsg_GameTitle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_GameTitle::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_GameTitle)
  dummy_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_GameTitle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_GameTitle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dummy = 1;
      case 1: {
        if (tag == 8u) {
          set_has_dummy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_GameTitle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_GameTitle)
  return false;
#undef DO_
}

void CCSUsrMsg_GameTitle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_GameTitle)
  // optional int32 dummy = 1;
  if (has_dummy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_GameTitle)
}

::google::protobuf::uint8* CCSUsrMsg_GameTitle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_GameTitle)
  // optional int32 dummy = 1;
  if (has_dummy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_GameTitle)
  return target;
}

size_t CCSUsrMsg_GameTitle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_GameTitle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 dummy = 1;
  if (has_dummy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_GameTitle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_GameTitle)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_GameTitle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_GameTitle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_GameTitle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_GameTitle)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_GameTitle::MergeFrom(const CCSUsrMsg_GameTitle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_GameTitle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dummy()) {
    set_dummy(from.dummy());
  }
}

void CCSUsrMsg_GameTitle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_GameTitle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_GameTitle::CopyFrom(const CCSUsrMsg_GameTitle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_GameTitle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_GameTitle::IsInitialized() const {
  return true;
}

void CCSUsrMsg_GameTitle::Swap(CCSUsrMsg_GameTitle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_GameTitle::InternalSwap(CCSUsrMsg_GameTitle* other) {
  std::swap(dummy_, other->dummy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_GameTitle::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[61];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_GameTitle

// optional int32 dummy = 1;
bool CCSUsrMsg_GameTitle::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_GameTitle::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_GameTitle::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_GameTitle::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
::google::protobuf::int32 CCSUsrMsg_GameTitle::dummy() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_GameTitle.dummy)
  return dummy_;
}
void CCSUsrMsg_GameTitle::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_GameTitle.dummy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_RequestState::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_RequestState::CCSUsrMsg_RequestState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_RequestState)
}
CCSUsrMsg_RequestState::CCSUsrMsg_RequestState(const CCSUsrMsg_RequestState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_RequestState)
}

void CCSUsrMsg_RequestState::SharedCtor() {
  _cached_size_ = 0;
  dummy_ = 0;
}

CCSUsrMsg_RequestState::~CCSUsrMsg_RequestState() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_RequestState)
  SharedDtor();
}

void CCSUsrMsg_RequestState::SharedDtor() {
}

void CCSUsrMsg_RequestState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_RequestState::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[62].descriptor;
}

const CCSUsrMsg_RequestState& CCSUsrMsg_RequestState::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_RequestState* CCSUsrMsg_RequestState::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_RequestState* n = new CCSUsrMsg_RequestState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_RequestState::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_RequestState)
  dummy_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_RequestState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_RequestState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dummy = 1;
      case 1: {
        if (tag == 8u) {
          set_has_dummy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_RequestState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_RequestState)
  return false;
#undef DO_
}

void CCSUsrMsg_RequestState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_RequestState)
  // optional int32 dummy = 1;
  if (has_dummy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_RequestState)
}

::google::protobuf::uint8* CCSUsrMsg_RequestState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_RequestState)
  // optional int32 dummy = 1;
  if (has_dummy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_RequestState)
  return target;
}

size_t CCSUsrMsg_RequestState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_RequestState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 dummy = 1;
  if (has_dummy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_RequestState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_RequestState)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_RequestState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_RequestState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_RequestState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_RequestState)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_RequestState::MergeFrom(const CCSUsrMsg_RequestState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_RequestState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dummy()) {
    set_dummy(from.dummy());
  }
}

void CCSUsrMsg_RequestState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_RequestState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_RequestState::CopyFrom(const CCSUsrMsg_RequestState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_RequestState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_RequestState::IsInitialized() const {
  return true;
}

void CCSUsrMsg_RequestState::Swap(CCSUsrMsg_RequestState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_RequestState::InternalSwap(CCSUsrMsg_RequestState* other) {
  std::swap(dummy_, other->dummy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_RequestState::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[62];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_RequestState

// optional int32 dummy = 1;
bool CCSUsrMsg_RequestState::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_RequestState::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_RequestState::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_RequestState::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
::google::protobuf::int32 CCSUsrMsg_RequestState::dummy() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RequestState.dummy)
  return dummy_;
}
void CCSUsrMsg_RequestState::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RequestState.dummy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_StopSpectatorMode::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_StopSpectatorMode::CCSUsrMsg_StopSpectatorMode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_StopSpectatorMode)
}
CCSUsrMsg_StopSpectatorMode::CCSUsrMsg_StopSpectatorMode(const CCSUsrMsg_StopSpectatorMode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_StopSpectatorMode)
}

void CCSUsrMsg_StopSpectatorMode::SharedCtor() {
  _cached_size_ = 0;
  dummy_ = 0;
}

CCSUsrMsg_StopSpectatorMode::~CCSUsrMsg_StopSpectatorMode() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_StopSpectatorMode)
  SharedDtor();
}

void CCSUsrMsg_StopSpectatorMode::SharedDtor() {
}

void CCSUsrMsg_StopSpectatorMode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_StopSpectatorMode::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[63].descriptor;
}

const CCSUsrMsg_StopSpectatorMode& CCSUsrMsg_StopSpectatorMode::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_StopSpectatorMode* CCSUsrMsg_StopSpectatorMode::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_StopSpectatorMode* n = new CCSUsrMsg_StopSpectatorMode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_StopSpectatorMode::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_StopSpectatorMode)
  dummy_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_StopSpectatorMode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_StopSpectatorMode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dummy = 1;
      case 1: {
        if (tag == 8u) {
          set_has_dummy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_StopSpectatorMode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_StopSpectatorMode)
  return false;
#undef DO_
}

void CCSUsrMsg_StopSpectatorMode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_StopSpectatorMode)
  // optional int32 dummy = 1;
  if (has_dummy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_StopSpectatorMode)
}

::google::protobuf::uint8* CCSUsrMsg_StopSpectatorMode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_StopSpectatorMode)
  // optional int32 dummy = 1;
  if (has_dummy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_StopSpectatorMode)
  return target;
}

size_t CCSUsrMsg_StopSpectatorMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_StopSpectatorMode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 dummy = 1;
  if (has_dummy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_StopSpectatorMode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_StopSpectatorMode)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_StopSpectatorMode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_StopSpectatorMode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_StopSpectatorMode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_StopSpectatorMode)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_StopSpectatorMode::MergeFrom(const CCSUsrMsg_StopSpectatorMode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_StopSpectatorMode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dummy()) {
    set_dummy(from.dummy());
  }
}

void CCSUsrMsg_StopSpectatorMode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_StopSpectatorMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_StopSpectatorMode::CopyFrom(const CCSUsrMsg_StopSpectatorMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_StopSpectatorMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_StopSpectatorMode::IsInitialized() const {
  return true;
}

void CCSUsrMsg_StopSpectatorMode::Swap(CCSUsrMsg_StopSpectatorMode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_StopSpectatorMode::InternalSwap(CCSUsrMsg_StopSpectatorMode* other) {
  std::swap(dummy_, other->dummy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_StopSpectatorMode::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[63];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_StopSpectatorMode

// optional int32 dummy = 1;
bool CCSUsrMsg_StopSpectatorMode::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_StopSpectatorMode::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_StopSpectatorMode::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_StopSpectatorMode::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
::google::protobuf::int32 CCSUsrMsg_StopSpectatorMode::dummy() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_StopSpectatorMode.dummy)
  return dummy_;
}
void CCSUsrMsg_StopSpectatorMode::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_StopSpectatorMode.dummy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_DisconnectToLobby::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_DisconnectToLobby::CCSUsrMsg_DisconnectToLobby()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_DisconnectToLobby)
}
CCSUsrMsg_DisconnectToLobby::CCSUsrMsg_DisconnectToLobby(const CCSUsrMsg_DisconnectToLobby& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_DisconnectToLobby)
}

void CCSUsrMsg_DisconnectToLobby::SharedCtor() {
  _cached_size_ = 0;
  dummy_ = 0;
}

CCSUsrMsg_DisconnectToLobby::~CCSUsrMsg_DisconnectToLobby() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_DisconnectToLobby)
  SharedDtor();
}

void CCSUsrMsg_DisconnectToLobby::SharedDtor() {
}

void CCSUsrMsg_DisconnectToLobby::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_DisconnectToLobby::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[64].descriptor;
}

const CCSUsrMsg_DisconnectToLobby& CCSUsrMsg_DisconnectToLobby::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_DisconnectToLobby* CCSUsrMsg_DisconnectToLobby::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_DisconnectToLobby* n = new CCSUsrMsg_DisconnectToLobby;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_DisconnectToLobby::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_DisconnectToLobby)
  dummy_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_DisconnectToLobby::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_DisconnectToLobby)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dummy = 1;
      case 1: {
        if (tag == 8u) {
          set_has_dummy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_DisconnectToLobby)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_DisconnectToLobby)
  return false;
#undef DO_
}

void CCSUsrMsg_DisconnectToLobby::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_DisconnectToLobby)
  // optional int32 dummy = 1;
  if (has_dummy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_DisconnectToLobby)
}

::google::protobuf::uint8* CCSUsrMsg_DisconnectToLobby::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_DisconnectToLobby)
  // optional int32 dummy = 1;
  if (has_dummy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_DisconnectToLobby)
  return target;
}

size_t CCSUsrMsg_DisconnectToLobby::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_DisconnectToLobby)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 dummy = 1;
  if (has_dummy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_DisconnectToLobby::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_DisconnectToLobby)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_DisconnectToLobby* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_DisconnectToLobby>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_DisconnectToLobby)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_DisconnectToLobby)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_DisconnectToLobby::MergeFrom(const CCSUsrMsg_DisconnectToLobby& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_DisconnectToLobby)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dummy()) {
    set_dummy(from.dummy());
  }
}

void CCSUsrMsg_DisconnectToLobby::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_DisconnectToLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_DisconnectToLobby::CopyFrom(const CCSUsrMsg_DisconnectToLobby& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_DisconnectToLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_DisconnectToLobby::IsInitialized() const {
  return true;
}

void CCSUsrMsg_DisconnectToLobby::Swap(CCSUsrMsg_DisconnectToLobby* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_DisconnectToLobby::InternalSwap(CCSUsrMsg_DisconnectToLobby* other) {
  std::swap(dummy_, other->dummy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_DisconnectToLobby::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[64];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_DisconnectToLobby

// optional int32 dummy = 1;
bool CCSUsrMsg_DisconnectToLobby::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_DisconnectToLobby::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_DisconnectToLobby::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_DisconnectToLobby::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
::google::protobuf::int32 CCSUsrMsg_DisconnectToLobby::dummy() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DisconnectToLobby.dummy)
  return dummy_;
}
void CCSUsrMsg_DisconnectToLobby::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DisconnectToLobby.dummy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_WarmupHasEnded::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_WarmupHasEnded::CCSUsrMsg_WarmupHasEnded()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_WarmupHasEnded)
}
CCSUsrMsg_WarmupHasEnded::CCSUsrMsg_WarmupHasEnded(const CCSUsrMsg_WarmupHasEnded& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_WarmupHasEnded)
}

void CCSUsrMsg_WarmupHasEnded::SharedCtor() {
  _cached_size_ = 0;
  dummy_ = 0;
}

CCSUsrMsg_WarmupHasEnded::~CCSUsrMsg_WarmupHasEnded() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_WarmupHasEnded)
  SharedDtor();
}

void CCSUsrMsg_WarmupHasEnded::SharedDtor() {
}

void CCSUsrMsg_WarmupHasEnded::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_WarmupHasEnded::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[65].descriptor;
}

const CCSUsrMsg_WarmupHasEnded& CCSUsrMsg_WarmupHasEnded::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_WarmupHasEnded* CCSUsrMsg_WarmupHasEnded::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_WarmupHasEnded* n = new CCSUsrMsg_WarmupHasEnded;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_WarmupHasEnded::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_WarmupHasEnded)
  dummy_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_WarmupHasEnded::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_WarmupHasEnded)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dummy = 1;
      case 1: {
        if (tag == 8u) {
          set_has_dummy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_WarmupHasEnded)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_WarmupHasEnded)
  return false;
#undef DO_
}

void CCSUsrMsg_WarmupHasEnded::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_WarmupHasEnded)
  // optional int32 dummy = 1;
  if (has_dummy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_WarmupHasEnded)
}

::google::protobuf::uint8* CCSUsrMsg_WarmupHasEnded::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_WarmupHasEnded)
  // optional int32 dummy = 1;
  if (has_dummy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_WarmupHasEnded)
  return target;
}

size_t CCSUsrMsg_WarmupHasEnded::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_WarmupHasEnded)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 dummy = 1;
  if (has_dummy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_WarmupHasEnded::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_WarmupHasEnded)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_WarmupHasEnded* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_WarmupHasEnded>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_WarmupHasEnded)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_WarmupHasEnded)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_WarmupHasEnded::MergeFrom(const CCSUsrMsg_WarmupHasEnded& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_WarmupHasEnded)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dummy()) {
    set_dummy(from.dummy());
  }
}

void CCSUsrMsg_WarmupHasEnded::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_WarmupHasEnded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_WarmupHasEnded::CopyFrom(const CCSUsrMsg_WarmupHasEnded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_WarmupHasEnded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_WarmupHasEnded::IsInitialized() const {
  return true;
}

void CCSUsrMsg_WarmupHasEnded::Swap(CCSUsrMsg_WarmupHasEnded* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_WarmupHasEnded::InternalSwap(CCSUsrMsg_WarmupHasEnded* other) {
  std::swap(dummy_, other->dummy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_WarmupHasEnded::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[65];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_WarmupHasEnded

// optional int32 dummy = 1;
bool CCSUsrMsg_WarmupHasEnded::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_WarmupHasEnded::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_WarmupHasEnded::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_WarmupHasEnded::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
::google::protobuf::int32 CCSUsrMsg_WarmupHasEnded::dummy() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_WarmupHasEnded.dummy)
  return dummy_;
}
void CCSUsrMsg_WarmupHasEnded::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_WarmupHasEnded.dummy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ClientInfo::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ClientInfo::CCSUsrMsg_ClientInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ClientInfo)
}
CCSUsrMsg_ClientInfo::CCSUsrMsg_ClientInfo(const CCSUsrMsg_ClientInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ClientInfo)
}

void CCSUsrMsg_ClientInfo::SharedCtor() {
  _cached_size_ = 0;
  dummy_ = 0;
}

CCSUsrMsg_ClientInfo::~CCSUsrMsg_ClientInfo() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ClientInfo)
  SharedDtor();
}

void CCSUsrMsg_ClientInfo::SharedDtor() {
}

void CCSUsrMsg_ClientInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ClientInfo::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[66].descriptor;
}

const CCSUsrMsg_ClientInfo& CCSUsrMsg_ClientInfo::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_ClientInfo* CCSUsrMsg_ClientInfo::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ClientInfo* n = new CCSUsrMsg_ClientInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ClientInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ClientInfo)
  dummy_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ClientInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ClientInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dummy = 1;
      case 1: {
        if (tag == 8u) {
          set_has_dummy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ClientInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ClientInfo)
  return false;
#undef DO_
}

void CCSUsrMsg_ClientInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ClientInfo)
  // optional int32 dummy = 1;
  if (has_dummy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ClientInfo)
}

::google::protobuf::uint8* CCSUsrMsg_ClientInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ClientInfo)
  // optional int32 dummy = 1;
  if (has_dummy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ClientInfo)
  return target;
}

size_t CCSUsrMsg_ClientInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ClientInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 dummy = 1;
  if (has_dummy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ClientInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ClientInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ClientInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ClientInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ClientInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ClientInfo)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ClientInfo::MergeFrom(const CCSUsrMsg_ClientInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ClientInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dummy()) {
    set_dummy(from.dummy());
  }
}

void CCSUsrMsg_ClientInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ClientInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ClientInfo::CopyFrom(const CCSUsrMsg_ClientInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ClientInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ClientInfo::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ClientInfo::Swap(CCSUsrMsg_ClientInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ClientInfo::InternalSwap(CCSUsrMsg_ClientInfo* other) {
  std::swap(dummy_, other->dummy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ClientInfo::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[66];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_ClientInfo

// optional int32 dummy = 1;
bool CCSUsrMsg_ClientInfo::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_ClientInfo::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_ClientInfo::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_ClientInfo::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
::google::protobuf::int32 CCSUsrMsg_ClientInfo::dummy() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ClientInfo.dummy)
  return dummy_;
}
void CCSUsrMsg_ClientInfo::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ClientInfo.dummy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ServerRankRevealAll::kSecondsTillShutdownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ServerRankRevealAll::CCSUsrMsg_ServerRankRevealAll()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ServerRankRevealAll)
}
CCSUsrMsg_ServerRankRevealAll::CCSUsrMsg_ServerRankRevealAll(const CCSUsrMsg_ServerRankRevealAll& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  seconds_till_shutdown_ = from.seconds_till_shutdown_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ServerRankRevealAll)
}

void CCSUsrMsg_ServerRankRevealAll::SharedCtor() {
  _cached_size_ = 0;
  seconds_till_shutdown_ = 0;
}

CCSUsrMsg_ServerRankRevealAll::~CCSUsrMsg_ServerRankRevealAll() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ServerRankRevealAll)
  SharedDtor();
}

void CCSUsrMsg_ServerRankRevealAll::SharedDtor() {
}

void CCSUsrMsg_ServerRankRevealAll::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ServerRankRevealAll::descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[67].descriptor;
}

const CCSUsrMsg_ServerRankRevealAll& CCSUsrMsg_ServerRankRevealAll::default_instance() {
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CCSUsrMsg_ServerRankRevealAll* CCSUsrMsg_ServerRankRevealAll::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ServerRankRevealAll* n = new CCSUsrMsg_ServerRankRevealAll;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ServerRankRevealAll::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ServerRankRevealAll)
  seconds_till_shutdown_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ServerRankRevealAll::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ServerRankRevealAll)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 seconds_till_shutdown = 1;
      case 1: {
        if (tag == 8u) {
          set_has_seconds_till_shutdown();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seconds_till_shutdown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ServerRankRevealAll)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ServerRankRevealAll)
  return false;
#undef DO_
}

void CCSUsrMsg_ServerRankRevealAll::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ServerRankRevealAll)
  // optional int32 seconds_till_shutdown = 1;
  if (has_seconds_till_shutdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->seconds_till_shutdown(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ServerRankRevealAll)
}

::google::protobuf::uint8* CCSUsrMsg_ServerRankRevealAll::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ServerRankRevealAll)
  // optional int32 seconds_till_shutdown = 1;
  if (has_seconds_till_shutdown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->seconds_till_shutdown(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ServerRankRevealAll)
  return target;
}

size_t CCSUsrMsg_ServerRankRevealAll::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ServerRankRevealAll)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 seconds_till_shutdown = 1;
  if (has_seconds_till_shutdown()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seconds_till_shutdown());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ServerRankRevealAll::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ServerRankRevealAll)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ServerRankRevealAll* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ServerRankRevealAll>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ServerRankRevealAll)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ServerRankRevealAll)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ServerRankRevealAll::MergeFrom(const CCSUsrMsg_ServerRankRevealAll& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ServerRankRevealAll)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_seconds_till_shutdown()) {
    set_seconds_till_shutdown(from.seconds_till_shutdown());
  }
}

void CCSUsrMsg_ServerRankRevealAll::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ServerRankRevealAll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ServerRankRevealAll::CopyFrom(const CCSUsrMsg_ServerRankRevealAll& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ServerRankRevealAll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ServerRankRevealAll::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ServerRankRevealAll::Swap(CCSUsrMsg_ServerRankRevealAll* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ServerRankRevealAll::InternalSwap(CCSUsrMsg_ServerRankRevealAll* other) {
  std::swap(seconds_till_shutdown_, other->seconds_till_shutdown_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ServerRankRevealAll::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[67];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCSUsrMsg_ServerRankRevealAll

// optional int32 seconds_till_shutdown = 1;
bool CCSUsrMsg_ServerRankRevealAll::has_seconds_till_shutdown() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CCSUsrMsg_ServerRankRevealAll::set_has_seconds_till_shutdown() {
  _has_bits_[0] |= 0x00000001u;
}
void CCSUsrMsg_ServerRankRevealAll::clear_has_seconds_till_shutdown() {
  _has_bits_[0] &= ~0x00000001u;
}
void CCSUsrMsg_ServerRankRevealAll::clear_seconds_till_shutdown() {
  seconds_till_shutdown_ = 0;
  clear_has_seconds_till_shutdown();
}
::google::protobuf::int32 CCSUsrMsg_ServerRankRevealAll::seconds_till_shutdown() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ServerRankRevealAll.seconds_till_shutdown)
  return seconds_till_shutdown_;
}
void CCSUsrMsg_ServerRankRevealAll::set_seconds_till_shutdown(::google::protobuf::int32 value) {
  set_has_seconds_till_shutdown();
  seconds_till_shutdown_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ServerRankRevealAll.seconds_till_shutdown)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
