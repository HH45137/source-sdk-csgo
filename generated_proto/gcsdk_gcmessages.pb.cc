// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gcsdk_gcmessages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gcsdk_gcmessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class CMsgSOIDOwnerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOIDOwner> {
} _CMsgSOIDOwner_default_instance_;
class CMsgSOSingleObjectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOSingleObject> {
} _CMsgSOSingleObject_default_instance_;
class CMsgSOMultipleObjects_SingleObjectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOMultipleObjects_SingleObject> {
} _CMsgSOMultipleObjects_SingleObject_default_instance_;
class CMsgSOMultipleObjectsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOMultipleObjects> {
} _CMsgSOMultipleObjects_default_instance_;
class CMsgSOCacheSubscribed_SubscribedTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOCacheSubscribed_SubscribedType> {
} _CMsgSOCacheSubscribed_SubscribedType_default_instance_;
class CMsgSOCacheSubscribedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOCacheSubscribed> {
} _CMsgSOCacheSubscribed_default_instance_;
class CMsgSOCacheUnsubscribedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOCacheUnsubscribed> {
} _CMsgSOCacheUnsubscribed_default_instance_;
class CMsgSOCacheSubscriptionCheckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOCacheSubscriptionCheck> {
} _CMsgSOCacheSubscriptionCheck_default_instance_;
class CMsgSOCacheSubscriptionRefreshDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOCacheSubscriptionRefresh> {
} _CMsgSOCacheSubscriptionRefresh_default_instance_;
class CMsgSOCacheVersionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOCacheVersion> {
} _CMsgSOCacheVersion_default_instance_;
class CMsgAccountDetailsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgAccountDetails> {
} _CMsgAccountDetails_default_instance_;
class CMsgGCMultiplexMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCMultiplexMessage> {
} _CMsgGCMultiplexMessage_default_instance_;
class CMsgGCMultiplexMessage_ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCMultiplexMessage_Response> {
} _CMsgGCMultiplexMessage_Response_default_instance_;
class CGCToGCMsgMasterAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CGCToGCMsgMasterAck> {
} _CGCToGCMsgMasterAck_default_instance_;
class CGCToGCMsgMasterAck_ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CGCToGCMsgMasterAck_Response> {
} _CGCToGCMsgMasterAck_Response_default_instance_;
class CGCToGCMsgMasterStartupCompleteDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CGCToGCMsgMasterStartupComplete> {
} _CGCToGCMsgMasterStartupComplete_default_instance_;
class CGCToGCMsgRoutedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CGCToGCMsgRouted> {
} _CGCToGCMsgRouted_default_instance_;
class CGCToGCMsgRoutedReplyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CGCToGCMsgRoutedReply> {
} _CGCToGCMsgRoutedReply_default_instance_;
class CMsgGCUpdateSessionIPDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCUpdateSessionIP> {
} _CMsgGCUpdateSessionIP_default_instance_;
class CMsgGCRequestSessionIPDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCRequestSessionIP> {
} _CMsgGCRequestSessionIP_default_instance_;
class CMsgGCRequestSessionIPResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCRequestSessionIPResponse> {
} _CMsgGCRequestSessionIPResponse_default_instance_;
class CMsgSOCacheHaveVersionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOCacheHaveVersion> {
} _CMsgSOCacheHaveVersion_default_instance_;
class CMsgClientHelloDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientHello> {
} _CMsgClientHello_default_instance_;
class CMsgServerHelloDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgServerHello> {
} _CMsgServerHello_default_instance_;
class CMsgClientWelcome_LocationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWelcome_Location> {
} _CMsgClientWelcome_Location_default_instance_;
class CMsgClientWelcomeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWelcome> {
} _CMsgClientWelcome_default_instance_;
class CMsgConnectionStatusDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgConnectionStatus> {
} _CMsgConnectionStatus_default_instance_;
class CWorkshop_PopulateItemDescriptions_Request_SingleItemDescriptionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription> {
} _CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription_default_instance_;
class CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlockDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock> {
} _CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock_default_instance_;
class CWorkshop_PopulateItemDescriptions_RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_PopulateItemDescriptions_Request> {
} _CWorkshop_PopulateItemDescriptions_Request_default_instance_;
class CWorkshop_GetContributors_RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_GetContributors_Request> {
} _CWorkshop_GetContributors_Request_default_instance_;
class CWorkshop_GetContributors_ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_GetContributors_Response> {
} _CWorkshop_GetContributors_Response_default_instance_;
class CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRuleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule> {
} _CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule_default_instance_;
class CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRuleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule> {
} _CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule_default_instance_;
class CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRuleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule> {
} _CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule_default_instance_;
class CWorkshop_SetItemPaymentRules_RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_SetItemPaymentRules_Request> {
} _CWorkshop_SetItemPaymentRules_Request_default_instance_;
class CWorkshop_SetItemPaymentRules_ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_SetItemPaymentRules_Response> {
} _CWorkshop_SetItemPaymentRules_Response_default_instance_;
class CGameServers_AggregationQuery_RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CGameServers_AggregationQuery_Request> {
} _CGameServers_AggregationQuery_Request_default_instance_;
class CGameServers_AggregationQuery_Response_GroupDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CGameServers_AggregationQuery_Response_Group> {
} _CGameServers_AggregationQuery_Response_Group_default_instance_;
class CGameServers_AggregationQuery_ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CGameServers_AggregationQuery_Response> {
} _CGameServers_AggregationQuery_Response_default_instance_;
class CWorkshop_AddSpecialPayment_RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_AddSpecialPayment_Request> {
} _CWorkshop_AddSpecialPayment_Request_default_instance_;
class CWorkshop_AddSpecialPayment_ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_AddSpecialPayment_Response> {
} _CWorkshop_AddSpecialPayment_Response_default_instance_;
class CProductInfo_SetRichPresenceLocalization_Request_TokenDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CProductInfo_SetRichPresenceLocalization_Request_Token> {
} _CProductInfo_SetRichPresenceLocalization_Request_Token_default_instance_;
class CProductInfo_SetRichPresenceLocalization_Request_LanguageSectionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CProductInfo_SetRichPresenceLocalization_Request_LanguageSection> {
} _CProductInfo_SetRichPresenceLocalization_Request_LanguageSection_default_instance_;
class CProductInfo_SetRichPresenceLocalization_RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CProductInfo_SetRichPresenceLocalization_Request> {
} _CProductInfo_SetRichPresenceLocalization_Request_default_instance_;
class CProductInfo_SetRichPresenceLocalization_ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CProductInfo_SetRichPresenceLocalization_Response> {
} _CProductInfo_SetRichPresenceLocalization_Response_default_instance_;

namespace protobuf_gcsdk_5fgcmessages_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[46];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOIDOwner, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOIDOwner, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOIDOwner, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOIDOwner, id_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOSingleObject, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOSingleObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOSingleObject, type_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOSingleObject, object_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOSingleObject, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOSingleObject, owner_soid_),
  3,
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOMultipleObjects_SingleObject, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOMultipleObjects_SingleObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOMultipleObjects_SingleObject, type_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOMultipleObjects_SingleObject, object_data_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOMultipleObjects, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOMultipleObjects, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOMultipleObjects, objects_modified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOMultipleObjects, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOMultipleObjects, owner_soid_),
  ~0u,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheSubscribed_SubscribedType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheSubscribed_SubscribedType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheSubscribed_SubscribedType, type_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheSubscribed_SubscribedType, object_data_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheSubscribed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheSubscribed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheSubscribed, objects_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheSubscribed, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheSubscribed, owner_soid_),
  ~0u,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheUnsubscribed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheUnsubscribed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheUnsubscribed, owner_soid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheSubscriptionCheck, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheSubscriptionCheck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheSubscriptionCheck, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheSubscriptionCheck, owner_soid_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheSubscriptionRefresh, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheSubscriptionRefresh, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheSubscriptionRefresh, owner_soid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheVersion, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheVersion, version_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, account_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, public_profile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, public_inventory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, vac_banned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, cyber_cafe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, school_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, free_trial_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, subscribed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, low_violence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, limited_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, trusted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, package_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, time_cached_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, account_locked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, community_banned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, trade_banned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAccountDetails, eligible_for_community_market_),
  1,
  0,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  13,
  14,
  12,
  15,
  16,
  17,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMultiplexMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMultiplexMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMultiplexMessage, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMultiplexMessage, payload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMultiplexMessage, steamids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMultiplexMessage, replytogc_),
  1,
  0,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMultiplexMessage_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMultiplexMessage_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCMultiplexMessage_Response, msgtype_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCToGCMsgMasterAck, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCToGCMsgMasterAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCToGCMsgMasterAck, dir_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCToGCMsgMasterAck, gc_type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCToGCMsgMasterAck_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCToGCMsgMasterAck_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCToGCMsgMasterAck_Response, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCToGCMsgMasterStartupComplete, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCToGCMsgMasterStartupComplete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCToGCMsgRouted, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCToGCMsgRouted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCToGCMsgRouted, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCToGCMsgRouted, sender_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCToGCMsgRouted, net_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCToGCMsgRouted, ip_),
  2,
  1,
  0,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCToGCMsgRoutedReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCToGCMsgRoutedReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCToGCMsgRoutedReply, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCToGCMsgRoutedReply, net_message_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCUpdateSessionIP, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCUpdateSessionIP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCUpdateSessionIP, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCUpdateSessionIP, ip_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestSessionIP, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestSessionIP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestSessionIP, steamid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestSessionIPResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestSessionIPResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestSessionIPResponse, ip_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheHaveVersion, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheHaveVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheHaveVersion, soid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSOCacheHaveVersion, version_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientHello, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientHello, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientHello, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientHello, socache_have_versions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientHello, client_session_need_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientHello, client_launcher_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientHello, partner_srcid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientHello, partner_accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientHello, partner_accountflags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientHello, partner_accountbalance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientHello, steam_launcher_),
  0,
  ~0u,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerHello, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerHello, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerHello, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerHello, socache_have_versions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerHello, legacy_client_session_need_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerHello, client_launcher_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerHello, legacy_steamdatagram_routing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerHello, required_internal_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerHello, steamdatagram_login_),
  2,
  ~0u,
  3,
  4,
  0,
  5,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWelcome_Location, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWelcome_Location, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWelcome_Location, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWelcome_Location, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWelcome_Location, country_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWelcome, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWelcome, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWelcome, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWelcome, game_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWelcome, outofdate_subscribed_caches_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWelcome, uptodate_subscribed_caches_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWelcome, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWelcome, game_data2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWelcome, rtime32_gc_welcome_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWelcome, currency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWelcome, balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWelcome, balance_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWelcome, txn_country_code_),
  5,
  0,
  ~0u,
  ~0u,
  4,
  1,
  6,
  7,
  8,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgConnectionStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgConnectionStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgConnectionStatus, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgConnectionStatus, client_session_need_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgConnectionStatus, queue_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgConnectionStatus, queue_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgConnectionStatus, wait_seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgConnectionStatus, estimated_wait_seconds_remaining_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription, gameitemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription, item_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription, one_per_account_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock, descriptions_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_PopulateItemDescriptions_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_PopulateItemDescriptions_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_PopulateItemDescriptions_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_PopulateItemDescriptions_Request, languages_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetContributors_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetContributors_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetContributors_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetContributors_Request, gameitemid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetContributors_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetContributors_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetContributors_Response, contributors_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule, workshop_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule, revenue_percentage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule, rule_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule, rule_type_),
  1,
  2,
  0,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule, workshop_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule, rule_description_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule, revenue_percentage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule, rule_description_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request, gameitemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request, associated_workshop_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request, partner_accounts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request, validate_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request, make_workshop_files_subscribable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Request, associated_workshop_file_for_direct_payments_),
  1,
  2,
  ~0u,
  ~0u,
  3,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_SetItemPaymentRules_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGameServers_AggregationQuery_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGameServers_AggregationQuery_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGameServers_AggregationQuery_Request, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGameServers_AggregationQuery_Request, group_fields_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGameServers_AggregationQuery_Response_Group, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGameServers_AggregationQuery_Response_Group, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGameServers_AggregationQuery_Response_Group, group_values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGameServers_AggregationQuery_Response_Group, servers_empty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGameServers_AggregationQuery_Response_Group, servers_full_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGameServers_AggregationQuery_Response_Group, servers_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGameServers_AggregationQuery_Response_Group, players_humans_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGameServers_AggregationQuery_Response_Group, players_bots_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGameServers_AggregationQuery_Response_Group, player_capacity_),
  ~0u,
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGameServers_AggregationQuery_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGameServers_AggregationQuery_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGameServers_AggregationQuery_Response, groups_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_AddSpecialPayment_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_AddSpecialPayment_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_AddSpecialPayment_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_AddSpecialPayment_Request, gameitemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_AddSpecialPayment_Request, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_AddSpecialPayment_Request, payment_us_usd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_AddSpecialPayment_Request, payment_row_usd_),
  1,
  2,
  0,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_AddSpecialPayment_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_AddSpecialPayment_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProductInfo_SetRichPresenceLocalization_Request_Token, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProductInfo_SetRichPresenceLocalization_Request_Token, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProductInfo_SetRichPresenceLocalization_Request_Token, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProductInfo_SetRichPresenceLocalization_Request_Token, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProductInfo_SetRichPresenceLocalization_Request_LanguageSection, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProductInfo_SetRichPresenceLocalization_Request_LanguageSection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProductInfo_SetRichPresenceLocalization_Request_LanguageSection, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProductInfo_SetRichPresenceLocalization_Request_LanguageSection, tokens_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProductInfo_SetRichPresenceLocalization_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProductInfo_SetRichPresenceLocalization_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProductInfo_SetRichPresenceLocalization_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProductInfo_SetRichPresenceLocalization_Request, languages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProductInfo_SetRichPresenceLocalization_Request, steamid_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProductInfo_SetRichPresenceLocalization_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProductInfo_SetRichPresenceLocalization_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 6, sizeof(CMsgSOIDOwner)},
  { 8, 16, sizeof(CMsgSOSingleObject)},
  { 20, 26, sizeof(CMsgSOMultipleObjects_SingleObject)},
  { 28, 35, sizeof(CMsgSOMultipleObjects)},
  { 38, 44, sizeof(CMsgSOCacheSubscribed_SubscribedType)},
  { 46, 53, sizeof(CMsgSOCacheSubscribed)},
  { 56, 61, sizeof(CMsgSOCacheUnsubscribed)},
  { 62, 68, sizeof(CMsgSOCacheSubscriptionCheck)},
  { 70, 75, sizeof(CMsgSOCacheSubscriptionRefresh)},
  { 76, 81, sizeof(CMsgSOCacheVersion)},
  { 82, 104, sizeof(CMsgAccountDetails)},
  { 122, 130, sizeof(CMsgGCMultiplexMessage)},
  { 134, 139, sizeof(CMsgGCMultiplexMessage_Response)},
  { 140, 146, sizeof(CGCToGCMsgMasterAck)},
  { 148, 153, sizeof(CGCToGCMsgMasterAck_Response)},
  { 154, 158, sizeof(CGCToGCMsgMasterStartupComplete)},
  { 158, 166, sizeof(CGCToGCMsgRouted)},
  { 170, 176, sizeof(CGCToGCMsgRoutedReply)},
  { 178, 184, sizeof(CMsgGCUpdateSessionIP)},
  { 186, 191, sizeof(CMsgGCRequestSessionIP)},
  { 192, 197, sizeof(CMsgGCRequestSessionIPResponse)},
  { 198, 204, sizeof(CMsgSOCacheHaveVersion)},
  { 206, 219, sizeof(CMsgClientHello)},
  { 228, 239, sizeof(CMsgServerHello)},
  { 246, 253, sizeof(CMsgClientWelcome_Location)},
  { 256, 271, sizeof(CMsgClientWelcome)},
  { 282, 292, sizeof(CMsgConnectionStatus)},
  { 298, 305, sizeof(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription)},
  { 308, 314, sizeof(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock)},
  { 316, 322, sizeof(CWorkshop_PopulateItemDescriptions_Request)},
  { 324, 330, sizeof(CWorkshop_GetContributors_Request)},
  { 332, 337, sizeof(CWorkshop_GetContributors_Response)},
  { 338, 346, sizeof(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule)},
  { 350, 356, sizeof(CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule)},
  { 358, 365, sizeof(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule)},
  { 368, 379, sizeof(CWorkshop_SetItemPaymentRules_Request)},
  { 386, 390, sizeof(CWorkshop_SetItemPaymentRules_Response)},
  { 390, 396, sizeof(CGameServers_AggregationQuery_Request)},
  { 398, 409, sizeof(CGameServers_AggregationQuery_Response_Group)},
  { 416, 421, sizeof(CGameServers_AggregationQuery_Response)},
  { 422, 431, sizeof(CWorkshop_AddSpecialPayment_Request)},
  { 436, 440, sizeof(CWorkshop_AddSpecialPayment_Response)},
  { 440, 446, sizeof(CProductInfo_SetRichPresenceLocalization_Request_Token)},
  { 448, 454, sizeof(CProductInfo_SetRichPresenceLocalization_Request_LanguageSection)},
  { 456, 463, sizeof(CProductInfo_SetRichPresenceLocalization_Request)},
  { 466, 470, sizeof(CProductInfo_SetRichPresenceLocalization_Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgSOIDOwner_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgSOSingleObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgSOMultipleObjects_SingleObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgSOMultipleObjects_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgSOCacheSubscribed_SubscribedType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgSOCacheSubscribed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgSOCacheUnsubscribed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgSOCacheSubscriptionCheck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgSOCacheSubscriptionRefresh_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgSOCacheVersion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgAccountDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCMultiplexMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCMultiplexMessage_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CGCToGCMsgMasterAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CGCToGCMsgMasterAck_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CGCToGCMsgMasterStartupComplete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CGCToGCMsgRouted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CGCToGCMsgRoutedReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCUpdateSessionIP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCRequestSessionIP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCRequestSessionIPResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgSOCacheHaveVersion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientHello_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgServerHello_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientWelcome_Location_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientWelcome_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgConnectionStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CWorkshop_PopulateItemDescriptions_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CWorkshop_GetContributors_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CWorkshop_GetContributors_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CWorkshop_SetItemPaymentRules_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CWorkshop_SetItemPaymentRules_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CGameServers_AggregationQuery_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CGameServers_AggregationQuery_Response_Group_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CGameServers_AggregationQuery_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CWorkshop_AddSpecialPayment_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CWorkshop_AddSpecialPayment_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CProductInfo_SetRichPresenceLocalization_Request_Token_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CProductInfo_SetRichPresenceLocalization_Request_LanguageSection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CProductInfo_SetRichPresenceLocalization_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CProductInfo_SetRichPresenceLocalization_Response_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "gcsdk_gcmessages.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 46);
}

}  // namespace

void TableStruct::Shutdown() {
  _CMsgSOIDOwner_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CMsgSOSingleObject_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CMsgSOMultipleObjects_SingleObject_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _CMsgSOMultipleObjects_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _CMsgSOCacheSubscribed_SubscribedType_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _CMsgSOCacheSubscribed_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _CMsgSOCacheUnsubscribed_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _CMsgSOCacheSubscriptionCheck_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _CMsgSOCacheSubscriptionRefresh_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _CMsgSOCacheVersion_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _CMsgAccountDetails_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _CMsgGCMultiplexMessage_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _CMsgGCMultiplexMessage_Response_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _CGCToGCMsgMasterAck_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _CGCToGCMsgMasterAck_Response_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _CGCToGCMsgMasterStartupComplete_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _CGCToGCMsgRouted_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _CGCToGCMsgRoutedReply_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _CMsgGCUpdateSessionIP_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _CMsgGCRequestSessionIP_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _CMsgGCRequestSessionIPResponse_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _CMsgSOCacheHaveVersion_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _CMsgClientHello_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _CMsgServerHello_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _CMsgClientWelcome_Location_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _CMsgClientWelcome_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _CMsgConnectionStatus_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _CWorkshop_PopulateItemDescriptions_Request_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _CWorkshop_GetContributors_Request_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _CWorkshop_GetContributors_Response_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
  _CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule_default_instance_.Shutdown();
  delete file_level_metadata[34].reflection;
  _CWorkshop_SetItemPaymentRules_Request_default_instance_.Shutdown();
  delete file_level_metadata[35].reflection;
  _CWorkshop_SetItemPaymentRules_Response_default_instance_.Shutdown();
  delete file_level_metadata[36].reflection;
  _CGameServers_AggregationQuery_Request_default_instance_.Shutdown();
  delete file_level_metadata[37].reflection;
  _CGameServers_AggregationQuery_Response_Group_default_instance_.Shutdown();
  delete file_level_metadata[38].reflection;
  _CGameServers_AggregationQuery_Response_default_instance_.Shutdown();
  delete file_level_metadata[39].reflection;
  _CWorkshop_AddSpecialPayment_Request_default_instance_.Shutdown();
  delete file_level_metadata[40].reflection;
  _CWorkshop_AddSpecialPayment_Response_default_instance_.Shutdown();
  delete file_level_metadata[41].reflection;
  _CProductInfo_SetRichPresenceLocalization_Request_Token_default_instance_.Shutdown();
  delete file_level_metadata[42].reflection;
  _CProductInfo_SetRichPresenceLocalization_Request_LanguageSection_default_instance_.Shutdown();
  delete file_level_metadata[43].reflection;
  _CProductInfo_SetRichPresenceLocalization_Request_default_instance_.Shutdown();
  delete file_level_metadata[44].reflection;
  _CProductInfo_SetRichPresenceLocalization_Response_default_instance_.Shutdown();
  delete file_level_metadata[45].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_steammessages_2eproto::InitDefaults();
  _CMsgSOIDOwner_default_instance_.DefaultConstruct();
  _CMsgSOSingleObject_default_instance_.DefaultConstruct();
  _CMsgSOMultipleObjects_SingleObject_default_instance_.DefaultConstruct();
  _CMsgSOMultipleObjects_default_instance_.DefaultConstruct();
  _CMsgSOCacheSubscribed_SubscribedType_default_instance_.DefaultConstruct();
  _CMsgSOCacheSubscribed_default_instance_.DefaultConstruct();
  _CMsgSOCacheUnsubscribed_default_instance_.DefaultConstruct();
  _CMsgSOCacheSubscriptionCheck_default_instance_.DefaultConstruct();
  _CMsgSOCacheSubscriptionRefresh_default_instance_.DefaultConstruct();
  _CMsgSOCacheVersion_default_instance_.DefaultConstruct();
  _CMsgAccountDetails_default_instance_.DefaultConstruct();
  _CMsgGCMultiplexMessage_default_instance_.DefaultConstruct();
  _CMsgGCMultiplexMessage_Response_default_instance_.DefaultConstruct();
  _CGCToGCMsgMasterAck_default_instance_.DefaultConstruct();
  _CGCToGCMsgMasterAck_Response_default_instance_.DefaultConstruct();
  _CGCToGCMsgMasterStartupComplete_default_instance_.DefaultConstruct();
  _CGCToGCMsgRouted_default_instance_.DefaultConstruct();
  _CGCToGCMsgRoutedReply_default_instance_.DefaultConstruct();
  _CMsgGCUpdateSessionIP_default_instance_.DefaultConstruct();
  _CMsgGCRequestSessionIP_default_instance_.DefaultConstruct();
  _CMsgGCRequestSessionIPResponse_default_instance_.DefaultConstruct();
  _CMsgSOCacheHaveVersion_default_instance_.DefaultConstruct();
  _CMsgClientHello_default_instance_.DefaultConstruct();
  _CMsgServerHello_default_instance_.DefaultConstruct();
  _CMsgClientWelcome_Location_default_instance_.DefaultConstruct();
  _CMsgClientWelcome_default_instance_.DefaultConstruct();
  _CMsgConnectionStatus_default_instance_.DefaultConstruct();
  _CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription_default_instance_.DefaultConstruct();
  _CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock_default_instance_.DefaultConstruct();
  _CWorkshop_PopulateItemDescriptions_Request_default_instance_.DefaultConstruct();
  _CWorkshop_GetContributors_Request_default_instance_.DefaultConstruct();
  _CWorkshop_GetContributors_Response_default_instance_.DefaultConstruct();
  _CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule_default_instance_.DefaultConstruct();
  _CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule_default_instance_.DefaultConstruct();
  _CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule_default_instance_.DefaultConstruct();
  _CWorkshop_SetItemPaymentRules_Request_default_instance_.DefaultConstruct();
  _CWorkshop_SetItemPaymentRules_Response_default_instance_.DefaultConstruct();
  _CGameServers_AggregationQuery_Request_default_instance_.DefaultConstruct();
  _CGameServers_AggregationQuery_Response_Group_default_instance_.DefaultConstruct();
  _CGameServers_AggregationQuery_Response_default_instance_.DefaultConstruct();
  _CWorkshop_AddSpecialPayment_Request_default_instance_.DefaultConstruct();
  _CWorkshop_AddSpecialPayment_Response_default_instance_.DefaultConstruct();
  _CProductInfo_SetRichPresenceLocalization_Request_Token_default_instance_.DefaultConstruct();
  _CProductInfo_SetRichPresenceLocalization_Request_LanguageSection_default_instance_.DefaultConstruct();
  _CProductInfo_SetRichPresenceLocalization_Request_default_instance_.DefaultConstruct();
  _CProductInfo_SetRichPresenceLocalization_Response_default_instance_.DefaultConstruct();
  _CMsgSOSingleObject_default_instance_.get_mutable()->owner_soid_ = const_cast< ::CMsgSOIDOwner*>(
      ::CMsgSOIDOwner::internal_default_instance());
  _CMsgSOMultipleObjects_default_instance_.get_mutable()->owner_soid_ = const_cast< ::CMsgSOIDOwner*>(
      ::CMsgSOIDOwner::internal_default_instance());
  _CMsgSOCacheSubscribed_default_instance_.get_mutable()->owner_soid_ = const_cast< ::CMsgSOIDOwner*>(
      ::CMsgSOIDOwner::internal_default_instance());
  _CMsgSOCacheUnsubscribed_default_instance_.get_mutable()->owner_soid_ = const_cast< ::CMsgSOIDOwner*>(
      ::CMsgSOIDOwner::internal_default_instance());
  _CMsgSOCacheSubscriptionCheck_default_instance_.get_mutable()->owner_soid_ = const_cast< ::CMsgSOIDOwner*>(
      ::CMsgSOIDOwner::internal_default_instance());
  _CMsgSOCacheSubscriptionRefresh_default_instance_.get_mutable()->owner_soid_ = const_cast< ::CMsgSOIDOwner*>(
      ::CMsgSOIDOwner::internal_default_instance());
  _CMsgSOCacheHaveVersion_default_instance_.get_mutable()->soid_ = const_cast< ::CMsgSOIDOwner*>(
      ::CMsgSOIDOwner::internal_default_instance());
  _CMsgClientWelcome_default_instance_.get_mutable()->location_ = const_cast< ::CMsgClientWelcome_Location*>(
      ::CMsgClientWelcome_Location::internal_default_instance());
  _CWorkshop_SetItemPaymentRules_Request_default_instance_.get_mutable()->associated_workshop_file_for_direct_payments_ = const_cast< ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule*>(
      ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\026gcsdk_gcmessages.proto\032\023steammessages."
      "proto\")\n\rCMsgSOIDOwner\022\014\n\004type\030\001 \001(\r\022\n\n\002"
      "id\030\002 \001(\004\"o\n\022CMsgSOSingleObject\022\017\n\007type_i"
      "d\030\002 \001(\005\022\023\n\013object_data\030\003 \001(\014\022\017\n\007version\030"
      "\004 \001(\006\022\"\n\nowner_soid\030\005 \001(\0132\016.CMsgSOIDOwne"
      "r\"\315\001\n\025CMsgSOMultipleObjects\022=\n\020objects_m"
      "odified\030\002 \003(\0132#.CMsgSOMultipleObjects.Si"
      "ngleObject\022\017\n\007version\030\003 \001(\006\022\"\n\nowner_soi"
      "d\030\006 \001(\0132\016.CMsgSOIDOwner\032@\n\014SingleObject\022"
      "\017\n\007type_id\030\001 \001(\005\022\023\n\013object_data\030\002 \001(\014:\n\200"
      "\246\035\200\002\210\246\035\200\010\"\274\001\n\025CMsgSOCacheSubscribed\0226\n\007o"
      "bjects\030\002 \003(\0132%.CMsgSOCacheSubscribed.Sub"
      "scribedType\022\017\n\007version\030\003 \001(\006\022\"\n\nowner_so"
      "id\030\004 \001(\0132\016.CMsgSOIDOwner\0326\n\016SubscribedTy"
      "pe\022\017\n\007type_id\030\001 \001(\005\022\023\n\013object_data\030\002 \003(\014"
      "\"=\n\027CMsgSOCacheUnsubscribed\022\"\n\nowner_soi"
      "d\030\002 \001(\0132\016.CMsgSOIDOwner\"S\n\034CMsgSOCacheSu"
      "bscriptionCheck\022\017\n\007version\030\002 \001(\006\022\"\n\nowne"
      "r_soid\030\003 \001(\0132\016.CMsgSOIDOwner\"D\n\036CMsgSOCa"
      "cheSubscriptionRefresh\022\"\n\nowner_soid\030\002 \001"
      "(\0132\016.CMsgSOIDOwner\"%\n\022CMsgSOCacheVersion"
      "\022\017\n\007version\030\001 \001(\006\"\250\003\n\022CMsgAccountDetails"
      "\022\r\n\005valid\030\001 \001(\010\022\024\n\014account_name\030\002 \001(\t\022\026\n"
      "\016public_profile\030\004 \001(\010\022\030\n\020public_inventor"
      "y\030\005 \001(\010\022\022\n\nvac_banned\030\006 \001(\010\022\022\n\ncyber_caf"
      "e\030\007 \001(\010\022\026\n\016school_account\030\010 \001(\010\022\032\n\022free_"
      "trial_account\030\t \001(\010\022\022\n\nsubscribed\030\n \001(\010\022"
      "\024\n\014low_violence\030\013 \001(\010\022\017\n\007limited\030\014 \001(\010\022\017"
      "\n\007trusted\030\r \001(\010\022\017\n\007package\030\016 \001(\r\022\023\n\013time"
      "_cached\030\017 \001(\007\022\026\n\016account_locked\030\020 \001(\010\022\030\n"
      "\020community_banned\030\021 \001(\010\022\024\n\014trade_banned\030"
      "\022 \001(\010\022%\n\035eligible_for_community_market\030\023"
      " \001(\010\"_\n\026CMsgGCMultiplexMessage\022\017\n\007msgtyp"
      "e\030\001 \001(\r\022\017\n\007payload\030\002 \001(\014\022\020\n\010steamids\030\003 \003"
      "(\006\022\021\n\treplytogc\030\004 \001(\010\"2\n\037CMsgGCMultiplex"
      "Message_Response\022\017\n\007msgtype\030\001 \001(\r\"9\n\023CGC"
      "ToGCMsgMasterAck\022\021\n\tdir_index\030\001 \001(\r\022\017\n\007g"
      "c_type\030\002 \001(\r\"2\n\034CGCToGCMsgMasterAck_Resp"
      "onse\022\022\n\007eresult\030\001 \001(\005:\0012\"!\n\037CGCToGCMsgMa"
      "sterStartupComplete\"X\n\020CGCToGCMsgRouted\022"
      "\020\n\010msg_type\030\001 \001(\r\022\021\n\tsender_id\030\002 \001(\006\022\023\n\013"
      "net_message\030\003 \001(\014\022\n\n\002ip\030\004 \001(\r\">\n\025CGCToGC"
      "MsgRoutedReply\022\020\n\010msg_type\030\001 \001(\r\022\023\n\013net_"
      "message\030\002 \001(\014\"4\n\025CMsgGCUpdateSessionIP\022\017"
      "\n\007steamid\030\001 \001(\006\022\n\n\002ip\030\002 \001(\007\")\n\026CMsgGCReq"
      "uestSessionIP\022\017\n\007steamid\030\001 \001(\006\",\n\036CMsgGC"
      "RequestSessionIPResponse\022\n\n\002ip\030\001 \001(\007\"G\n\026"
      "CMsgSOCacheHaveVersion\022\034\n\004soid\030\001 \001(\0132\016.C"
      "MsgSOIDOwner\022\017\n\007version\030\002 \001(\006\"\230\002\n\017CMsgCl"
      "ientHello\022\017\n\007version\030\001 \001(\r\0226\n\025socache_ha"
      "ve_versions\030\002 \003(\0132\027.CMsgSOCacheHaveVersi"
      "on\022\033\n\023client_session_need\030\003 \001(\r\022\027\n\017clien"
      "t_launcher\030\004 \001(\r\022\025\n\rpartner_srcid\030\005 \001(\r\022"
      "\031\n\021partner_accountid\030\006 \001(\r\022\034\n\024partner_ac"
      "countflags\030\007 \001(\r\022\036\n\026partner_accountbalan"
      "ce\030\010 \001(\r\022\026\n\016steam_launcher\030\t \001(\r\"\372\001\n\017CMs"
      "gServerHello\022\017\n\007version\030\001 \001(\r\0226\n\025socache"
      "_have_versions\030\002 \003(\0132\027.CMsgSOCacheHaveVe"
      "rsion\022\"\n\032legacy_client_session_need\030\003 \001("
      "\r\022\027\n\017client_launcher\030\004 \001(\r\022$\n\034legacy_ste"
      "amdatagram_routing\030\006 \001(\014\022\036\n\026required_int"
      "ernal_addr\030\007 \001(\r\022\033\n\023steamdatagram_login\030"
      "\010 \001(\014\"\264\003\n\021CMsgClientWelcome\022\017\n\007version\030\001"
      " \001(\r\022\021\n\tgame_data\030\002 \001(\014\022;\n\033outofdate_sub"
      "scribed_caches\030\003 \003(\0132\026.CMsgSOCacheSubscr"
      "ibed\022A\n\032uptodate_subscribed_caches\030\004 \003(\013"
      "2\035.CMsgSOCacheSubscriptionCheck\022-\n\010locat"
      "ion\030\005 \001(\0132\033.CMsgClientWelcome.Location\022\022"
      "\n\ngame_data2\030\006 \001(\014\022$\n\034rtime32_gc_welcome"
      "_timestamp\030\007 \001(\r\022\020\n\010currency\030\010 \001(\r\022\017\n\007ba"
      "lance\030\t \001(\r\022\023\n\013balance_url\030\n \001(\t\022\030\n\020txn_"
      "country_code\030\013 \001(\t\032@\n\010Location\022\020\n\010latitu"
      "de\030\001 \001(\002\022\021\n\tlongitude\030\002 \001(\002\022\017\n\007country\030\003"
      " \001(\t\"\345\001\n\024CMsgConnectionStatus\022D\n\006status\030"
      "\001 \001(\0162\023.GCConnectionStatus:\037GCConnection"
      "Status_HAVE_SESSION\022\033\n\023client_session_ne"
      "ed\030\002 \001(\r\022\026\n\016queue_position\030\003 \001(\005\022\022\n\nqueu"
      "e_size\030\004 \001(\005\022\024\n\014wait_seconds\030\005 \001(\005\022(\n es"
      "timated_wait_seconds_remaining\030\006 \001(\005\"\206\003\n"
      "*CWorkshop_PopulateItemDescriptions_Requ"
      "est\022\r\n\005appid\030\001 \001(\r\022\\\n\tlanguages\030\002 \003(\0132I."
      "CWorkshop_PopulateItemDescriptions_Reque"
      "st.ItemDescriptionsLanguageBlock\032^\n\025Sing"
      "leItemDescription\022\022\n\ngameitemid\030\001 \001(\r\022\030\n"
      "\020item_description\030\002 \001(\t\022\027\n\017one_per_accou"
      "nt\030\003 \001(\010\032\212\001\n\035ItemDescriptionsLanguageBlo"
      "ck\022\020\n\010language\030\001 \001(\t\022W\n\014descriptions\030\002 \003"
      "(\0132A.CWorkshop_PopulateItemDescriptions_"
      "Request.SingleItemDescription\"F\n!CWorksh"
      "op_GetContributors_Request\022\r\n\005appid\030\001 \001("
      "\r\022\022\n\ngameitemid\030\002 \001(\r\":\n\"CWorkshop_GetCo"
      "ntributors_Response\022\024\n\014contributors\030\001 \003("
      "\006\"\365\005\n%CWorkshop_SetItemPaymentRules_Requ"
      "est\022\r\n\005appid\030\001 \001(\r\022\022\n\ngameitemid\030\002 \001(\r\022a"
      "\n\031associated_workshop_files\030\003 \003(\0132>.CWor"
      "kshop_SetItemPaymentRules_Request.Worksh"
      "opItemPaymentRule\022W\n\020partner_accounts\030\004 "
      "\003(\0132=.CWorkshop_SetItemPaymentRules_Requ"
      "est.PartnerItemPaymentRule\022\025\n\rvalidate_o"
      "nly\030\005 \001(\010\022(\n make_workshop_files_subscri"
      "bable\030\006 \001(\010\022v\n,associated_workshop_file_"
      "for_direct_payments\030\007 \001(\0132@.CWorkshop_Se"
      "tItemPaymentRules_Request.WorkshopDirect"
      "PaymentRule\032\177\n\027WorkshopItemPaymentRule\022\030"
      "\n\020workshop_file_id\030\001 \001(\004\022\032\n\022revenue_perc"
      "entage\030\002 \001(\002\022\030\n\020rule_description\030\003 \001(\t\022\024"
      "\n\trule_type\030\004 \001(\r:\0011\032O\n\031WorkshopDirectPa"
      "ymentRule\022\030\n\020workshop_file_id\030\001 \001(\004\022\030\n\020r"
      "ule_description\030\002 \001(\t\032b\n\026PartnerItemPaym"
      "entRule\022\022\n\naccount_id\030\001 \001(\r\022\032\n\022revenue_p"
      "ercentage\030\002 \001(\002\022\030\n\020rule_description\030\003 \001("
      "\t\"(\n&CWorkshop_SetItemPaymentRules_Respo"
      "nse\"M\n%CGameServers_AggregationQuery_Req"
      "uest\022\016\n\006filter\030\001 \001(\t\022\024\n\014group_fields\030\003 \003"
      "(\t\"\222\002\n&CGameServers_AggregationQuery_Res"
      "ponse\022=\n\006groups\030\001 \003(\0132-.CGameServers_Agg"
      "regationQuery_Response.Group\032\250\001\n\005Group\022\024"
      "\n\014group_values\030\001 \003(\t\022\025\n\rservers_empty\030\002 "
      "\001(\r\022\024\n\014servers_full\030\003 \001(\r\022\025\n\rservers_tot"
      "al\030\004 \001(\r\022\026\n\016players_humans\030\005 \001(\r\022\024\n\014play"
      "ers_bots\030\006 \001(\r\022\027\n\017player_capacity\030\007 \001(\r\""
      "\207\001\n#CWorkshop_AddSpecialPayment_Request\022"
      "\r\n\005appid\030\001 \001(\r\022\022\n\ngameitemid\030\002 \001(\r\022\014\n\004da"
      "te\030\003 \001(\t\022\026\n\016payment_us_usd\030\004 \001(\004\022\027\n\017paym"
      "ent_row_usd\030\005 \001(\004\"&\n$CWorkshop_AddSpecia"
      "lPayment_Response\"\275\002\n0CProductInfo_SetRi"
      "chPresenceLocalization_Request\022\r\n\005appid\030"
      "\001 \001(\r\022T\n\tlanguages\030\002 \003(\0132A.CProductInfo_"
      "SetRichPresenceLocalization_Request.Lang"
      "uageSection\022\017\n\007steamid\030\003 \001(\004\032%\n\005Token\022\r\n"
      "\005token\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\032l\n\017LanguageS"
      "ection\022\020\n\010language\030\001 \001(\t\022G\n\006tokens\030\002 \003(\013"
      "27.CProductInfo_SetRichPresenceLocalizat"
      "ion_Request.Token\"3\n1CProductInfo_SetRic"
      "hPresenceLocalization_Response*_\n\024GCClie"
      "ntLauncherType\022 \n\034GCClientLauncherType_D"
      "EFAULT\020\000\022%\n!GCClientLauncherType_PERFECT"
      "WORLD\020\001*\325\001\n\022GCConnectionStatus\022#\n\037GCConn"
      "ectionStatus_HAVE_SESSION\020\000\022$\n GCConnect"
      "ionStatus_GC_GOING_DOWN\020\001\022!\n\035GCConnectio"
      "nStatus_NO_SESSION\020\002\0220\n,GCConnectionStat"
      "us_NO_SESSION_IN_LOGON_QUEUE\020\003\022\037\n\033GCConn"
      "ectionStatus_NO_STEAM\020\004B\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5710);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gcsdk_gcmessages.proto", &protobuf_RegisterTypes);
  ::protobuf_steammessages_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_gcsdk_5fgcmessages_2eproto

const ::google::protobuf::EnumDescriptor* GCClientLauncherType_descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_enum_descriptors[0];
}
bool GCClientLauncherType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GCConnectionStatus_descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_enum_descriptors[1];
}
bool GCConnectionStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOIDOwner::kTypeFieldNumber;
const int CMsgSOIDOwner::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOIDOwner::CMsgSOIDOwner()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOIDOwner)
}
CMsgSOIDOwner::CMsgSOIDOwner(const CMsgSOIDOwner& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:CMsgSOIDOwner)
}

void CMsgSOIDOwner::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_) + sizeof(type_));
}

CMsgSOIDOwner::~CMsgSOIDOwner() {
  // @@protoc_insertion_point(destructor:CMsgSOIDOwner)
  SharedDtor();
}

void CMsgSOIDOwner::SharedDtor() {
}

void CMsgSOIDOwner::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOIDOwner::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[0].descriptor;
}

const CMsgSOIDOwner& CMsgSOIDOwner::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgSOIDOwner* CMsgSOIDOwner::New(::google::protobuf::Arena* arena) const {
  CMsgSOIDOwner* n = new CMsgSOIDOwner;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOIDOwner::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOIDOwner)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOIDOwner::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOIDOwner)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (tag == 8u) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 id = 2;
      case 2: {
        if (tag == 16u) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOIDOwner)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOIDOwner)
  return false;
#undef DO_
}

void CMsgSOIDOwner::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOIDOwner)
  // optional uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional uint64 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOIDOwner)
}

::google::protobuf::uint8* CMsgSOIDOwner::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOIDOwner)
  // optional uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional uint64 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOIDOwner)
  return target;
}

size_t CMsgSOIDOwner::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOIDOwner)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOIDOwner::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOIDOwner)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOIDOwner* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOIDOwner>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOIDOwner)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOIDOwner)
    MergeFrom(*source);
  }
}

void CMsgSOIDOwner::MergeFrom(const CMsgSOIDOwner& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOIDOwner)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
}

void CMsgSOIDOwner::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOIDOwner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOIDOwner::CopyFrom(const CMsgSOIDOwner& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOIDOwner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOIDOwner::IsInitialized() const {
  return true;
}

void CMsgSOIDOwner::Swap(CMsgSOIDOwner* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOIDOwner::InternalSwap(CMsgSOIDOwner* other) {
  std::swap(id_, other->id_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOIDOwner::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgSOIDOwner

// optional uint32 type = 1;
bool CMsgSOIDOwner::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgSOIDOwner::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgSOIDOwner::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgSOIDOwner::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 CMsgSOIDOwner::type() const {
  // @@protoc_insertion_point(field_get:CMsgSOIDOwner.type)
  return type_;
}
void CMsgSOIDOwner::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOIDOwner.type)
}

// optional uint64 id = 2;
bool CMsgSOIDOwner::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgSOIDOwner::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgSOIDOwner::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgSOIDOwner::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
::google::protobuf::uint64 CMsgSOIDOwner::id() const {
  // @@protoc_insertion_point(field_get:CMsgSOIDOwner.id)
  return id_;
}
void CMsgSOIDOwner::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOIDOwner.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOSingleObject::kTypeIdFieldNumber;
const int CMsgSOSingleObject::kObjectDataFieldNumber;
const int CMsgSOSingleObject::kVersionFieldNumber;
const int CMsgSOSingleObject::kOwnerSoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOSingleObject::CMsgSOSingleObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOSingleObject)
}
CMsgSOSingleObject::CMsgSOSingleObject(const CMsgSOSingleObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_object_data()) {
    object_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_data_);
  }
  if (from.has_owner_soid()) {
    owner_soid_ = new ::CMsgSOIDOwner(*from.owner_soid_);
  } else {
    owner_soid_ = NULL;
  }
  ::memcpy(&version_, &from.version_,
    reinterpret_cast<char*>(&type_id_) -
    reinterpret_cast<char*>(&version_) + sizeof(type_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgSOSingleObject)
}

void CMsgSOSingleObject::SharedCtor() {
  _cached_size_ = 0;
  object_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&owner_soid_, 0, reinterpret_cast<char*>(&type_id_) -
    reinterpret_cast<char*>(&owner_soid_) + sizeof(type_id_));
}

CMsgSOSingleObject::~CMsgSOSingleObject() {
  // @@protoc_insertion_point(destructor:CMsgSOSingleObject)
  SharedDtor();
}

void CMsgSOSingleObject::SharedDtor() {
  object_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete owner_soid_;
  }
}

void CMsgSOSingleObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOSingleObject::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[1].descriptor;
}

const CMsgSOSingleObject& CMsgSOSingleObject::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgSOSingleObject* CMsgSOSingleObject::New(::google::protobuf::Arena* arena) const {
  CMsgSOSingleObject* n = new CMsgSOSingleObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOSingleObject::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOSingleObject)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_object_data()) {
      GOOGLE_DCHECK(!object_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*object_data_.UnsafeRawStringPointer())->clear();
    }
    if (has_owner_soid()) {
      GOOGLE_DCHECK(owner_soid_ != NULL);
      owner_soid_->::CMsgSOIDOwner::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&version_, 0, reinterpret_cast<char*>(&type_id_) -
      reinterpret_cast<char*>(&version_) + sizeof(type_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOSingleObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOSingleObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type_id = 2;
      case 2: {
        if (tag == 16u) {
          set_has_type_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes object_data = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_object_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 version = 4;
      case 4: {
        if (tag == 33u) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgSOIDOwner owner_soid = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_owner_soid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOSingleObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOSingleObject)
  return false;
#undef DO_
}

void CMsgSOSingleObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOSingleObject)
  // optional int32 type_id = 2;
  if (has_type_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type_id(), output);
  }

  // optional bytes object_data = 3;
  if (has_object_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->object_data(), output);
  }

  // optional fixed64 version = 4;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->version(), output);
  }

  // optional .CMsgSOIDOwner owner_soid = 5;
  if (has_owner_soid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->owner_soid_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOSingleObject)
}

::google::protobuf::uint8* CMsgSOSingleObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOSingleObject)
  // optional int32 type_id = 2;
  if (has_type_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type_id(), target);
  }

  // optional bytes object_data = 3;
  if (has_object_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->object_data(), target);
  }

  // optional fixed64 version = 4;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->version(), target);
  }

  // optional .CMsgSOIDOwner owner_soid = 5;
  if (has_owner_soid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->owner_soid_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOSingleObject)
  return target;
}

size_t CMsgSOSingleObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOSingleObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes object_data = 3;
    if (has_object_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->object_data());
    }

    // optional .CMsgSOIDOwner owner_soid = 5;
    if (has_owner_soid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->owner_soid_);
    }

    // optional fixed64 version = 4;
    if (has_version()) {
      total_size += 1 + 8;
    }

    // optional int32 type_id = 2;
    if (has_type_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOSingleObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOSingleObject)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOSingleObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOSingleObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOSingleObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOSingleObject)
    MergeFrom(*source);
  }
}

void CMsgSOSingleObject::MergeFrom(const CMsgSOSingleObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOSingleObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_object_data()) {
      set_has_object_data();
      object_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_data_);
    }
    if (from.has_owner_soid()) {
      mutable_owner_soid()->::CMsgSOIDOwner::MergeFrom(from.owner_soid());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_type_id()) {
      set_type_id(from.type_id());
    }
  }
}

void CMsgSOSingleObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOSingleObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOSingleObject::CopyFrom(const CMsgSOSingleObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOSingleObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOSingleObject::IsInitialized() const {
  return true;
}

void CMsgSOSingleObject::Swap(CMsgSOSingleObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOSingleObject::InternalSwap(CMsgSOSingleObject* other) {
  object_data_.Swap(&other->object_data_);
  std::swap(owner_soid_, other->owner_soid_);
  std::swap(version_, other->version_);
  std::swap(type_id_, other->type_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOSingleObject::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgSOSingleObject

// optional int32 type_id = 2;
bool CMsgSOSingleObject::has_type_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgSOSingleObject::set_has_type_id() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgSOSingleObject::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgSOSingleObject::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
::google::protobuf::int32 CMsgSOSingleObject::type_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOSingleObject.type_id)
  return type_id_;
}
void CMsgSOSingleObject::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOSingleObject.type_id)
}

// optional bytes object_data = 3;
bool CMsgSOSingleObject::has_object_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgSOSingleObject::set_has_object_data() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgSOSingleObject::clear_has_object_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgSOSingleObject::clear_object_data() {
  object_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_object_data();
}
const ::std::string& CMsgSOSingleObject::object_data() const {
  // @@protoc_insertion_point(field_get:CMsgSOSingleObject.object_data)
  return object_data_.GetNoArena();
}
void CMsgSOSingleObject::set_object_data(const ::std::string& value) {
  set_has_object_data();
  object_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgSOSingleObject.object_data)
}
#if LANG_CXX11
void CMsgSOSingleObject::set_object_data(::std::string&& value) {
  set_has_object_data();
  object_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgSOSingleObject.object_data)
}
#endif
void CMsgSOSingleObject::set_object_data(const char* value) {
  set_has_object_data();
  object_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgSOSingleObject.object_data)
}
void CMsgSOSingleObject::set_object_data(const void* value, size_t size) {
  set_has_object_data();
  object_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgSOSingleObject.object_data)
}
::std::string* CMsgSOSingleObject::mutable_object_data() {
  set_has_object_data();
  // @@protoc_insertion_point(field_mutable:CMsgSOSingleObject.object_data)
  return object_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgSOSingleObject::release_object_data() {
  // @@protoc_insertion_point(field_release:CMsgSOSingleObject.object_data)
  clear_has_object_data();
  return object_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgSOSingleObject::set_allocated_object_data(::std::string* object_data) {
  if (object_data != NULL) {
    set_has_object_data();
  } else {
    clear_has_object_data();
  }
  object_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_data);
  // @@protoc_insertion_point(field_set_allocated:CMsgSOSingleObject.object_data)
}

// optional fixed64 version = 4;
bool CMsgSOSingleObject::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgSOSingleObject::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgSOSingleObject::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgSOSingleObject::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
::google::protobuf::uint64 CMsgSOSingleObject::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOSingleObject.version)
  return version_;
}
void CMsgSOSingleObject::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOSingleObject.version)
}

// optional .CMsgSOIDOwner owner_soid = 5;
bool CMsgSOSingleObject::has_owner_soid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgSOSingleObject::set_has_owner_soid() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgSOSingleObject::clear_has_owner_soid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgSOSingleObject::clear_owner_soid() {
  if (owner_soid_ != NULL) owner_soid_->::CMsgSOIDOwner::Clear();
  clear_has_owner_soid();
}
const ::CMsgSOIDOwner& CMsgSOSingleObject::owner_soid() const {
  // @@protoc_insertion_point(field_get:CMsgSOSingleObject.owner_soid)
  return owner_soid_ != NULL ? *owner_soid_
                         : *::CMsgSOIDOwner::internal_default_instance();
}
::CMsgSOIDOwner* CMsgSOSingleObject::mutable_owner_soid() {
  set_has_owner_soid();
  if (owner_soid_ == NULL) {
    owner_soid_ = new ::CMsgSOIDOwner;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSOSingleObject.owner_soid)
  return owner_soid_;
}
::CMsgSOIDOwner* CMsgSOSingleObject::release_owner_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOSingleObject.owner_soid)
  clear_has_owner_soid();
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = NULL;
  return temp;
}
void CMsgSOSingleObject::set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid) {
  delete owner_soid_;
  owner_soid_ = owner_soid;
  if (owner_soid) {
    set_has_owner_soid();
  } else {
    clear_has_owner_soid();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSOSingleObject.owner_soid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOMultipleObjects_SingleObject::kTypeIdFieldNumber;
const int CMsgSOMultipleObjects_SingleObject::kObjectDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOMultipleObjects_SingleObject::CMsgSOMultipleObjects_SingleObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOMultipleObjects.SingleObject)
}
CMsgSOMultipleObjects_SingleObject::CMsgSOMultipleObjects_SingleObject(const CMsgSOMultipleObjects_SingleObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_object_data()) {
    object_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_data_);
  }
  type_id_ = from.type_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgSOMultipleObjects.SingleObject)
}

void CMsgSOMultipleObjects_SingleObject::SharedCtor() {
  _cached_size_ = 0;
  object_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_id_ = 0;
}

CMsgSOMultipleObjects_SingleObject::~CMsgSOMultipleObjects_SingleObject() {
  // @@protoc_insertion_point(destructor:CMsgSOMultipleObjects.SingleObject)
  SharedDtor();
}

void CMsgSOMultipleObjects_SingleObject::SharedDtor() {
  object_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgSOMultipleObjects_SingleObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOMultipleObjects_SingleObject::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[2].descriptor;
}

const CMsgSOMultipleObjects_SingleObject& CMsgSOMultipleObjects_SingleObject::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects_SingleObject::New(::google::protobuf::Arena* arena) const {
  CMsgSOMultipleObjects_SingleObject* n = new CMsgSOMultipleObjects_SingleObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOMultipleObjects_SingleObject::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOMultipleObjects.SingleObject)
  if (has_object_data()) {
    GOOGLE_DCHECK(!object_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*object_data_.UnsafeRawStringPointer())->clear();
  }
  type_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOMultipleObjects_SingleObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOMultipleObjects.SingleObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type_id = 1;
      case 1: {
        if (tag == 8u) {
          set_has_type_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes object_data = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_object_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOMultipleObjects.SingleObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOMultipleObjects.SingleObject)
  return false;
#undef DO_
}

void CMsgSOMultipleObjects_SingleObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOMultipleObjects.SingleObject)
  // optional int32 type_id = 1;
  if (has_type_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type_id(), output);
  }

  // optional bytes object_data = 2;
  if (has_object_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->object_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOMultipleObjects.SingleObject)
}

::google::protobuf::uint8* CMsgSOMultipleObjects_SingleObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOMultipleObjects.SingleObject)
  // optional int32 type_id = 1;
  if (has_type_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type_id(), target);
  }

  // optional bytes object_data = 2;
  if (has_object_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->object_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOMultipleObjects.SingleObject)
  return target;
}

size_t CMsgSOMultipleObjects_SingleObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOMultipleObjects.SingleObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes object_data = 2;
    if (has_object_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->object_data());
    }

    // optional int32 type_id = 1;
    if (has_type_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOMultipleObjects_SingleObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOMultipleObjects.SingleObject)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOMultipleObjects_SingleObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOMultipleObjects_SingleObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOMultipleObjects.SingleObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOMultipleObjects.SingleObject)
    MergeFrom(*source);
  }
}

void CMsgSOMultipleObjects_SingleObject::MergeFrom(const CMsgSOMultipleObjects_SingleObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOMultipleObjects.SingleObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_object_data()) {
      set_has_object_data();
      object_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_data_);
    }
    if (from.has_type_id()) {
      set_type_id(from.type_id());
    }
  }
}

void CMsgSOMultipleObjects_SingleObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOMultipleObjects.SingleObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOMultipleObjects_SingleObject::CopyFrom(const CMsgSOMultipleObjects_SingleObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOMultipleObjects.SingleObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOMultipleObjects_SingleObject::IsInitialized() const {
  return true;
}

void CMsgSOMultipleObjects_SingleObject::Swap(CMsgSOMultipleObjects_SingleObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOMultipleObjects_SingleObject::InternalSwap(CMsgSOMultipleObjects_SingleObject* other) {
  object_data_.Swap(&other->object_data_);
  std::swap(type_id_, other->type_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOMultipleObjects_SingleObject::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgSOMultipleObjects_SingleObject

// optional int32 type_id = 1;
bool CMsgSOMultipleObjects_SingleObject::has_type_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgSOMultipleObjects_SingleObject::set_has_type_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgSOMultipleObjects_SingleObject::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgSOMultipleObjects_SingleObject::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
::google::protobuf::int32 CMsgSOMultipleObjects_SingleObject::type_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.SingleObject.type_id)
  return type_id_;
}
void CMsgSOMultipleObjects_SingleObject::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOMultipleObjects.SingleObject.type_id)
}

// optional bytes object_data = 2;
bool CMsgSOMultipleObjects_SingleObject::has_object_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgSOMultipleObjects_SingleObject::set_has_object_data() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgSOMultipleObjects_SingleObject::clear_has_object_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgSOMultipleObjects_SingleObject::clear_object_data() {
  object_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_object_data();
}
const ::std::string& CMsgSOMultipleObjects_SingleObject::object_data() const {
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.SingleObject.object_data)
  return object_data_.GetNoArena();
}
void CMsgSOMultipleObjects_SingleObject::set_object_data(const ::std::string& value) {
  set_has_object_data();
  object_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgSOMultipleObjects.SingleObject.object_data)
}
#if LANG_CXX11
void CMsgSOMultipleObjects_SingleObject::set_object_data(::std::string&& value) {
  set_has_object_data();
  object_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgSOMultipleObjects.SingleObject.object_data)
}
#endif
void CMsgSOMultipleObjects_SingleObject::set_object_data(const char* value) {
  set_has_object_data();
  object_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgSOMultipleObjects.SingleObject.object_data)
}
void CMsgSOMultipleObjects_SingleObject::set_object_data(const void* value, size_t size) {
  set_has_object_data();
  object_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgSOMultipleObjects.SingleObject.object_data)
}
::std::string* CMsgSOMultipleObjects_SingleObject::mutable_object_data() {
  set_has_object_data();
  // @@protoc_insertion_point(field_mutable:CMsgSOMultipleObjects.SingleObject.object_data)
  return object_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgSOMultipleObjects_SingleObject::release_object_data() {
  // @@protoc_insertion_point(field_release:CMsgSOMultipleObjects.SingleObject.object_data)
  clear_has_object_data();
  return object_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgSOMultipleObjects_SingleObject::set_allocated_object_data(::std::string* object_data) {
  if (object_data != NULL) {
    set_has_object_data();
  } else {
    clear_has_object_data();
  }
  object_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_data);
  // @@protoc_insertion_point(field_set_allocated:CMsgSOMultipleObjects.SingleObject.object_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOMultipleObjects::kObjectsModifiedFieldNumber;
const int CMsgSOMultipleObjects::kVersionFieldNumber;
const int CMsgSOMultipleObjects::kOwnerSoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOMultipleObjects::CMsgSOMultipleObjects()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOMultipleObjects)
}
CMsgSOMultipleObjects::CMsgSOMultipleObjects(const CMsgSOMultipleObjects& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      objects_modified_(from.objects_modified_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_owner_soid()) {
    owner_soid_ = new ::CMsgSOIDOwner(*from.owner_soid_);
  } else {
    owner_soid_ = NULL;
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:CMsgSOMultipleObjects)
}

void CMsgSOMultipleObjects::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&owner_soid_, 0, reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&owner_soid_) + sizeof(version_));
}

CMsgSOMultipleObjects::~CMsgSOMultipleObjects() {
  // @@protoc_insertion_point(destructor:CMsgSOMultipleObjects)
  SharedDtor();
}

void CMsgSOMultipleObjects::SharedDtor() {
  if (this != internal_default_instance()) {
    delete owner_soid_;
  }
}

void CMsgSOMultipleObjects::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOMultipleObjects::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[3].descriptor;
}

const CMsgSOMultipleObjects& CMsgSOMultipleObjects::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgSOMultipleObjects* CMsgSOMultipleObjects::New(::google::protobuf::Arena* arena) const {
  CMsgSOMultipleObjects* n = new CMsgSOMultipleObjects;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOMultipleObjects::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOMultipleObjects)
  objects_modified_.Clear();
  if (has_owner_soid()) {
    GOOGLE_DCHECK(owner_soid_ != NULL);
    owner_soid_->::CMsgSOIDOwner::Clear();
  }
  version_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOMultipleObjects::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOMultipleObjects)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgSOMultipleObjects.SingleObject objects_modified = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_objects_modified()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional fixed64 version = 3;
      case 3: {
        if (tag == 25u) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgSOIDOwner owner_soid = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_owner_soid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOMultipleObjects)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOMultipleObjects)
  return false;
#undef DO_
}

void CMsgSOMultipleObjects::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOMultipleObjects)
  // repeated .CMsgSOMultipleObjects.SingleObject objects_modified = 2;
  for (unsigned int i = 0, n = this->objects_modified_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->objects_modified(i), output);
  }

  // optional fixed64 version = 3;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->version(), output);
  }

  // optional .CMsgSOIDOwner owner_soid = 6;
  if (has_owner_soid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->owner_soid_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOMultipleObjects)
}

::google::protobuf::uint8* CMsgSOMultipleObjects::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOMultipleObjects)
  // repeated .CMsgSOMultipleObjects.SingleObject objects_modified = 2;
  for (unsigned int i = 0, n = this->objects_modified_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->objects_modified(i), false, target);
  }

  // optional fixed64 version = 3;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->version(), target);
  }

  // optional .CMsgSOIDOwner owner_soid = 6;
  if (has_owner_soid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->owner_soid_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOMultipleObjects)
  return target;
}

size_t CMsgSOMultipleObjects::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOMultipleObjects)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .CMsgSOMultipleObjects.SingleObject objects_modified = 2;
  {
    unsigned int count = this->objects_modified_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->objects_modified(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .CMsgSOIDOwner owner_soid = 6;
    if (has_owner_soid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->owner_soid_);
    }

    // optional fixed64 version = 3;
    if (has_version()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOMultipleObjects::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOMultipleObjects)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOMultipleObjects* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOMultipleObjects>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOMultipleObjects)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOMultipleObjects)
    MergeFrom(*source);
  }
}

void CMsgSOMultipleObjects::MergeFrom(const CMsgSOMultipleObjects& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOMultipleObjects)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objects_modified_.MergeFrom(from.objects_modified_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_owner_soid()) {
      mutable_owner_soid()->::CMsgSOIDOwner::MergeFrom(from.owner_soid());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
}

void CMsgSOMultipleObjects::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOMultipleObjects)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOMultipleObjects::CopyFrom(const CMsgSOMultipleObjects& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOMultipleObjects)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOMultipleObjects::IsInitialized() const {
  return true;
}

void CMsgSOMultipleObjects::Swap(CMsgSOMultipleObjects* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOMultipleObjects::InternalSwap(CMsgSOMultipleObjects* other) {
  objects_modified_.UnsafeArenaSwap(&other->objects_modified_);
  std::swap(owner_soid_, other->owner_soid_);
  std::swap(version_, other->version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOMultipleObjects::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgSOMultipleObjects

// repeated .CMsgSOMultipleObjects.SingleObject objects_modified = 2;
int CMsgSOMultipleObjects::objects_modified_size() const {
  return objects_modified_.size();
}
void CMsgSOMultipleObjects::clear_objects_modified() {
  objects_modified_.Clear();
}
const ::CMsgSOMultipleObjects_SingleObject& CMsgSOMultipleObjects::objects_modified(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.objects_modified)
  return objects_modified_.Get(index);
}
::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::mutable_objects_modified(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSOMultipleObjects.objects_modified)
  return objects_modified_.Mutable(index);
}
::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::add_objects_modified() {
  // @@protoc_insertion_point(field_add:CMsgSOMultipleObjects.objects_modified)
  return objects_modified_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >*
CMsgSOMultipleObjects::mutable_objects_modified() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSOMultipleObjects.objects_modified)
  return &objects_modified_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >&
CMsgSOMultipleObjects::objects_modified() const {
  // @@protoc_insertion_point(field_list:CMsgSOMultipleObjects.objects_modified)
  return objects_modified_;
}

// optional fixed64 version = 3;
bool CMsgSOMultipleObjects::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgSOMultipleObjects::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgSOMultipleObjects::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgSOMultipleObjects::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
::google::protobuf::uint64 CMsgSOMultipleObjects::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.version)
  return version_;
}
void CMsgSOMultipleObjects::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOMultipleObjects.version)
}

// optional .CMsgSOIDOwner owner_soid = 6;
bool CMsgSOMultipleObjects::has_owner_soid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgSOMultipleObjects::set_has_owner_soid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgSOMultipleObjects::clear_has_owner_soid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgSOMultipleObjects::clear_owner_soid() {
  if (owner_soid_ != NULL) owner_soid_->::CMsgSOIDOwner::Clear();
  clear_has_owner_soid();
}
const ::CMsgSOIDOwner& CMsgSOMultipleObjects::owner_soid() const {
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.owner_soid)
  return owner_soid_ != NULL ? *owner_soid_
                         : *::CMsgSOIDOwner::internal_default_instance();
}
::CMsgSOIDOwner* CMsgSOMultipleObjects::mutable_owner_soid() {
  set_has_owner_soid();
  if (owner_soid_ == NULL) {
    owner_soid_ = new ::CMsgSOIDOwner;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSOMultipleObjects.owner_soid)
  return owner_soid_;
}
::CMsgSOIDOwner* CMsgSOMultipleObjects::release_owner_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOMultipleObjects.owner_soid)
  clear_has_owner_soid();
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = NULL;
  return temp;
}
void CMsgSOMultipleObjects::set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid) {
  delete owner_soid_;
  owner_soid_ = owner_soid;
  if (owner_soid) {
    set_has_owner_soid();
  } else {
    clear_has_owner_soid();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSOMultipleObjects.owner_soid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOCacheSubscribed_SubscribedType::kTypeIdFieldNumber;
const int CMsgSOCacheSubscribed_SubscribedType::kObjectDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOCacheSubscribed_SubscribedType::CMsgSOCacheSubscribed_SubscribedType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOCacheSubscribed.SubscribedType)
}
CMsgSOCacheSubscribed_SubscribedType::CMsgSOCacheSubscribed_SubscribedType(const CMsgSOCacheSubscribed_SubscribedType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      object_data_(from.object_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_id_ = from.type_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgSOCacheSubscribed.SubscribedType)
}

void CMsgSOCacheSubscribed_SubscribedType::SharedCtor() {
  _cached_size_ = 0;
  type_id_ = 0;
}

CMsgSOCacheSubscribed_SubscribedType::~CMsgSOCacheSubscribed_SubscribedType() {
  // @@protoc_insertion_point(destructor:CMsgSOCacheSubscribed.SubscribedType)
  SharedDtor();
}

void CMsgSOCacheSubscribed_SubscribedType::SharedDtor() {
}

void CMsgSOCacheSubscribed_SubscribedType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOCacheSubscribed_SubscribedType::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[4].descriptor;
}

const CMsgSOCacheSubscribed_SubscribedType& CMsgSOCacheSubscribed_SubscribedType::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgSOCacheSubscribed_SubscribedType* CMsgSOCacheSubscribed_SubscribedType::New(::google::protobuf::Arena* arena) const {
  CMsgSOCacheSubscribed_SubscribedType* n = new CMsgSOCacheSubscribed_SubscribedType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOCacheSubscribed_SubscribedType::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOCacheSubscribed.SubscribedType)
  object_data_.Clear();
  type_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOCacheSubscribed_SubscribedType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOCacheSubscribed.SubscribedType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type_id = 1;
      case 1: {
        if (tag == 8u) {
          set_has_type_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes object_data = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_object_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOCacheSubscribed.SubscribedType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOCacheSubscribed.SubscribedType)
  return false;
#undef DO_
}

void CMsgSOCacheSubscribed_SubscribedType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOCacheSubscribed.SubscribedType)
  // optional int32 type_id = 1;
  if (has_type_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type_id(), output);
  }

  // repeated bytes object_data = 2;
  for (int i = 0; i < this->object_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->object_data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOCacheSubscribed.SubscribedType)
}

::google::protobuf::uint8* CMsgSOCacheSubscribed_SubscribedType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOCacheSubscribed.SubscribedType)
  // optional int32 type_id = 1;
  if (has_type_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type_id(), target);
  }

  // repeated bytes object_data = 2;
  for (int i = 0; i < this->object_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->object_data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOCacheSubscribed.SubscribedType)
  return target;
}

size_t CMsgSOCacheSubscribed_SubscribedType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOCacheSubscribed.SubscribedType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated bytes object_data = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->object_data_size());
  for (int i = 0; i < this->object_data_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->object_data(i));
  }

  // optional int32 type_id = 1;
  if (has_type_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOCacheSubscribed_SubscribedType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOCacheSubscribed.SubscribedType)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOCacheSubscribed_SubscribedType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOCacheSubscribed_SubscribedType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOCacheSubscribed.SubscribedType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOCacheSubscribed.SubscribedType)
    MergeFrom(*source);
  }
}

void CMsgSOCacheSubscribed_SubscribedType::MergeFrom(const CMsgSOCacheSubscribed_SubscribedType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOCacheSubscribed.SubscribedType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_data_.MergeFrom(from.object_data_);
  if (from.has_type_id()) {
    set_type_id(from.type_id());
  }
}

void CMsgSOCacheSubscribed_SubscribedType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOCacheSubscribed.SubscribedType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOCacheSubscribed_SubscribedType::CopyFrom(const CMsgSOCacheSubscribed_SubscribedType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOCacheSubscribed.SubscribedType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOCacheSubscribed_SubscribedType::IsInitialized() const {
  return true;
}

void CMsgSOCacheSubscribed_SubscribedType::Swap(CMsgSOCacheSubscribed_SubscribedType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOCacheSubscribed_SubscribedType::InternalSwap(CMsgSOCacheSubscribed_SubscribedType* other) {
  object_data_.UnsafeArenaSwap(&other->object_data_);
  std::swap(type_id_, other->type_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOCacheSubscribed_SubscribedType::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgSOCacheSubscribed_SubscribedType

// optional int32 type_id = 1;
bool CMsgSOCacheSubscribed_SubscribedType::has_type_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgSOCacheSubscribed_SubscribedType::set_has_type_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgSOCacheSubscribed_SubscribedType::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgSOCacheSubscribed_SubscribedType::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
::google::protobuf::int32 CMsgSOCacheSubscribed_SubscribedType::type_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.SubscribedType.type_id)
  return type_id_;
}
void CMsgSOCacheSubscribed_SubscribedType::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribed.SubscribedType.type_id)
}

// repeated bytes object_data = 2;
int CMsgSOCacheSubscribed_SubscribedType::object_data_size() const {
  return object_data_.size();
}
void CMsgSOCacheSubscribed_SubscribedType::clear_object_data() {
  object_data_.Clear();
}
const ::std::string& CMsgSOCacheSubscribed_SubscribedType::object_data(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.SubscribedType.object_data)
  return object_data_.Get(index);
}
::std::string* CMsgSOCacheSubscribed_SubscribedType::mutable_object_data(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheSubscribed.SubscribedType.object_data)
  return object_data_.Mutable(index);
}
void CMsgSOCacheSubscribed_SubscribedType::set_object_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribed.SubscribedType.object_data)
  object_data_.Mutable(index)->assign(value);
}
void CMsgSOCacheSubscribed_SubscribedType::set_object_data(int index, const char* value) {
  object_data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgSOCacheSubscribed.SubscribedType.object_data)
}
void CMsgSOCacheSubscribed_SubscribedType::set_object_data(int index, const void* value, size_t size) {
  object_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgSOCacheSubscribed.SubscribedType.object_data)
}
::std::string* CMsgSOCacheSubscribed_SubscribedType::add_object_data() {
  // @@protoc_insertion_point(field_add_mutable:CMsgSOCacheSubscribed.SubscribedType.object_data)
  return object_data_.Add();
}
void CMsgSOCacheSubscribed_SubscribedType::add_object_data(const ::std::string& value) {
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgSOCacheSubscribed.SubscribedType.object_data)
}
void CMsgSOCacheSubscribed_SubscribedType::add_object_data(const char* value) {
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgSOCacheSubscribed.SubscribedType.object_data)
}
void CMsgSOCacheSubscribed_SubscribedType::add_object_data(const void* value, size_t size) {
  object_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgSOCacheSubscribed.SubscribedType.object_data)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgSOCacheSubscribed_SubscribedType::object_data() const {
  // @@protoc_insertion_point(field_list:CMsgSOCacheSubscribed.SubscribedType.object_data)
  return object_data_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgSOCacheSubscribed_SubscribedType::mutable_object_data() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSOCacheSubscribed.SubscribedType.object_data)
  return &object_data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOCacheSubscribed::kObjectsFieldNumber;
const int CMsgSOCacheSubscribed::kVersionFieldNumber;
const int CMsgSOCacheSubscribed::kOwnerSoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOCacheSubscribed::CMsgSOCacheSubscribed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOCacheSubscribed)
}
CMsgSOCacheSubscribed::CMsgSOCacheSubscribed(const CMsgSOCacheSubscribed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      objects_(from.objects_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_owner_soid()) {
    owner_soid_ = new ::CMsgSOIDOwner(*from.owner_soid_);
  } else {
    owner_soid_ = NULL;
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:CMsgSOCacheSubscribed)
}

void CMsgSOCacheSubscribed::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&owner_soid_, 0, reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&owner_soid_) + sizeof(version_));
}

CMsgSOCacheSubscribed::~CMsgSOCacheSubscribed() {
  // @@protoc_insertion_point(destructor:CMsgSOCacheSubscribed)
  SharedDtor();
}

void CMsgSOCacheSubscribed::SharedDtor() {
  if (this != internal_default_instance()) {
    delete owner_soid_;
  }
}

void CMsgSOCacheSubscribed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOCacheSubscribed::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[5].descriptor;
}

const CMsgSOCacheSubscribed& CMsgSOCacheSubscribed::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgSOCacheSubscribed* CMsgSOCacheSubscribed::New(::google::protobuf::Arena* arena) const {
  CMsgSOCacheSubscribed* n = new CMsgSOCacheSubscribed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOCacheSubscribed::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOCacheSubscribed)
  objects_.Clear();
  if (has_owner_soid()) {
    GOOGLE_DCHECK(owner_soid_ != NULL);
    owner_soid_->::CMsgSOIDOwner::Clear();
  }
  version_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOCacheSubscribed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOCacheSubscribed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgSOCacheSubscribed.SubscribedType objects = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_objects()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional fixed64 version = 3;
      case 3: {
        if (tag == 25u) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgSOIDOwner owner_soid = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_owner_soid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOCacheSubscribed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOCacheSubscribed)
  return false;
#undef DO_
}

void CMsgSOCacheSubscribed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOCacheSubscribed)
  // repeated .CMsgSOCacheSubscribed.SubscribedType objects = 2;
  for (unsigned int i = 0, n = this->objects_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->objects(i), output);
  }

  // optional fixed64 version = 3;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->version(), output);
  }

  // optional .CMsgSOIDOwner owner_soid = 4;
  if (has_owner_soid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->owner_soid_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOCacheSubscribed)
}

::google::protobuf::uint8* CMsgSOCacheSubscribed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOCacheSubscribed)
  // repeated .CMsgSOCacheSubscribed.SubscribedType objects = 2;
  for (unsigned int i = 0, n = this->objects_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->objects(i), false, target);
  }

  // optional fixed64 version = 3;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->version(), target);
  }

  // optional .CMsgSOIDOwner owner_soid = 4;
  if (has_owner_soid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->owner_soid_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOCacheSubscribed)
  return target;
}

size_t CMsgSOCacheSubscribed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOCacheSubscribed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .CMsgSOCacheSubscribed.SubscribedType objects = 2;
  {
    unsigned int count = this->objects_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->objects(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .CMsgSOIDOwner owner_soid = 4;
    if (has_owner_soid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->owner_soid_);
    }

    // optional fixed64 version = 3;
    if (has_version()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOCacheSubscribed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOCacheSubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOCacheSubscribed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOCacheSubscribed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOCacheSubscribed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOCacheSubscribed)
    MergeFrom(*source);
  }
}

void CMsgSOCacheSubscribed::MergeFrom(const CMsgSOCacheSubscribed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOCacheSubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objects_.MergeFrom(from.objects_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_owner_soid()) {
      mutable_owner_soid()->::CMsgSOIDOwner::MergeFrom(from.owner_soid());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
}

void CMsgSOCacheSubscribed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOCacheSubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOCacheSubscribed::CopyFrom(const CMsgSOCacheSubscribed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOCacheSubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOCacheSubscribed::IsInitialized() const {
  return true;
}

void CMsgSOCacheSubscribed::Swap(CMsgSOCacheSubscribed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOCacheSubscribed::InternalSwap(CMsgSOCacheSubscribed* other) {
  objects_.UnsafeArenaSwap(&other->objects_);
  std::swap(owner_soid_, other->owner_soid_);
  std::swap(version_, other->version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOCacheSubscribed::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgSOCacheSubscribed

// repeated .CMsgSOCacheSubscribed.SubscribedType objects = 2;
int CMsgSOCacheSubscribed::objects_size() const {
  return objects_.size();
}
void CMsgSOCacheSubscribed::clear_objects() {
  objects_.Clear();
}
const ::CMsgSOCacheSubscribed_SubscribedType& CMsgSOCacheSubscribed::objects(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.objects)
  return objects_.Get(index);
}
::CMsgSOCacheSubscribed_SubscribedType* CMsgSOCacheSubscribed::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheSubscribed.objects)
  return objects_.Mutable(index);
}
::CMsgSOCacheSubscribed_SubscribedType* CMsgSOCacheSubscribed::add_objects() {
  // @@protoc_insertion_point(field_add:CMsgSOCacheSubscribed.objects)
  return objects_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType >*
CMsgSOCacheSubscribed::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSOCacheSubscribed.objects)
  return &objects_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType >&
CMsgSOCacheSubscribed::objects() const {
  // @@protoc_insertion_point(field_list:CMsgSOCacheSubscribed.objects)
  return objects_;
}

// optional fixed64 version = 3;
bool CMsgSOCacheSubscribed::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgSOCacheSubscribed::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgSOCacheSubscribed::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgSOCacheSubscribed::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
::google::protobuf::uint64 CMsgSOCacheSubscribed::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.version)
  return version_;
}
void CMsgSOCacheSubscribed::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribed.version)
}

// optional .CMsgSOIDOwner owner_soid = 4;
bool CMsgSOCacheSubscribed::has_owner_soid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgSOCacheSubscribed::set_has_owner_soid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgSOCacheSubscribed::clear_has_owner_soid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgSOCacheSubscribed::clear_owner_soid() {
  if (owner_soid_ != NULL) owner_soid_->::CMsgSOIDOwner::Clear();
  clear_has_owner_soid();
}
const ::CMsgSOIDOwner& CMsgSOCacheSubscribed::owner_soid() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.owner_soid)
  return owner_soid_ != NULL ? *owner_soid_
                         : *::CMsgSOIDOwner::internal_default_instance();
}
::CMsgSOIDOwner* CMsgSOCacheSubscribed::mutable_owner_soid() {
  set_has_owner_soid();
  if (owner_soid_ == NULL) {
    owner_soid_ = new ::CMsgSOIDOwner;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheSubscribed.owner_soid)
  return owner_soid_;
}
::CMsgSOIDOwner* CMsgSOCacheSubscribed::release_owner_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOCacheSubscribed.owner_soid)
  clear_has_owner_soid();
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = NULL;
  return temp;
}
void CMsgSOCacheSubscribed::set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid) {
  delete owner_soid_;
  owner_soid_ = owner_soid;
  if (owner_soid) {
    set_has_owner_soid();
  } else {
    clear_has_owner_soid();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSOCacheSubscribed.owner_soid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOCacheUnsubscribed::kOwnerSoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOCacheUnsubscribed::CMsgSOCacheUnsubscribed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOCacheUnsubscribed)
}
CMsgSOCacheUnsubscribed::CMsgSOCacheUnsubscribed(const CMsgSOCacheUnsubscribed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_owner_soid()) {
    owner_soid_ = new ::CMsgSOIDOwner(*from.owner_soid_);
  } else {
    owner_soid_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CMsgSOCacheUnsubscribed)
}

void CMsgSOCacheUnsubscribed::SharedCtor() {
  _cached_size_ = 0;
  owner_soid_ = NULL;
}

CMsgSOCacheUnsubscribed::~CMsgSOCacheUnsubscribed() {
  // @@protoc_insertion_point(destructor:CMsgSOCacheUnsubscribed)
  SharedDtor();
}

void CMsgSOCacheUnsubscribed::SharedDtor() {
  if (this != internal_default_instance()) {
    delete owner_soid_;
  }
}

void CMsgSOCacheUnsubscribed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOCacheUnsubscribed::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[6].descriptor;
}

const CMsgSOCacheUnsubscribed& CMsgSOCacheUnsubscribed::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgSOCacheUnsubscribed* CMsgSOCacheUnsubscribed::New(::google::protobuf::Arena* arena) const {
  CMsgSOCacheUnsubscribed* n = new CMsgSOCacheUnsubscribed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOCacheUnsubscribed::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOCacheUnsubscribed)
  if (has_owner_soid()) {
    GOOGLE_DCHECK(owner_soid_ != NULL);
    owner_soid_->::CMsgSOIDOwner::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOCacheUnsubscribed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOCacheUnsubscribed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgSOIDOwner owner_soid = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_owner_soid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOCacheUnsubscribed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOCacheUnsubscribed)
  return false;
#undef DO_
}

void CMsgSOCacheUnsubscribed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOCacheUnsubscribed)
  // optional .CMsgSOIDOwner owner_soid = 2;
  if (has_owner_soid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->owner_soid_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOCacheUnsubscribed)
}

::google::protobuf::uint8* CMsgSOCacheUnsubscribed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOCacheUnsubscribed)
  // optional .CMsgSOIDOwner owner_soid = 2;
  if (has_owner_soid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->owner_soid_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOCacheUnsubscribed)
  return target;
}

size_t CMsgSOCacheUnsubscribed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOCacheUnsubscribed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .CMsgSOIDOwner owner_soid = 2;
  if (has_owner_soid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->owner_soid_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOCacheUnsubscribed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOCacheUnsubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOCacheUnsubscribed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOCacheUnsubscribed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOCacheUnsubscribed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOCacheUnsubscribed)
    MergeFrom(*source);
  }
}

void CMsgSOCacheUnsubscribed::MergeFrom(const CMsgSOCacheUnsubscribed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOCacheUnsubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_owner_soid()) {
    mutable_owner_soid()->::CMsgSOIDOwner::MergeFrom(from.owner_soid());
  }
}

void CMsgSOCacheUnsubscribed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOCacheUnsubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOCacheUnsubscribed::CopyFrom(const CMsgSOCacheUnsubscribed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOCacheUnsubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOCacheUnsubscribed::IsInitialized() const {
  return true;
}

void CMsgSOCacheUnsubscribed::Swap(CMsgSOCacheUnsubscribed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOCacheUnsubscribed::InternalSwap(CMsgSOCacheUnsubscribed* other) {
  std::swap(owner_soid_, other->owner_soid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOCacheUnsubscribed::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgSOCacheUnsubscribed

// optional .CMsgSOIDOwner owner_soid = 2;
bool CMsgSOCacheUnsubscribed::has_owner_soid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgSOCacheUnsubscribed::set_has_owner_soid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgSOCacheUnsubscribed::clear_has_owner_soid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgSOCacheUnsubscribed::clear_owner_soid() {
  if (owner_soid_ != NULL) owner_soid_->::CMsgSOIDOwner::Clear();
  clear_has_owner_soid();
}
const ::CMsgSOIDOwner& CMsgSOCacheUnsubscribed::owner_soid() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheUnsubscribed.owner_soid)
  return owner_soid_ != NULL ? *owner_soid_
                         : *::CMsgSOIDOwner::internal_default_instance();
}
::CMsgSOIDOwner* CMsgSOCacheUnsubscribed::mutable_owner_soid() {
  set_has_owner_soid();
  if (owner_soid_ == NULL) {
    owner_soid_ = new ::CMsgSOIDOwner;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheUnsubscribed.owner_soid)
  return owner_soid_;
}
::CMsgSOIDOwner* CMsgSOCacheUnsubscribed::release_owner_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOCacheUnsubscribed.owner_soid)
  clear_has_owner_soid();
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = NULL;
  return temp;
}
void CMsgSOCacheUnsubscribed::set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid) {
  delete owner_soid_;
  owner_soid_ = owner_soid;
  if (owner_soid) {
    set_has_owner_soid();
  } else {
    clear_has_owner_soid();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSOCacheUnsubscribed.owner_soid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOCacheSubscriptionCheck::kVersionFieldNumber;
const int CMsgSOCacheSubscriptionCheck::kOwnerSoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOCacheSubscriptionCheck::CMsgSOCacheSubscriptionCheck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOCacheSubscriptionCheck)
}
CMsgSOCacheSubscriptionCheck::CMsgSOCacheSubscriptionCheck(const CMsgSOCacheSubscriptionCheck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_owner_soid()) {
    owner_soid_ = new ::CMsgSOIDOwner(*from.owner_soid_);
  } else {
    owner_soid_ = NULL;
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:CMsgSOCacheSubscriptionCheck)
}

void CMsgSOCacheSubscriptionCheck::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&owner_soid_, 0, reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&owner_soid_) + sizeof(version_));
}

CMsgSOCacheSubscriptionCheck::~CMsgSOCacheSubscriptionCheck() {
  // @@protoc_insertion_point(destructor:CMsgSOCacheSubscriptionCheck)
  SharedDtor();
}

void CMsgSOCacheSubscriptionCheck::SharedDtor() {
  if (this != internal_default_instance()) {
    delete owner_soid_;
  }
}

void CMsgSOCacheSubscriptionCheck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOCacheSubscriptionCheck::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[7].descriptor;
}

const CMsgSOCacheSubscriptionCheck& CMsgSOCacheSubscriptionCheck::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgSOCacheSubscriptionCheck* CMsgSOCacheSubscriptionCheck::New(::google::protobuf::Arena* arena) const {
  CMsgSOCacheSubscriptionCheck* n = new CMsgSOCacheSubscriptionCheck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOCacheSubscriptionCheck::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOCacheSubscriptionCheck)
  if (has_owner_soid()) {
    GOOGLE_DCHECK(owner_soid_ != NULL);
    owner_soid_->::CMsgSOIDOwner::Clear();
  }
  version_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOCacheSubscriptionCheck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOCacheSubscriptionCheck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 version = 2;
      case 2: {
        if (tag == 17u) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgSOIDOwner owner_soid = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_owner_soid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOCacheSubscriptionCheck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOCacheSubscriptionCheck)
  return false;
#undef DO_
}

void CMsgSOCacheSubscriptionCheck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOCacheSubscriptionCheck)
  // optional fixed64 version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->version(), output);
  }

  // optional .CMsgSOIDOwner owner_soid = 3;
  if (has_owner_soid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->owner_soid_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOCacheSubscriptionCheck)
}

::google::protobuf::uint8* CMsgSOCacheSubscriptionCheck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOCacheSubscriptionCheck)
  // optional fixed64 version = 2;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->version(), target);
  }

  // optional .CMsgSOIDOwner owner_soid = 3;
  if (has_owner_soid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->owner_soid_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOCacheSubscriptionCheck)
  return target;
}

size_t CMsgSOCacheSubscriptionCheck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOCacheSubscriptionCheck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CMsgSOIDOwner owner_soid = 3;
    if (has_owner_soid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->owner_soid_);
    }

    // optional fixed64 version = 2;
    if (has_version()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOCacheSubscriptionCheck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOCacheSubscriptionCheck)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOCacheSubscriptionCheck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOCacheSubscriptionCheck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOCacheSubscriptionCheck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOCacheSubscriptionCheck)
    MergeFrom(*source);
  }
}

void CMsgSOCacheSubscriptionCheck::MergeFrom(const CMsgSOCacheSubscriptionCheck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOCacheSubscriptionCheck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_owner_soid()) {
      mutable_owner_soid()->::CMsgSOIDOwner::MergeFrom(from.owner_soid());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
}

void CMsgSOCacheSubscriptionCheck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOCacheSubscriptionCheck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOCacheSubscriptionCheck::CopyFrom(const CMsgSOCacheSubscriptionCheck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOCacheSubscriptionCheck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOCacheSubscriptionCheck::IsInitialized() const {
  return true;
}

void CMsgSOCacheSubscriptionCheck::Swap(CMsgSOCacheSubscriptionCheck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOCacheSubscriptionCheck::InternalSwap(CMsgSOCacheSubscriptionCheck* other) {
  std::swap(owner_soid_, other->owner_soid_);
  std::swap(version_, other->version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOCacheSubscriptionCheck::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgSOCacheSubscriptionCheck

// optional fixed64 version = 2;
bool CMsgSOCacheSubscriptionCheck::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgSOCacheSubscriptionCheck::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgSOCacheSubscriptionCheck::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgSOCacheSubscriptionCheck::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
::google::protobuf::uint64 CMsgSOCacheSubscriptionCheck::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscriptionCheck.version)
  return version_;
}
void CMsgSOCacheSubscriptionCheck::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscriptionCheck.version)
}

// optional .CMsgSOIDOwner owner_soid = 3;
bool CMsgSOCacheSubscriptionCheck::has_owner_soid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgSOCacheSubscriptionCheck::set_has_owner_soid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgSOCacheSubscriptionCheck::clear_has_owner_soid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgSOCacheSubscriptionCheck::clear_owner_soid() {
  if (owner_soid_ != NULL) owner_soid_->::CMsgSOIDOwner::Clear();
  clear_has_owner_soid();
}
const ::CMsgSOIDOwner& CMsgSOCacheSubscriptionCheck::owner_soid() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscriptionCheck.owner_soid)
  return owner_soid_ != NULL ? *owner_soid_
                         : *::CMsgSOIDOwner::internal_default_instance();
}
::CMsgSOIDOwner* CMsgSOCacheSubscriptionCheck::mutable_owner_soid() {
  set_has_owner_soid();
  if (owner_soid_ == NULL) {
    owner_soid_ = new ::CMsgSOIDOwner;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheSubscriptionCheck.owner_soid)
  return owner_soid_;
}
::CMsgSOIDOwner* CMsgSOCacheSubscriptionCheck::release_owner_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOCacheSubscriptionCheck.owner_soid)
  clear_has_owner_soid();
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = NULL;
  return temp;
}
void CMsgSOCacheSubscriptionCheck::set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid) {
  delete owner_soid_;
  owner_soid_ = owner_soid;
  if (owner_soid) {
    set_has_owner_soid();
  } else {
    clear_has_owner_soid();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSOCacheSubscriptionCheck.owner_soid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOCacheSubscriptionRefresh::kOwnerSoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOCacheSubscriptionRefresh::CMsgSOCacheSubscriptionRefresh()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOCacheSubscriptionRefresh)
}
CMsgSOCacheSubscriptionRefresh::CMsgSOCacheSubscriptionRefresh(const CMsgSOCacheSubscriptionRefresh& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_owner_soid()) {
    owner_soid_ = new ::CMsgSOIDOwner(*from.owner_soid_);
  } else {
    owner_soid_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CMsgSOCacheSubscriptionRefresh)
}

void CMsgSOCacheSubscriptionRefresh::SharedCtor() {
  _cached_size_ = 0;
  owner_soid_ = NULL;
}

CMsgSOCacheSubscriptionRefresh::~CMsgSOCacheSubscriptionRefresh() {
  // @@protoc_insertion_point(destructor:CMsgSOCacheSubscriptionRefresh)
  SharedDtor();
}

void CMsgSOCacheSubscriptionRefresh::SharedDtor() {
  if (this != internal_default_instance()) {
    delete owner_soid_;
  }
}

void CMsgSOCacheSubscriptionRefresh::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOCacheSubscriptionRefresh::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[8].descriptor;
}

const CMsgSOCacheSubscriptionRefresh& CMsgSOCacheSubscriptionRefresh::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgSOCacheSubscriptionRefresh* CMsgSOCacheSubscriptionRefresh::New(::google::protobuf::Arena* arena) const {
  CMsgSOCacheSubscriptionRefresh* n = new CMsgSOCacheSubscriptionRefresh;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOCacheSubscriptionRefresh::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOCacheSubscriptionRefresh)
  if (has_owner_soid()) {
    GOOGLE_DCHECK(owner_soid_ != NULL);
    owner_soid_->::CMsgSOIDOwner::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOCacheSubscriptionRefresh::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOCacheSubscriptionRefresh)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgSOIDOwner owner_soid = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_owner_soid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOCacheSubscriptionRefresh)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOCacheSubscriptionRefresh)
  return false;
#undef DO_
}

void CMsgSOCacheSubscriptionRefresh::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOCacheSubscriptionRefresh)
  // optional .CMsgSOIDOwner owner_soid = 2;
  if (has_owner_soid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->owner_soid_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOCacheSubscriptionRefresh)
}

::google::protobuf::uint8* CMsgSOCacheSubscriptionRefresh::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOCacheSubscriptionRefresh)
  // optional .CMsgSOIDOwner owner_soid = 2;
  if (has_owner_soid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->owner_soid_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOCacheSubscriptionRefresh)
  return target;
}

size_t CMsgSOCacheSubscriptionRefresh::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOCacheSubscriptionRefresh)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .CMsgSOIDOwner owner_soid = 2;
  if (has_owner_soid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->owner_soid_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOCacheSubscriptionRefresh::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOCacheSubscriptionRefresh)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOCacheSubscriptionRefresh* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOCacheSubscriptionRefresh>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOCacheSubscriptionRefresh)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOCacheSubscriptionRefresh)
    MergeFrom(*source);
  }
}

void CMsgSOCacheSubscriptionRefresh::MergeFrom(const CMsgSOCacheSubscriptionRefresh& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOCacheSubscriptionRefresh)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_owner_soid()) {
    mutable_owner_soid()->::CMsgSOIDOwner::MergeFrom(from.owner_soid());
  }
}

void CMsgSOCacheSubscriptionRefresh::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOCacheSubscriptionRefresh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOCacheSubscriptionRefresh::CopyFrom(const CMsgSOCacheSubscriptionRefresh& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOCacheSubscriptionRefresh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOCacheSubscriptionRefresh::IsInitialized() const {
  return true;
}

void CMsgSOCacheSubscriptionRefresh::Swap(CMsgSOCacheSubscriptionRefresh* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOCacheSubscriptionRefresh::InternalSwap(CMsgSOCacheSubscriptionRefresh* other) {
  std::swap(owner_soid_, other->owner_soid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOCacheSubscriptionRefresh::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgSOCacheSubscriptionRefresh

// optional .CMsgSOIDOwner owner_soid = 2;
bool CMsgSOCacheSubscriptionRefresh::has_owner_soid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgSOCacheSubscriptionRefresh::set_has_owner_soid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgSOCacheSubscriptionRefresh::clear_has_owner_soid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgSOCacheSubscriptionRefresh::clear_owner_soid() {
  if (owner_soid_ != NULL) owner_soid_->::CMsgSOIDOwner::Clear();
  clear_has_owner_soid();
}
const ::CMsgSOIDOwner& CMsgSOCacheSubscriptionRefresh::owner_soid() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscriptionRefresh.owner_soid)
  return owner_soid_ != NULL ? *owner_soid_
                         : *::CMsgSOIDOwner::internal_default_instance();
}
::CMsgSOIDOwner* CMsgSOCacheSubscriptionRefresh::mutable_owner_soid() {
  set_has_owner_soid();
  if (owner_soid_ == NULL) {
    owner_soid_ = new ::CMsgSOIDOwner;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheSubscriptionRefresh.owner_soid)
  return owner_soid_;
}
::CMsgSOIDOwner* CMsgSOCacheSubscriptionRefresh::release_owner_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOCacheSubscriptionRefresh.owner_soid)
  clear_has_owner_soid();
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = NULL;
  return temp;
}
void CMsgSOCacheSubscriptionRefresh::set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid) {
  delete owner_soid_;
  owner_soid_ = owner_soid;
  if (owner_soid) {
    set_has_owner_soid();
  } else {
    clear_has_owner_soid();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSOCacheSubscriptionRefresh.owner_soid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOCacheVersion::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOCacheVersion::CMsgSOCacheVersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOCacheVersion)
}
CMsgSOCacheVersion::CMsgSOCacheVersion(const CMsgSOCacheVersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:CMsgSOCacheVersion)
}

void CMsgSOCacheVersion::SharedCtor() {
  _cached_size_ = 0;
  version_ = GOOGLE_ULONGLONG(0);
}

CMsgSOCacheVersion::~CMsgSOCacheVersion() {
  // @@protoc_insertion_point(destructor:CMsgSOCacheVersion)
  SharedDtor();
}

void CMsgSOCacheVersion::SharedDtor() {
}

void CMsgSOCacheVersion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOCacheVersion::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[9].descriptor;
}

const CMsgSOCacheVersion& CMsgSOCacheVersion::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgSOCacheVersion* CMsgSOCacheVersion::New(::google::protobuf::Arena* arena) const {
  CMsgSOCacheVersion* n = new CMsgSOCacheVersion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOCacheVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOCacheVersion)
  version_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOCacheVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOCacheVersion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 version = 1;
      case 1: {
        if (tag == 9u) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOCacheVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOCacheVersion)
  return false;
#undef DO_
}

void CMsgSOCacheVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOCacheVersion)
  // optional fixed64 version = 1;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOCacheVersion)
}

::google::protobuf::uint8* CMsgSOCacheVersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOCacheVersion)
  // optional fixed64 version = 1;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOCacheVersion)
  return target;
}

size_t CMsgSOCacheVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOCacheVersion)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional fixed64 version = 1;
  if (has_version()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOCacheVersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOCacheVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOCacheVersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOCacheVersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOCacheVersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOCacheVersion)
    MergeFrom(*source);
  }
}

void CMsgSOCacheVersion::MergeFrom(const CMsgSOCacheVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOCacheVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_version()) {
    set_version(from.version());
  }
}

void CMsgSOCacheVersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOCacheVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOCacheVersion::CopyFrom(const CMsgSOCacheVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOCacheVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOCacheVersion::IsInitialized() const {
  return true;
}

void CMsgSOCacheVersion::Swap(CMsgSOCacheVersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOCacheVersion::InternalSwap(CMsgSOCacheVersion* other) {
  std::swap(version_, other->version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOCacheVersion::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgSOCacheVersion

// optional fixed64 version = 1;
bool CMsgSOCacheVersion::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgSOCacheVersion::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgSOCacheVersion::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgSOCacheVersion::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
::google::protobuf::uint64 CMsgSOCacheVersion::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheVersion.version)
  return version_;
}
void CMsgSOCacheVersion::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheVersion.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAccountDetails::kValidFieldNumber;
const int CMsgAccountDetails::kAccountNameFieldNumber;
const int CMsgAccountDetails::kPublicProfileFieldNumber;
const int CMsgAccountDetails::kPublicInventoryFieldNumber;
const int CMsgAccountDetails::kVacBannedFieldNumber;
const int CMsgAccountDetails::kCyberCafeFieldNumber;
const int CMsgAccountDetails::kSchoolAccountFieldNumber;
const int CMsgAccountDetails::kFreeTrialAccountFieldNumber;
const int CMsgAccountDetails::kSubscribedFieldNumber;
const int CMsgAccountDetails::kLowViolenceFieldNumber;
const int CMsgAccountDetails::kLimitedFieldNumber;
const int CMsgAccountDetails::kTrustedFieldNumber;
const int CMsgAccountDetails::kPackageFieldNumber;
const int CMsgAccountDetails::kTimeCachedFieldNumber;
const int CMsgAccountDetails::kAccountLockedFieldNumber;
const int CMsgAccountDetails::kCommunityBannedFieldNumber;
const int CMsgAccountDetails::kTradeBannedFieldNumber;
const int CMsgAccountDetails::kEligibleForCommunityMarketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAccountDetails::CMsgAccountDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAccountDetails)
}
CMsgAccountDetails::CMsgAccountDetails(const CMsgAccountDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name()) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  ::memcpy(&valid_, &from.valid_,
    reinterpret_cast<char*>(&eligible_for_community_market_) -
    reinterpret_cast<char*>(&valid_) + sizeof(eligible_for_community_market_));
  // @@protoc_insertion_point(copy_constructor:CMsgAccountDetails)
}

void CMsgAccountDetails::SharedCtor() {
  _cached_size_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&valid_, 0, reinterpret_cast<char*>(&eligible_for_community_market_) -
    reinterpret_cast<char*>(&valid_) + sizeof(eligible_for_community_market_));
}

CMsgAccountDetails::~CMsgAccountDetails() {
  // @@protoc_insertion_point(destructor:CMsgAccountDetails)
  SharedDtor();
}

void CMsgAccountDetails::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgAccountDetails::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAccountDetails::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[10].descriptor;
}

const CMsgAccountDetails& CMsgAccountDetails::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgAccountDetails* CMsgAccountDetails::New(::google::protobuf::Arena* arena) const {
  CMsgAccountDetails* n = new CMsgAccountDetails;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAccountDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAccountDetails)
  if (has_account_name()) {
    GOOGLE_DCHECK(!account_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*account_name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 254u) {
    ::memset(&valid_, 0, reinterpret_cast<char*>(&free_trial_account_) -
      reinterpret_cast<char*>(&valid_) + sizeof(free_trial_account_));
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ::memset(&subscribed_, 0, reinterpret_cast<char*>(&community_banned_) -
      reinterpret_cast<char*>(&subscribed_) + sizeof(community_banned_));
  }
  if (_has_bits_[16 / 32] & 196608u) {
    ::memset(&trade_banned_, 0, reinterpret_cast<char*>(&eligible_for_community_market_) -
      reinterpret_cast<char*>(&trade_banned_) + sizeof(eligible_for_community_market_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAccountDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAccountDetails)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool valid = 1;
      case 1: {
        if (tag == 8u) {
          set_has_valid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account_name = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgAccountDetails.account_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool public_profile = 4;
      case 4: {
        if (tag == 32u) {
          set_has_public_profile();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &public_profile_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool public_inventory = 5;
      case 5: {
        if (tag == 40u) {
          set_has_public_inventory();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &public_inventory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool vac_banned = 6;
      case 6: {
        if (tag == 48u) {
          set_has_vac_banned();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vac_banned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool cyber_cafe = 7;
      case 7: {
        if (tag == 56u) {
          set_has_cyber_cafe();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cyber_cafe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool school_account = 8;
      case 8: {
        if (tag == 64u) {
          set_has_school_account();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &school_account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool free_trial_account = 9;
      case 9: {
        if (tag == 72u) {
          set_has_free_trial_account();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &free_trial_account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool subscribed = 10;
      case 10: {
        if (tag == 80u) {
          set_has_subscribed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &subscribed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool low_violence = 11;
      case 11: {
        if (tag == 88u) {
          set_has_low_violence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &low_violence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool limited = 12;
      case 12: {
        if (tag == 96u) {
          set_has_limited();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &limited_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool trusted = 13;
      case 13: {
        if (tag == 104u) {
          set_has_trusted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &trusted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 package = 14;
      case 14: {
        if (tag == 112u) {
          set_has_package();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &package_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 time_cached = 15;
      case 15: {
        if (tag == 125u) {
          set_has_time_cached();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &time_cached_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool account_locked = 16;
      case 16: {
        if (tag == 128u) {
          set_has_account_locked();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &account_locked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool community_banned = 17;
      case 17: {
        if (tag == 136u) {
          set_has_community_banned();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &community_banned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool trade_banned = 18;
      case 18: {
        if (tag == 144u) {
          set_has_trade_banned();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &trade_banned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool eligible_for_community_market = 19;
      case 19: {
        if (tag == 152u) {
          set_has_eligible_for_community_market();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &eligible_for_community_market_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAccountDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAccountDetails)
  return false;
#undef DO_
}

void CMsgAccountDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAccountDetails)
  // optional bool valid = 1;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->valid(), output);
  }

  // optional string account_name = 2;
  if (has_account_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAccountDetails.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account_name(), output);
  }

  // optional bool public_profile = 4;
  if (has_public_profile()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->public_profile(), output);
  }

  // optional bool public_inventory = 5;
  if (has_public_inventory()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->public_inventory(), output);
  }

  // optional bool vac_banned = 6;
  if (has_vac_banned()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->vac_banned(), output);
  }

  // optional bool cyber_cafe = 7;
  if (has_cyber_cafe()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->cyber_cafe(), output);
  }

  // optional bool school_account = 8;
  if (has_school_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->school_account(), output);
  }

  // optional bool free_trial_account = 9;
  if (has_free_trial_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->free_trial_account(), output);
  }

  // optional bool subscribed = 10;
  if (has_subscribed()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->subscribed(), output);
  }

  // optional bool low_violence = 11;
  if (has_low_violence()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->low_violence(), output);
  }

  // optional bool limited = 12;
  if (has_limited()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->limited(), output);
  }

  // optional bool trusted = 13;
  if (has_trusted()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->trusted(), output);
  }

  // optional uint32 package = 14;
  if (has_package()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->package(), output);
  }

  // optional fixed32 time_cached = 15;
  if (has_time_cached()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(15, this->time_cached(), output);
  }

  // optional bool account_locked = 16;
  if (has_account_locked()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->account_locked(), output);
  }

  // optional bool community_banned = 17;
  if (has_community_banned()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->community_banned(), output);
  }

  // optional bool trade_banned = 18;
  if (has_trade_banned()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->trade_banned(), output);
  }

  // optional bool eligible_for_community_market = 19;
  if (has_eligible_for_community_market()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->eligible_for_community_market(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAccountDetails)
}

::google::protobuf::uint8* CMsgAccountDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAccountDetails)
  // optional bool valid = 1;
  if (has_valid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->valid(), target);
  }

  // optional string account_name = 2;
  if (has_account_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAccountDetails.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account_name(), target);
  }

  // optional bool public_profile = 4;
  if (has_public_profile()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->public_profile(), target);
  }

  // optional bool public_inventory = 5;
  if (has_public_inventory()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->public_inventory(), target);
  }

  // optional bool vac_banned = 6;
  if (has_vac_banned()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->vac_banned(), target);
  }

  // optional bool cyber_cafe = 7;
  if (has_cyber_cafe()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->cyber_cafe(), target);
  }

  // optional bool school_account = 8;
  if (has_school_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->school_account(), target);
  }

  // optional bool free_trial_account = 9;
  if (has_free_trial_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->free_trial_account(), target);
  }

  // optional bool subscribed = 10;
  if (has_subscribed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->subscribed(), target);
  }

  // optional bool low_violence = 11;
  if (has_low_violence()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->low_violence(), target);
  }

  // optional bool limited = 12;
  if (has_limited()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->limited(), target);
  }

  // optional bool trusted = 13;
  if (has_trusted()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->trusted(), target);
  }

  // optional uint32 package = 14;
  if (has_package()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->package(), target);
  }

  // optional fixed32 time_cached = 15;
  if (has_time_cached()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(15, this->time_cached(), target);
  }

  // optional bool account_locked = 16;
  if (has_account_locked()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->account_locked(), target);
  }

  // optional bool community_banned = 17;
  if (has_community_banned()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->community_banned(), target);
  }

  // optional bool trade_banned = 18;
  if (has_trade_banned()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->trade_banned(), target);
  }

  // optional bool eligible_for_community_market = 19;
  if (has_eligible_for_community_market()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->eligible_for_community_market(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAccountDetails)
  return target;
}

size_t CMsgAccountDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAccountDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string account_name = 2;
    if (has_account_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name());
    }

    // optional bool valid = 1;
    if (has_valid()) {
      total_size += 1 + 1;
    }

    // optional bool public_profile = 4;
    if (has_public_profile()) {
      total_size += 1 + 1;
    }

    // optional bool public_inventory = 5;
    if (has_public_inventory()) {
      total_size += 1 + 1;
    }

    // optional bool vac_banned = 6;
    if (has_vac_banned()) {
      total_size += 1 + 1;
    }

    // optional bool cyber_cafe = 7;
    if (has_cyber_cafe()) {
      total_size += 1 + 1;
    }

    // optional bool school_account = 8;
    if (has_school_account()) {
      total_size += 1 + 1;
    }

    // optional bool free_trial_account = 9;
    if (has_free_trial_account()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bool subscribed = 10;
    if (has_subscribed()) {
      total_size += 1 + 1;
    }

    // optional bool low_violence = 11;
    if (has_low_violence()) {
      total_size += 1 + 1;
    }

    // optional bool limited = 12;
    if (has_limited()) {
      total_size += 1 + 1;
    }

    // optional bool trusted = 13;
    if (has_trusted()) {
      total_size += 1 + 1;
    }

    // optional bool account_locked = 16;
    if (has_account_locked()) {
      total_size += 2 + 1;
    }

    // optional uint32 package = 14;
    if (has_package()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->package());
    }

    // optional fixed32 time_cached = 15;
    if (has_time_cached()) {
      total_size += 1 + 4;
    }

    // optional bool community_banned = 17;
    if (has_community_banned()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[16 / 32] & 196608u) {
    // optional bool trade_banned = 18;
    if (has_trade_banned()) {
      total_size += 2 + 1;
    }

    // optional bool eligible_for_community_market = 19;
    if (has_eligible_for_community_market()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAccountDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAccountDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAccountDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAccountDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAccountDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAccountDetails)
    MergeFrom(*source);
  }
}

void CMsgAccountDetails::MergeFrom(const CMsgAccountDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAccountDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_account_name()) {
      set_has_account_name();
      account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
    }
    if (from.has_valid()) {
      set_valid(from.valid());
    }
    if (from.has_public_profile()) {
      set_public_profile(from.public_profile());
    }
    if (from.has_public_inventory()) {
      set_public_inventory(from.public_inventory());
    }
    if (from.has_vac_banned()) {
      set_vac_banned(from.vac_banned());
    }
    if (from.has_cyber_cafe()) {
      set_cyber_cafe(from.cyber_cafe());
    }
    if (from.has_school_account()) {
      set_school_account(from.school_account());
    }
    if (from.has_free_trial_account()) {
      set_free_trial_account(from.free_trial_account());
    }
  }
  if (from._has_bits_[8 / 32] & 65280u) {
    if (from.has_subscribed()) {
      set_subscribed(from.subscribed());
    }
    if (from.has_low_violence()) {
      set_low_violence(from.low_violence());
    }
    if (from.has_limited()) {
      set_limited(from.limited());
    }
    if (from.has_trusted()) {
      set_trusted(from.trusted());
    }
    if (from.has_account_locked()) {
      set_account_locked(from.account_locked());
    }
    if (from.has_package()) {
      set_package(from.package());
    }
    if (from.has_time_cached()) {
      set_time_cached(from.time_cached());
    }
    if (from.has_community_banned()) {
      set_community_banned(from.community_banned());
    }
  }
  if (from._has_bits_[16 / 32] & 196608u) {
    if (from.has_trade_banned()) {
      set_trade_banned(from.trade_banned());
    }
    if (from.has_eligible_for_community_market()) {
      set_eligible_for_community_market(from.eligible_for_community_market());
    }
  }
}

void CMsgAccountDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAccountDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAccountDetails::CopyFrom(const CMsgAccountDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAccountDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAccountDetails::IsInitialized() const {
  return true;
}

void CMsgAccountDetails::Swap(CMsgAccountDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAccountDetails::InternalSwap(CMsgAccountDetails* other) {
  account_name_.Swap(&other->account_name_);
  std::swap(valid_, other->valid_);
  std::swap(public_profile_, other->public_profile_);
  std::swap(public_inventory_, other->public_inventory_);
  std::swap(vac_banned_, other->vac_banned_);
  std::swap(cyber_cafe_, other->cyber_cafe_);
  std::swap(school_account_, other->school_account_);
  std::swap(free_trial_account_, other->free_trial_account_);
  std::swap(subscribed_, other->subscribed_);
  std::swap(low_violence_, other->low_violence_);
  std::swap(limited_, other->limited_);
  std::swap(trusted_, other->trusted_);
  std::swap(account_locked_, other->account_locked_);
  std::swap(package_, other->package_);
  std::swap(time_cached_, other->time_cached_);
  std::swap(community_banned_, other->community_banned_);
  std::swap(trade_banned_, other->trade_banned_);
  std::swap(eligible_for_community_market_, other->eligible_for_community_market_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAccountDetails::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgAccountDetails

// optional bool valid = 1;
bool CMsgAccountDetails::has_valid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgAccountDetails::set_has_valid() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgAccountDetails::clear_has_valid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgAccountDetails::clear_valid() {
  valid_ = false;
  clear_has_valid();
}
bool CMsgAccountDetails::valid() const {
  // @@protoc_insertion_point(field_get:CMsgAccountDetails.valid)
  return valid_;
}
void CMsgAccountDetails::set_valid(bool value) {
  set_has_valid();
  valid_ = value;
  // @@protoc_insertion_point(field_set:CMsgAccountDetails.valid)
}

// optional string account_name = 2;
bool CMsgAccountDetails::has_account_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgAccountDetails::set_has_account_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgAccountDetails::clear_has_account_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgAccountDetails::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account_name();
}
const ::std::string& CMsgAccountDetails::account_name() const {
  // @@protoc_insertion_point(field_get:CMsgAccountDetails.account_name)
  return account_name_.GetNoArena();
}
void CMsgAccountDetails::set_account_name(const ::std::string& value) {
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgAccountDetails.account_name)
}
#if LANG_CXX11
void CMsgAccountDetails::set_account_name(::std::string&& value) {
  set_has_account_name();
  account_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgAccountDetails.account_name)
}
#endif
void CMsgAccountDetails::set_account_name(const char* value) {
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgAccountDetails.account_name)
}
void CMsgAccountDetails::set_account_name(const char* value, size_t size) {
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgAccountDetails.account_name)
}
::std::string* CMsgAccountDetails::mutable_account_name() {
  set_has_account_name();
  // @@protoc_insertion_point(field_mutable:CMsgAccountDetails.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgAccountDetails::release_account_name() {
  // @@protoc_insertion_point(field_release:CMsgAccountDetails.account_name)
  clear_has_account_name();
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgAccountDetails::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    set_has_account_name();
  } else {
    clear_has_account_name();
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgAccountDetails.account_name)
}

// optional bool public_profile = 4;
bool CMsgAccountDetails::has_public_profile() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgAccountDetails::set_has_public_profile() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgAccountDetails::clear_has_public_profile() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgAccountDetails::clear_public_profile() {
  public_profile_ = false;
  clear_has_public_profile();
}
bool CMsgAccountDetails::public_profile() const {
  // @@protoc_insertion_point(field_get:CMsgAccountDetails.public_profile)
  return public_profile_;
}
void CMsgAccountDetails::set_public_profile(bool value) {
  set_has_public_profile();
  public_profile_ = value;
  // @@protoc_insertion_point(field_set:CMsgAccountDetails.public_profile)
}

// optional bool public_inventory = 5;
bool CMsgAccountDetails::has_public_inventory() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgAccountDetails::set_has_public_inventory() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgAccountDetails::clear_has_public_inventory() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgAccountDetails::clear_public_inventory() {
  public_inventory_ = false;
  clear_has_public_inventory();
}
bool CMsgAccountDetails::public_inventory() const {
  // @@protoc_insertion_point(field_get:CMsgAccountDetails.public_inventory)
  return public_inventory_;
}
void CMsgAccountDetails::set_public_inventory(bool value) {
  set_has_public_inventory();
  public_inventory_ = value;
  // @@protoc_insertion_point(field_set:CMsgAccountDetails.public_inventory)
}

// optional bool vac_banned = 6;
bool CMsgAccountDetails::has_vac_banned() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgAccountDetails::set_has_vac_banned() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgAccountDetails::clear_has_vac_banned() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgAccountDetails::clear_vac_banned() {
  vac_banned_ = false;
  clear_has_vac_banned();
}
bool CMsgAccountDetails::vac_banned() const {
  // @@protoc_insertion_point(field_get:CMsgAccountDetails.vac_banned)
  return vac_banned_;
}
void CMsgAccountDetails::set_vac_banned(bool value) {
  set_has_vac_banned();
  vac_banned_ = value;
  // @@protoc_insertion_point(field_set:CMsgAccountDetails.vac_banned)
}

// optional bool cyber_cafe = 7;
bool CMsgAccountDetails::has_cyber_cafe() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgAccountDetails::set_has_cyber_cafe() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgAccountDetails::clear_has_cyber_cafe() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgAccountDetails::clear_cyber_cafe() {
  cyber_cafe_ = false;
  clear_has_cyber_cafe();
}
bool CMsgAccountDetails::cyber_cafe() const {
  // @@protoc_insertion_point(field_get:CMsgAccountDetails.cyber_cafe)
  return cyber_cafe_;
}
void CMsgAccountDetails::set_cyber_cafe(bool value) {
  set_has_cyber_cafe();
  cyber_cafe_ = value;
  // @@protoc_insertion_point(field_set:CMsgAccountDetails.cyber_cafe)
}

// optional bool school_account = 8;
bool CMsgAccountDetails::has_school_account() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgAccountDetails::set_has_school_account() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgAccountDetails::clear_has_school_account() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgAccountDetails::clear_school_account() {
  school_account_ = false;
  clear_has_school_account();
}
bool CMsgAccountDetails::school_account() const {
  // @@protoc_insertion_point(field_get:CMsgAccountDetails.school_account)
  return school_account_;
}
void CMsgAccountDetails::set_school_account(bool value) {
  set_has_school_account();
  school_account_ = value;
  // @@protoc_insertion_point(field_set:CMsgAccountDetails.school_account)
}

// optional bool free_trial_account = 9;
bool CMsgAccountDetails::has_free_trial_account() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgAccountDetails::set_has_free_trial_account() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgAccountDetails::clear_has_free_trial_account() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgAccountDetails::clear_free_trial_account() {
  free_trial_account_ = false;
  clear_has_free_trial_account();
}
bool CMsgAccountDetails::free_trial_account() const {
  // @@protoc_insertion_point(field_get:CMsgAccountDetails.free_trial_account)
  return free_trial_account_;
}
void CMsgAccountDetails::set_free_trial_account(bool value) {
  set_has_free_trial_account();
  free_trial_account_ = value;
  // @@protoc_insertion_point(field_set:CMsgAccountDetails.free_trial_account)
}

// optional bool subscribed = 10;
bool CMsgAccountDetails::has_subscribed() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CMsgAccountDetails::set_has_subscribed() {
  _has_bits_[0] |= 0x00000100u;
}
void CMsgAccountDetails::clear_has_subscribed() {
  _has_bits_[0] &= ~0x00000100u;
}
void CMsgAccountDetails::clear_subscribed() {
  subscribed_ = false;
  clear_has_subscribed();
}
bool CMsgAccountDetails::subscribed() const {
  // @@protoc_insertion_point(field_get:CMsgAccountDetails.subscribed)
  return subscribed_;
}
void CMsgAccountDetails::set_subscribed(bool value) {
  set_has_subscribed();
  subscribed_ = value;
  // @@protoc_insertion_point(field_set:CMsgAccountDetails.subscribed)
}

// optional bool low_violence = 11;
bool CMsgAccountDetails::has_low_violence() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CMsgAccountDetails::set_has_low_violence() {
  _has_bits_[0] |= 0x00000200u;
}
void CMsgAccountDetails::clear_has_low_violence() {
  _has_bits_[0] &= ~0x00000200u;
}
void CMsgAccountDetails::clear_low_violence() {
  low_violence_ = false;
  clear_has_low_violence();
}
bool CMsgAccountDetails::low_violence() const {
  // @@protoc_insertion_point(field_get:CMsgAccountDetails.low_violence)
  return low_violence_;
}
void CMsgAccountDetails::set_low_violence(bool value) {
  set_has_low_violence();
  low_violence_ = value;
  // @@protoc_insertion_point(field_set:CMsgAccountDetails.low_violence)
}

// optional bool limited = 12;
bool CMsgAccountDetails::has_limited() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CMsgAccountDetails::set_has_limited() {
  _has_bits_[0] |= 0x00000400u;
}
void CMsgAccountDetails::clear_has_limited() {
  _has_bits_[0] &= ~0x00000400u;
}
void CMsgAccountDetails::clear_limited() {
  limited_ = false;
  clear_has_limited();
}
bool CMsgAccountDetails::limited() const {
  // @@protoc_insertion_point(field_get:CMsgAccountDetails.limited)
  return limited_;
}
void CMsgAccountDetails::set_limited(bool value) {
  set_has_limited();
  limited_ = value;
  // @@protoc_insertion_point(field_set:CMsgAccountDetails.limited)
}

// optional bool trusted = 13;
bool CMsgAccountDetails::has_trusted() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void CMsgAccountDetails::set_has_trusted() {
  _has_bits_[0] |= 0x00000800u;
}
void CMsgAccountDetails::clear_has_trusted() {
  _has_bits_[0] &= ~0x00000800u;
}
void CMsgAccountDetails::clear_trusted() {
  trusted_ = false;
  clear_has_trusted();
}
bool CMsgAccountDetails::trusted() const {
  // @@protoc_insertion_point(field_get:CMsgAccountDetails.trusted)
  return trusted_;
}
void CMsgAccountDetails::set_trusted(bool value) {
  set_has_trusted();
  trusted_ = value;
  // @@protoc_insertion_point(field_set:CMsgAccountDetails.trusted)
}

// optional uint32 package = 14;
bool CMsgAccountDetails::has_package() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void CMsgAccountDetails::set_has_package() {
  _has_bits_[0] |= 0x00002000u;
}
void CMsgAccountDetails::clear_has_package() {
  _has_bits_[0] &= ~0x00002000u;
}
void CMsgAccountDetails::clear_package() {
  package_ = 0u;
  clear_has_package();
}
::google::protobuf::uint32 CMsgAccountDetails::package() const {
  // @@protoc_insertion_point(field_get:CMsgAccountDetails.package)
  return package_;
}
void CMsgAccountDetails::set_package(::google::protobuf::uint32 value) {
  set_has_package();
  package_ = value;
  // @@protoc_insertion_point(field_set:CMsgAccountDetails.package)
}

// optional fixed32 time_cached = 15;
bool CMsgAccountDetails::has_time_cached() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void CMsgAccountDetails::set_has_time_cached() {
  _has_bits_[0] |= 0x00004000u;
}
void CMsgAccountDetails::clear_has_time_cached() {
  _has_bits_[0] &= ~0x00004000u;
}
void CMsgAccountDetails::clear_time_cached() {
  time_cached_ = 0u;
  clear_has_time_cached();
}
::google::protobuf::uint32 CMsgAccountDetails::time_cached() const {
  // @@protoc_insertion_point(field_get:CMsgAccountDetails.time_cached)
  return time_cached_;
}
void CMsgAccountDetails::set_time_cached(::google::protobuf::uint32 value) {
  set_has_time_cached();
  time_cached_ = value;
  // @@protoc_insertion_point(field_set:CMsgAccountDetails.time_cached)
}

// optional bool account_locked = 16;
bool CMsgAccountDetails::has_account_locked() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void CMsgAccountDetails::set_has_account_locked() {
  _has_bits_[0] |= 0x00001000u;
}
void CMsgAccountDetails::clear_has_account_locked() {
  _has_bits_[0] &= ~0x00001000u;
}
void CMsgAccountDetails::clear_account_locked() {
  account_locked_ = false;
  clear_has_account_locked();
}
bool CMsgAccountDetails::account_locked() const {
  // @@protoc_insertion_point(field_get:CMsgAccountDetails.account_locked)
  return account_locked_;
}
void CMsgAccountDetails::set_account_locked(bool value) {
  set_has_account_locked();
  account_locked_ = value;
  // @@protoc_insertion_point(field_set:CMsgAccountDetails.account_locked)
}

// optional bool community_banned = 17;
bool CMsgAccountDetails::has_community_banned() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void CMsgAccountDetails::set_has_community_banned() {
  _has_bits_[0] |= 0x00008000u;
}
void CMsgAccountDetails::clear_has_community_banned() {
  _has_bits_[0] &= ~0x00008000u;
}
void CMsgAccountDetails::clear_community_banned() {
  community_banned_ = false;
  clear_has_community_banned();
}
bool CMsgAccountDetails::community_banned() const {
  // @@protoc_insertion_point(field_get:CMsgAccountDetails.community_banned)
  return community_banned_;
}
void CMsgAccountDetails::set_community_banned(bool value) {
  set_has_community_banned();
  community_banned_ = value;
  // @@protoc_insertion_point(field_set:CMsgAccountDetails.community_banned)
}

// optional bool trade_banned = 18;
bool CMsgAccountDetails::has_trade_banned() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void CMsgAccountDetails::set_has_trade_banned() {
  _has_bits_[0] |= 0x00010000u;
}
void CMsgAccountDetails::clear_has_trade_banned() {
  _has_bits_[0] &= ~0x00010000u;
}
void CMsgAccountDetails::clear_trade_banned() {
  trade_banned_ = false;
  clear_has_trade_banned();
}
bool CMsgAccountDetails::trade_banned() const {
  // @@protoc_insertion_point(field_get:CMsgAccountDetails.trade_banned)
  return trade_banned_;
}
void CMsgAccountDetails::set_trade_banned(bool value) {
  set_has_trade_banned();
  trade_banned_ = value;
  // @@protoc_insertion_point(field_set:CMsgAccountDetails.trade_banned)
}

// optional bool eligible_for_community_market = 19;
bool CMsgAccountDetails::has_eligible_for_community_market() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void CMsgAccountDetails::set_has_eligible_for_community_market() {
  _has_bits_[0] |= 0x00020000u;
}
void CMsgAccountDetails::clear_has_eligible_for_community_market() {
  _has_bits_[0] &= ~0x00020000u;
}
void CMsgAccountDetails::clear_eligible_for_community_market() {
  eligible_for_community_market_ = false;
  clear_has_eligible_for_community_market();
}
bool CMsgAccountDetails::eligible_for_community_market() const {
  // @@protoc_insertion_point(field_get:CMsgAccountDetails.eligible_for_community_market)
  return eligible_for_community_market_;
}
void CMsgAccountDetails::set_eligible_for_community_market(bool value) {
  set_has_eligible_for_community_market();
  eligible_for_community_market_ = value;
  // @@protoc_insertion_point(field_set:CMsgAccountDetails.eligible_for_community_market)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCMultiplexMessage::kMsgtypeFieldNumber;
const int CMsgGCMultiplexMessage::kPayloadFieldNumber;
const int CMsgGCMultiplexMessage::kSteamidsFieldNumber;
const int CMsgGCMultiplexMessage::kReplytogcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCMultiplexMessage::CMsgGCMultiplexMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMultiplexMessage)
}
CMsgGCMultiplexMessage::CMsgGCMultiplexMessage(const CMsgGCMultiplexMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      steamids_(from.steamids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_payload()) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  ::memcpy(&msgtype_, &from.msgtype_,
    reinterpret_cast<char*>(&replytogc_) -
    reinterpret_cast<char*>(&msgtype_) + sizeof(replytogc_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCMultiplexMessage)
}

void CMsgGCMultiplexMessage::SharedCtor() {
  _cached_size_ = 0;
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtype_, 0, reinterpret_cast<char*>(&replytogc_) -
    reinterpret_cast<char*>(&msgtype_) + sizeof(replytogc_));
}

CMsgGCMultiplexMessage::~CMsgGCMultiplexMessage() {
  // @@protoc_insertion_point(destructor:CMsgGCMultiplexMessage)
  SharedDtor();
}

void CMsgGCMultiplexMessage::SharedDtor() {
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCMultiplexMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMultiplexMessage::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[11].descriptor;
}

const CMsgGCMultiplexMessage& CMsgGCMultiplexMessage::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCMultiplexMessage* CMsgGCMultiplexMessage::New(::google::protobuf::Arena* arena) const {
  CMsgGCMultiplexMessage* n = new CMsgGCMultiplexMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMultiplexMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMultiplexMessage)
  steamids_.Clear();
  if (has_payload()) {
    GOOGLE_DCHECK(!payload_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*payload_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&msgtype_, 0, reinterpret_cast<char*>(&replytogc_) -
      reinterpret_cast<char*>(&msgtype_) + sizeof(replytogc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCMultiplexMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMultiplexMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 msgtype = 1;
      case 1: {
        if (tag == 8u) {
          set_has_msgtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes payload = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 steamids = 3;
      case 3: {
        if (tag == 25u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 25u, input, this->mutable_steamids())));
        } else if (tag == 26u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steamids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool replytogc = 4;
      case 4: {
        if (tag == 32u) {
          set_has_replytogc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &replytogc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMultiplexMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMultiplexMessage)
  return false;
#undef DO_
}

void CMsgGCMultiplexMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMultiplexMessage)
  // optional uint32 msgtype = 1;
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgtype(), output);
  }

  // optional bytes payload = 2;
  if (has_payload()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->payload(), output);
  }

  // repeated fixed64 steamids = 3;
  for (int i = 0; i < this->steamids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      3, this->steamids(i), output);
  }

  // optional bool replytogc = 4;
  if (has_replytogc()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->replytogc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMultiplexMessage)
}

::google::protobuf::uint8* CMsgGCMultiplexMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMultiplexMessage)
  // optional uint32 msgtype = 1;
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgtype(), target);
  }

  // optional bytes payload = 2;
  if (has_payload()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->payload(), target);
  }

  // repeated fixed64 steamids = 3;
  for (int i = 0; i < this->steamids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64ToArray(3, this->steamids(i), target);
  }

  // optional bool replytogc = 4;
  if (has_replytogc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->replytogc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMultiplexMessage)
  return target;
}

size_t CMsgGCMultiplexMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMultiplexMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated fixed64 steamids = 3;
  {
    unsigned int count = this->steamids_size();
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steamids_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes payload = 2;
    if (has_payload()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->payload());
    }

    // optional uint32 msgtype = 1;
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgtype());
    }

    // optional bool replytogc = 4;
    if (has_replytogc()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMultiplexMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCMultiplexMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCMultiplexMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMultiplexMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCMultiplexMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCMultiplexMessage)
    MergeFrom(*source);
  }
}

void CMsgGCMultiplexMessage::MergeFrom(const CMsgGCMultiplexMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMultiplexMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steamids_.MergeFrom(from.steamids_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_payload()) {
      set_has_payload();
      payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_replytogc()) {
      set_replytogc(from.replytogc());
    }
  }
}

void CMsgGCMultiplexMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCMultiplexMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMultiplexMessage::CopyFrom(const CMsgGCMultiplexMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMultiplexMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMultiplexMessage::IsInitialized() const {
  return true;
}

void CMsgGCMultiplexMessage::Swap(CMsgGCMultiplexMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMultiplexMessage::InternalSwap(CMsgGCMultiplexMessage* other) {
  steamids_.UnsafeArenaSwap(&other->steamids_);
  payload_.Swap(&other->payload_);
  std::swap(msgtype_, other->msgtype_);
  std::swap(replytogc_, other->replytogc_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMultiplexMessage::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCMultiplexMessage

// optional uint32 msgtype = 1;
bool CMsgGCMultiplexMessage::has_msgtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCMultiplexMessage::set_has_msgtype() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCMultiplexMessage::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCMultiplexMessage::clear_msgtype() {
  msgtype_ = 0u;
  clear_has_msgtype();
}
::google::protobuf::uint32 CMsgGCMultiplexMessage::msgtype() const {
  // @@protoc_insertion_point(field_get:CMsgGCMultiplexMessage.msgtype)
  return msgtype_;
}
void CMsgGCMultiplexMessage::set_msgtype(::google::protobuf::uint32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMultiplexMessage.msgtype)
}

// optional bytes payload = 2;
bool CMsgGCMultiplexMessage::has_payload() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCMultiplexMessage::set_has_payload() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCMultiplexMessage::clear_has_payload() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCMultiplexMessage::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_payload();
}
const ::std::string& CMsgGCMultiplexMessage::payload() const {
  // @@protoc_insertion_point(field_get:CMsgGCMultiplexMessage.payload)
  return payload_.GetNoArena();
}
void CMsgGCMultiplexMessage::set_payload(const ::std::string& value) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGCMultiplexMessage.payload)
}
#if LANG_CXX11
void CMsgGCMultiplexMessage::set_payload(::std::string&& value) {
  set_has_payload();
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgGCMultiplexMessage.payload)
}
#endif
void CMsgGCMultiplexMessage::set_payload(const char* value) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGCMultiplexMessage.payload)
}
void CMsgGCMultiplexMessage::set_payload(const void* value, size_t size) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGCMultiplexMessage.payload)
}
::std::string* CMsgGCMultiplexMessage::mutable_payload() {
  set_has_payload();
  // @@protoc_insertion_point(field_mutable:CMsgGCMultiplexMessage.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGCMultiplexMessage::release_payload() {
  // @@protoc_insertion_point(field_release:CMsgGCMultiplexMessage.payload)
  clear_has_payload();
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGCMultiplexMessage::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    set_has_payload();
  } else {
    clear_has_payload();
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:CMsgGCMultiplexMessage.payload)
}

// repeated fixed64 steamids = 3;
int CMsgGCMultiplexMessage::steamids_size() const {
  return steamids_.size();
}
void CMsgGCMultiplexMessage::clear_steamids() {
  steamids_.Clear();
}
::google::protobuf::uint64 CMsgGCMultiplexMessage::steamids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCMultiplexMessage.steamids)
  return steamids_.Get(index);
}
void CMsgGCMultiplexMessage::set_steamids(int index, ::google::protobuf::uint64 value) {
  steamids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCMultiplexMessage.steamids)
}
void CMsgGCMultiplexMessage::add_steamids(::google::protobuf::uint64 value) {
  steamids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCMultiplexMessage.steamids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgGCMultiplexMessage::steamids() const {
  // @@protoc_insertion_point(field_list:CMsgGCMultiplexMessage.steamids)
  return steamids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgGCMultiplexMessage::mutable_steamids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCMultiplexMessage.steamids)
  return &steamids_;
}

// optional bool replytogc = 4;
bool CMsgGCMultiplexMessage::has_replytogc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGCMultiplexMessage::set_has_replytogc() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGCMultiplexMessage::clear_has_replytogc() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGCMultiplexMessage::clear_replytogc() {
  replytogc_ = false;
  clear_has_replytogc();
}
bool CMsgGCMultiplexMessage::replytogc() const {
  // @@protoc_insertion_point(field_get:CMsgGCMultiplexMessage.replytogc)
  return replytogc_;
}
void CMsgGCMultiplexMessage::set_replytogc(bool value) {
  set_has_replytogc();
  replytogc_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMultiplexMessage.replytogc)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCMultiplexMessage_Response::kMsgtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCMultiplexMessage_Response::CMsgGCMultiplexMessage_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMultiplexMessage_Response)
}
CMsgGCMultiplexMessage_Response::CMsgGCMultiplexMessage_Response(const CMsgGCMultiplexMessage_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgtype_ = from.msgtype_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCMultiplexMessage_Response)
}

void CMsgGCMultiplexMessage_Response::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 0u;
}

CMsgGCMultiplexMessage_Response::~CMsgGCMultiplexMessage_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCMultiplexMessage_Response)
  SharedDtor();
}

void CMsgGCMultiplexMessage_Response::SharedDtor() {
}

void CMsgGCMultiplexMessage_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMultiplexMessage_Response::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[12].descriptor;
}

const CMsgGCMultiplexMessage_Response& CMsgGCMultiplexMessage_Response::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCMultiplexMessage_Response* CMsgGCMultiplexMessage_Response::New(::google::protobuf::Arena* arena) const {
  CMsgGCMultiplexMessage_Response* n = new CMsgGCMultiplexMessage_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMultiplexMessage_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMultiplexMessage_Response)
  msgtype_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCMultiplexMessage_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMultiplexMessage_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 msgtype = 1;
      case 1: {
        if (tag == 8u) {
          set_has_msgtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMultiplexMessage_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMultiplexMessage_Response)
  return false;
#undef DO_
}

void CMsgGCMultiplexMessage_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMultiplexMessage_Response)
  // optional uint32 msgtype = 1;
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgtype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMultiplexMessage_Response)
}

::google::protobuf::uint8* CMsgGCMultiplexMessage_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMultiplexMessage_Response)
  // optional uint32 msgtype = 1;
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgtype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMultiplexMessage_Response)
  return target;
}

size_t CMsgGCMultiplexMessage_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMultiplexMessage_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 msgtype = 1;
  if (has_msgtype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMultiplexMessage_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCMultiplexMessage_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCMultiplexMessage_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMultiplexMessage_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCMultiplexMessage_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCMultiplexMessage_Response)
    MergeFrom(*source);
  }
}

void CMsgGCMultiplexMessage_Response::MergeFrom(const CMsgGCMultiplexMessage_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMultiplexMessage_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msgtype()) {
    set_msgtype(from.msgtype());
  }
}

void CMsgGCMultiplexMessage_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCMultiplexMessage_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMultiplexMessage_Response::CopyFrom(const CMsgGCMultiplexMessage_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMultiplexMessage_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMultiplexMessage_Response::IsInitialized() const {
  return true;
}

void CMsgGCMultiplexMessage_Response::Swap(CMsgGCMultiplexMessage_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMultiplexMessage_Response::InternalSwap(CMsgGCMultiplexMessage_Response* other) {
  std::swap(msgtype_, other->msgtype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMultiplexMessage_Response::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCMultiplexMessage_Response

// optional uint32 msgtype = 1;
bool CMsgGCMultiplexMessage_Response::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCMultiplexMessage_Response::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCMultiplexMessage_Response::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCMultiplexMessage_Response::clear_msgtype() {
  msgtype_ = 0u;
  clear_has_msgtype();
}
::google::protobuf::uint32 CMsgGCMultiplexMessage_Response::msgtype() const {
  // @@protoc_insertion_point(field_get:CMsgGCMultiplexMessage_Response.msgtype)
  return msgtype_;
}
void CMsgGCMultiplexMessage_Response::set_msgtype(::google::protobuf::uint32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMultiplexMessage_Response.msgtype)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCToGCMsgMasterAck::kDirIndexFieldNumber;
const int CGCToGCMsgMasterAck::kGcTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCToGCMsgMasterAck::CGCToGCMsgMasterAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCToGCMsgMasterAck)
}
CGCToGCMsgMasterAck::CGCToGCMsgMasterAck(const CGCToGCMsgMasterAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dir_index_, &from.dir_index_,
    reinterpret_cast<char*>(&gc_type_) -
    reinterpret_cast<char*>(&dir_index_) + sizeof(gc_type_));
  // @@protoc_insertion_point(copy_constructor:CGCToGCMsgMasterAck)
}

void CGCToGCMsgMasterAck::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&dir_index_, 0, reinterpret_cast<char*>(&gc_type_) -
    reinterpret_cast<char*>(&dir_index_) + sizeof(gc_type_));
}

CGCToGCMsgMasterAck::~CGCToGCMsgMasterAck() {
  // @@protoc_insertion_point(destructor:CGCToGCMsgMasterAck)
  SharedDtor();
}

void CGCToGCMsgMasterAck::SharedDtor() {
}

void CGCToGCMsgMasterAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCToGCMsgMasterAck::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[13].descriptor;
}

const CGCToGCMsgMasterAck& CGCToGCMsgMasterAck::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CGCToGCMsgMasterAck* CGCToGCMsgMasterAck::New(::google::protobuf::Arena* arena) const {
  CGCToGCMsgMasterAck* n = new CGCToGCMsgMasterAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCToGCMsgMasterAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCToGCMsgMasterAck)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&dir_index_, 0, reinterpret_cast<char*>(&gc_type_) -
      reinterpret_cast<char*>(&dir_index_) + sizeof(gc_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCToGCMsgMasterAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCToGCMsgMasterAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 dir_index = 1;
      case 1: {
        if (tag == 8u) {
          set_has_dir_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dir_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gc_type = 2;
      case 2: {
        if (tag == 16u) {
          set_has_gc_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gc_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCToGCMsgMasterAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCToGCMsgMasterAck)
  return false;
#undef DO_
}

void CGCToGCMsgMasterAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCToGCMsgMasterAck)
  // optional uint32 dir_index = 1;
  if (has_dir_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dir_index(), output);
  }

  // optional uint32 gc_type = 2;
  if (has_gc_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gc_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCToGCMsgMasterAck)
}

::google::protobuf::uint8* CGCToGCMsgMasterAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCToGCMsgMasterAck)
  // optional uint32 dir_index = 1;
  if (has_dir_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dir_index(), target);
  }

  // optional uint32 gc_type = 2;
  if (has_gc_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gc_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCToGCMsgMasterAck)
  return target;
}

size_t CGCToGCMsgMasterAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCToGCMsgMasterAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 dir_index = 1;
    if (has_dir_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dir_index());
    }

    // optional uint32 gc_type = 2;
    if (has_gc_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gc_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCToGCMsgMasterAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCToGCMsgMasterAck)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCToGCMsgMasterAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCToGCMsgMasterAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCToGCMsgMasterAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCToGCMsgMasterAck)
    MergeFrom(*source);
  }
}

void CGCToGCMsgMasterAck::MergeFrom(const CGCToGCMsgMasterAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCToGCMsgMasterAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_dir_index()) {
      set_dir_index(from.dir_index());
    }
    if (from.has_gc_type()) {
      set_gc_type(from.gc_type());
    }
  }
}

void CGCToGCMsgMasterAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCToGCMsgMasterAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCToGCMsgMasterAck::CopyFrom(const CGCToGCMsgMasterAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCToGCMsgMasterAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCToGCMsgMasterAck::IsInitialized() const {
  return true;
}

void CGCToGCMsgMasterAck::Swap(CGCToGCMsgMasterAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCToGCMsgMasterAck::InternalSwap(CGCToGCMsgMasterAck* other) {
  std::swap(dir_index_, other->dir_index_);
  std::swap(gc_type_, other->gc_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCToGCMsgMasterAck::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCToGCMsgMasterAck

// optional uint32 dir_index = 1;
bool CGCToGCMsgMasterAck::has_dir_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCToGCMsgMasterAck::set_has_dir_index() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCToGCMsgMasterAck::clear_has_dir_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCToGCMsgMasterAck::clear_dir_index() {
  dir_index_ = 0u;
  clear_has_dir_index();
}
::google::protobuf::uint32 CGCToGCMsgMasterAck::dir_index() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterAck.dir_index)
  return dir_index_;
}
void CGCToGCMsgMasterAck::set_dir_index(::google::protobuf::uint32 value) {
  set_has_dir_index();
  dir_index_ = value;
  // @@protoc_insertion_point(field_set:CGCToGCMsgMasterAck.dir_index)
}

// optional uint32 gc_type = 2;
bool CGCToGCMsgMasterAck::has_gc_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCToGCMsgMasterAck::set_has_gc_type() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCToGCMsgMasterAck::clear_has_gc_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCToGCMsgMasterAck::clear_gc_type() {
  gc_type_ = 0u;
  clear_has_gc_type();
}
::google::protobuf::uint32 CGCToGCMsgMasterAck::gc_type() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterAck.gc_type)
  return gc_type_;
}
void CGCToGCMsgMasterAck::set_gc_type(::google::protobuf::uint32 value) {
  set_has_gc_type();
  gc_type_ = value;
  // @@protoc_insertion_point(field_set:CGCToGCMsgMasterAck.gc_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCToGCMsgMasterAck_Response::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCToGCMsgMasterAck_Response::CGCToGCMsgMasterAck_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCToGCMsgMasterAck_Response)
}
CGCToGCMsgMasterAck_Response::CGCToGCMsgMasterAck_Response(const CGCToGCMsgMasterAck_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CGCToGCMsgMasterAck_Response)
}

void CGCToGCMsgMasterAck_Response::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2;
}

CGCToGCMsgMasterAck_Response::~CGCToGCMsgMasterAck_Response() {
  // @@protoc_insertion_point(destructor:CGCToGCMsgMasterAck_Response)
  SharedDtor();
}

void CGCToGCMsgMasterAck_Response::SharedDtor() {
}

void CGCToGCMsgMasterAck_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCToGCMsgMasterAck_Response::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[14].descriptor;
}

const CGCToGCMsgMasterAck_Response& CGCToGCMsgMasterAck_Response::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CGCToGCMsgMasterAck_Response* CGCToGCMsgMasterAck_Response::New(::google::protobuf::Arena* arena) const {
  CGCToGCMsgMasterAck_Response* n = new CGCToGCMsgMasterAck_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCToGCMsgMasterAck_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCToGCMsgMasterAck_Response)
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCToGCMsgMasterAck_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCToGCMsgMasterAck_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (tag == 8u) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCToGCMsgMasterAck_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCToGCMsgMasterAck_Response)
  return false;
#undef DO_
}

void CGCToGCMsgMasterAck_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCToGCMsgMasterAck_Response)
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCToGCMsgMasterAck_Response)
}

::google::protobuf::uint8* CGCToGCMsgMasterAck_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCToGCMsgMasterAck_Response)
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCToGCMsgMasterAck_Response)
  return target;
}

size_t CGCToGCMsgMasterAck_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCToGCMsgMasterAck_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCToGCMsgMasterAck_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCToGCMsgMasterAck_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCToGCMsgMasterAck_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCToGCMsgMasterAck_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCToGCMsgMasterAck_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCToGCMsgMasterAck_Response)
    MergeFrom(*source);
  }
}

void CGCToGCMsgMasterAck_Response::MergeFrom(const CGCToGCMsgMasterAck_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCToGCMsgMasterAck_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CGCToGCMsgMasterAck_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCToGCMsgMasterAck_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCToGCMsgMasterAck_Response::CopyFrom(const CGCToGCMsgMasterAck_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCToGCMsgMasterAck_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCToGCMsgMasterAck_Response::IsInitialized() const {
  return true;
}

void CGCToGCMsgMasterAck_Response::Swap(CGCToGCMsgMasterAck_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCToGCMsgMasterAck_Response::InternalSwap(CGCToGCMsgMasterAck_Response* other) {
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCToGCMsgMasterAck_Response::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCToGCMsgMasterAck_Response

// optional int32 eresult = 1 [default = 2];
bool CGCToGCMsgMasterAck_Response::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCToGCMsgMasterAck_Response::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCToGCMsgMasterAck_Response::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCToGCMsgMasterAck_Response::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CGCToGCMsgMasterAck_Response::eresult() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterAck_Response.eresult)
  return eresult_;
}
void CGCToGCMsgMasterAck_Response::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CGCToGCMsgMasterAck_Response.eresult)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCToGCMsgMasterStartupComplete::CGCToGCMsgMasterStartupComplete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCToGCMsgMasterStartupComplete)
}
CGCToGCMsgMasterStartupComplete::CGCToGCMsgMasterStartupComplete(const CGCToGCMsgMasterStartupComplete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CGCToGCMsgMasterStartupComplete)
}

void CGCToGCMsgMasterStartupComplete::SharedCtor() {
  _cached_size_ = 0;
}

CGCToGCMsgMasterStartupComplete::~CGCToGCMsgMasterStartupComplete() {
  // @@protoc_insertion_point(destructor:CGCToGCMsgMasterStartupComplete)
  SharedDtor();
}

void CGCToGCMsgMasterStartupComplete::SharedDtor() {
}

void CGCToGCMsgMasterStartupComplete::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCToGCMsgMasterStartupComplete::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[15].descriptor;
}

const CGCToGCMsgMasterStartupComplete& CGCToGCMsgMasterStartupComplete::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CGCToGCMsgMasterStartupComplete* CGCToGCMsgMasterStartupComplete::New(::google::protobuf::Arena* arena) const {
  CGCToGCMsgMasterStartupComplete* n = new CGCToGCMsgMasterStartupComplete;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCToGCMsgMasterStartupComplete::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCToGCMsgMasterStartupComplete)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCToGCMsgMasterStartupComplete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCToGCMsgMasterStartupComplete)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CGCToGCMsgMasterStartupComplete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCToGCMsgMasterStartupComplete)
  return false;
#undef DO_
}

void CGCToGCMsgMasterStartupComplete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCToGCMsgMasterStartupComplete)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCToGCMsgMasterStartupComplete)
}

::google::protobuf::uint8* CGCToGCMsgMasterStartupComplete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCToGCMsgMasterStartupComplete)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCToGCMsgMasterStartupComplete)
  return target;
}

size_t CGCToGCMsgMasterStartupComplete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCToGCMsgMasterStartupComplete)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCToGCMsgMasterStartupComplete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCToGCMsgMasterStartupComplete)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCToGCMsgMasterStartupComplete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCToGCMsgMasterStartupComplete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCToGCMsgMasterStartupComplete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCToGCMsgMasterStartupComplete)
    MergeFrom(*source);
  }
}

void CGCToGCMsgMasterStartupComplete::MergeFrom(const CGCToGCMsgMasterStartupComplete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCToGCMsgMasterStartupComplete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void CGCToGCMsgMasterStartupComplete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCToGCMsgMasterStartupComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCToGCMsgMasterStartupComplete::CopyFrom(const CGCToGCMsgMasterStartupComplete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCToGCMsgMasterStartupComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCToGCMsgMasterStartupComplete::IsInitialized() const {
  return true;
}

void CGCToGCMsgMasterStartupComplete::Swap(CGCToGCMsgMasterStartupComplete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCToGCMsgMasterStartupComplete::InternalSwap(CGCToGCMsgMasterStartupComplete* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCToGCMsgMasterStartupComplete::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[15];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCToGCMsgMasterStartupComplete

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCToGCMsgRouted::kMsgTypeFieldNumber;
const int CGCToGCMsgRouted::kSenderIdFieldNumber;
const int CGCToGCMsgRouted::kNetMessageFieldNumber;
const int CGCToGCMsgRouted::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCToGCMsgRouted::CGCToGCMsgRouted()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCToGCMsgRouted)
}
CGCToGCMsgRouted::CGCToGCMsgRouted(const CGCToGCMsgRouted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  net_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_net_message()) {
    net_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.net_message_);
  }
  ::memcpy(&sender_id_, &from.sender_id_,
    reinterpret_cast<char*>(&ip_) -
    reinterpret_cast<char*>(&sender_id_) + sizeof(ip_));
  // @@protoc_insertion_point(copy_constructor:CGCToGCMsgRouted)
}

void CGCToGCMsgRouted::SharedCtor() {
  _cached_size_ = 0;
  net_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sender_id_, 0, reinterpret_cast<char*>(&ip_) -
    reinterpret_cast<char*>(&sender_id_) + sizeof(ip_));
}

CGCToGCMsgRouted::~CGCToGCMsgRouted() {
  // @@protoc_insertion_point(destructor:CGCToGCMsgRouted)
  SharedDtor();
}

void CGCToGCMsgRouted::SharedDtor() {
  net_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CGCToGCMsgRouted::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCToGCMsgRouted::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[16].descriptor;
}

const CGCToGCMsgRouted& CGCToGCMsgRouted::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CGCToGCMsgRouted* CGCToGCMsgRouted::New(::google::protobuf::Arena* arena) const {
  CGCToGCMsgRouted* n = new CGCToGCMsgRouted;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCToGCMsgRouted::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCToGCMsgRouted)
  if (has_net_message()) {
    GOOGLE_DCHECK(!net_message_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*net_message_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&sender_id_, 0, reinterpret_cast<char*>(&ip_) -
      reinterpret_cast<char*>(&sender_id_) + sizeof(ip_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCToGCMsgRouted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCToGCMsgRouted)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 msg_type = 1;
      case 1: {
        if (tag == 8u) {
          set_has_msg_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 sender_id = 2;
      case 2: {
        if (tag == 17u) {
          set_has_sender_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &sender_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes net_message = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_net_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ip = 4;
      case 4: {
        if (tag == 32u) {
          set_has_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCToGCMsgRouted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCToGCMsgRouted)
  return false;
#undef DO_
}

void CGCToGCMsgRouted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCToGCMsgRouted)
  // optional uint32 msg_type = 1;
  if (has_msg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msg_type(), output);
  }

  // optional fixed64 sender_id = 2;
  if (has_sender_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->sender_id(), output);
  }

  // optional bytes net_message = 3;
  if (has_net_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->net_message(), output);
  }

  // optional uint32 ip = 4;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ip(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCToGCMsgRouted)
}

::google::protobuf::uint8* CGCToGCMsgRouted::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCToGCMsgRouted)
  // optional uint32 msg_type = 1;
  if (has_msg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msg_type(), target);
  }

  // optional fixed64 sender_id = 2;
  if (has_sender_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->sender_id(), target);
  }

  // optional bytes net_message = 3;
  if (has_net_message()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->net_message(), target);
  }

  // optional uint32 ip = 4;
  if (has_ip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ip(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCToGCMsgRouted)
  return target;
}

size_t CGCToGCMsgRouted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCToGCMsgRouted)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes net_message = 3;
    if (has_net_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->net_message());
    }

    // optional fixed64 sender_id = 2;
    if (has_sender_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 msg_type = 1;
    if (has_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msg_type());
    }

    // optional uint32 ip = 4;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ip());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCToGCMsgRouted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCToGCMsgRouted)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCToGCMsgRouted* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCToGCMsgRouted>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCToGCMsgRouted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCToGCMsgRouted)
    MergeFrom(*source);
  }
}

void CGCToGCMsgRouted::MergeFrom(const CGCToGCMsgRouted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCToGCMsgRouted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_net_message()) {
      set_has_net_message();
      net_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.net_message_);
    }
    if (from.has_sender_id()) {
      set_sender_id(from.sender_id());
    }
    if (from.has_msg_type()) {
      set_msg_type(from.msg_type());
    }
    if (from.has_ip()) {
      set_ip(from.ip());
    }
  }
}

void CGCToGCMsgRouted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCToGCMsgRouted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCToGCMsgRouted::CopyFrom(const CGCToGCMsgRouted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCToGCMsgRouted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCToGCMsgRouted::IsInitialized() const {
  return true;
}

void CGCToGCMsgRouted::Swap(CGCToGCMsgRouted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCToGCMsgRouted::InternalSwap(CGCToGCMsgRouted* other) {
  net_message_.Swap(&other->net_message_);
  std::swap(sender_id_, other->sender_id_);
  std::swap(msg_type_, other->msg_type_);
  std::swap(ip_, other->ip_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCToGCMsgRouted::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[16];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCToGCMsgRouted

// optional uint32 msg_type = 1;
bool CGCToGCMsgRouted::has_msg_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGCToGCMsgRouted::set_has_msg_type() {
  _has_bits_[0] |= 0x00000004u;
}
void CGCToGCMsgRouted::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGCToGCMsgRouted::clear_msg_type() {
  msg_type_ = 0u;
  clear_has_msg_type();
}
::google::protobuf::uint32 CGCToGCMsgRouted::msg_type() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgRouted.msg_type)
  return msg_type_;
}
void CGCToGCMsgRouted::set_msg_type(::google::protobuf::uint32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:CGCToGCMsgRouted.msg_type)
}

// optional fixed64 sender_id = 2;
bool CGCToGCMsgRouted::has_sender_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCToGCMsgRouted::set_has_sender_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCToGCMsgRouted::clear_has_sender_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCToGCMsgRouted::clear_sender_id() {
  sender_id_ = GOOGLE_ULONGLONG(0);
  clear_has_sender_id();
}
::google::protobuf::uint64 CGCToGCMsgRouted::sender_id() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgRouted.sender_id)
  return sender_id_;
}
void CGCToGCMsgRouted::set_sender_id(::google::protobuf::uint64 value) {
  set_has_sender_id();
  sender_id_ = value;
  // @@protoc_insertion_point(field_set:CGCToGCMsgRouted.sender_id)
}

// optional bytes net_message = 3;
bool CGCToGCMsgRouted::has_net_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCToGCMsgRouted::set_has_net_message() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCToGCMsgRouted::clear_has_net_message() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCToGCMsgRouted::clear_net_message() {
  net_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_net_message();
}
const ::std::string& CGCToGCMsgRouted::net_message() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgRouted.net_message)
  return net_message_.GetNoArena();
}
void CGCToGCMsgRouted::set_net_message(const ::std::string& value) {
  set_has_net_message();
  net_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgRouted.net_message)
}
#if LANG_CXX11
void CGCToGCMsgRouted::set_net_message(::std::string&& value) {
  set_has_net_message();
  net_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CGCToGCMsgRouted.net_message)
}
#endif
void CGCToGCMsgRouted::set_net_message(const char* value) {
  set_has_net_message();
  net_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCToGCMsgRouted.net_message)
}
void CGCToGCMsgRouted::set_net_message(const void* value, size_t size) {
  set_has_net_message();
  net_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCToGCMsgRouted.net_message)
}
::std::string* CGCToGCMsgRouted::mutable_net_message() {
  set_has_net_message();
  // @@protoc_insertion_point(field_mutable:CGCToGCMsgRouted.net_message)
  return net_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CGCToGCMsgRouted::release_net_message() {
  // @@protoc_insertion_point(field_release:CGCToGCMsgRouted.net_message)
  clear_has_net_message();
  return net_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CGCToGCMsgRouted::set_allocated_net_message(::std::string* net_message) {
  if (net_message != NULL) {
    set_has_net_message();
  } else {
    clear_has_net_message();
  }
  net_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), net_message);
  // @@protoc_insertion_point(field_set_allocated:CGCToGCMsgRouted.net_message)
}

// optional uint32 ip = 4;
bool CGCToGCMsgRouted::has_ip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGCToGCMsgRouted::set_has_ip() {
  _has_bits_[0] |= 0x00000008u;
}
void CGCToGCMsgRouted::clear_has_ip() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGCToGCMsgRouted::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
::google::protobuf::uint32 CGCToGCMsgRouted::ip() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgRouted.ip)
  return ip_;
}
void CGCToGCMsgRouted::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:CGCToGCMsgRouted.ip)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCToGCMsgRoutedReply::kMsgTypeFieldNumber;
const int CGCToGCMsgRoutedReply::kNetMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCToGCMsgRoutedReply::CGCToGCMsgRoutedReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCToGCMsgRoutedReply)
}
CGCToGCMsgRoutedReply::CGCToGCMsgRoutedReply(const CGCToGCMsgRoutedReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  net_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_net_message()) {
    net_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.net_message_);
  }
  msg_type_ = from.msg_type_;
  // @@protoc_insertion_point(copy_constructor:CGCToGCMsgRoutedReply)
}

void CGCToGCMsgRoutedReply::SharedCtor() {
  _cached_size_ = 0;
  net_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_type_ = 0u;
}

CGCToGCMsgRoutedReply::~CGCToGCMsgRoutedReply() {
  // @@protoc_insertion_point(destructor:CGCToGCMsgRoutedReply)
  SharedDtor();
}

void CGCToGCMsgRoutedReply::SharedDtor() {
  net_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CGCToGCMsgRoutedReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCToGCMsgRoutedReply::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[17].descriptor;
}

const CGCToGCMsgRoutedReply& CGCToGCMsgRoutedReply::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CGCToGCMsgRoutedReply* CGCToGCMsgRoutedReply::New(::google::protobuf::Arena* arena) const {
  CGCToGCMsgRoutedReply* n = new CGCToGCMsgRoutedReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCToGCMsgRoutedReply::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCToGCMsgRoutedReply)
  if (has_net_message()) {
    GOOGLE_DCHECK(!net_message_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*net_message_.UnsafeRawStringPointer())->clear();
  }
  msg_type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCToGCMsgRoutedReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCToGCMsgRoutedReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 msg_type = 1;
      case 1: {
        if (tag == 8u) {
          set_has_msg_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes net_message = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_net_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCToGCMsgRoutedReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCToGCMsgRoutedReply)
  return false;
#undef DO_
}

void CGCToGCMsgRoutedReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCToGCMsgRoutedReply)
  // optional uint32 msg_type = 1;
  if (has_msg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msg_type(), output);
  }

  // optional bytes net_message = 2;
  if (has_net_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->net_message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCToGCMsgRoutedReply)
}

::google::protobuf::uint8* CGCToGCMsgRoutedReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCToGCMsgRoutedReply)
  // optional uint32 msg_type = 1;
  if (has_msg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msg_type(), target);
  }

  // optional bytes net_message = 2;
  if (has_net_message()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->net_message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCToGCMsgRoutedReply)
  return target;
}

size_t CGCToGCMsgRoutedReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCToGCMsgRoutedReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes net_message = 2;
    if (has_net_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->net_message());
    }

    // optional uint32 msg_type = 1;
    if (has_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msg_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCToGCMsgRoutedReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCToGCMsgRoutedReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCToGCMsgRoutedReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCToGCMsgRoutedReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCToGCMsgRoutedReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCToGCMsgRoutedReply)
    MergeFrom(*source);
  }
}

void CGCToGCMsgRoutedReply::MergeFrom(const CGCToGCMsgRoutedReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCToGCMsgRoutedReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_net_message()) {
      set_has_net_message();
      net_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.net_message_);
    }
    if (from.has_msg_type()) {
      set_msg_type(from.msg_type());
    }
  }
}

void CGCToGCMsgRoutedReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCToGCMsgRoutedReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCToGCMsgRoutedReply::CopyFrom(const CGCToGCMsgRoutedReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCToGCMsgRoutedReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCToGCMsgRoutedReply::IsInitialized() const {
  return true;
}

void CGCToGCMsgRoutedReply::Swap(CGCToGCMsgRoutedReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCToGCMsgRoutedReply::InternalSwap(CGCToGCMsgRoutedReply* other) {
  net_message_.Swap(&other->net_message_);
  std::swap(msg_type_, other->msg_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCToGCMsgRoutedReply::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[17];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCToGCMsgRoutedReply

// optional uint32 msg_type = 1;
bool CGCToGCMsgRoutedReply::has_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCToGCMsgRoutedReply::set_has_msg_type() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCToGCMsgRoutedReply::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCToGCMsgRoutedReply::clear_msg_type() {
  msg_type_ = 0u;
  clear_has_msg_type();
}
::google::protobuf::uint32 CGCToGCMsgRoutedReply::msg_type() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgRoutedReply.msg_type)
  return msg_type_;
}
void CGCToGCMsgRoutedReply::set_msg_type(::google::protobuf::uint32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:CGCToGCMsgRoutedReply.msg_type)
}

// optional bytes net_message = 2;
bool CGCToGCMsgRoutedReply::has_net_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCToGCMsgRoutedReply::set_has_net_message() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCToGCMsgRoutedReply::clear_has_net_message() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCToGCMsgRoutedReply::clear_net_message() {
  net_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_net_message();
}
const ::std::string& CGCToGCMsgRoutedReply::net_message() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgRoutedReply.net_message)
  return net_message_.GetNoArena();
}
void CGCToGCMsgRoutedReply::set_net_message(const ::std::string& value) {
  set_has_net_message();
  net_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgRoutedReply.net_message)
}
#if LANG_CXX11
void CGCToGCMsgRoutedReply::set_net_message(::std::string&& value) {
  set_has_net_message();
  net_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CGCToGCMsgRoutedReply.net_message)
}
#endif
void CGCToGCMsgRoutedReply::set_net_message(const char* value) {
  set_has_net_message();
  net_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCToGCMsgRoutedReply.net_message)
}
void CGCToGCMsgRoutedReply::set_net_message(const void* value, size_t size) {
  set_has_net_message();
  net_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCToGCMsgRoutedReply.net_message)
}
::std::string* CGCToGCMsgRoutedReply::mutable_net_message() {
  set_has_net_message();
  // @@protoc_insertion_point(field_mutable:CGCToGCMsgRoutedReply.net_message)
  return net_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CGCToGCMsgRoutedReply::release_net_message() {
  // @@protoc_insertion_point(field_release:CGCToGCMsgRoutedReply.net_message)
  clear_has_net_message();
  return net_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CGCToGCMsgRoutedReply::set_allocated_net_message(::std::string* net_message) {
  if (net_message != NULL) {
    set_has_net_message();
  } else {
    clear_has_net_message();
  }
  net_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), net_message);
  // @@protoc_insertion_point(field_set_allocated:CGCToGCMsgRoutedReply.net_message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCUpdateSessionIP::kSteamidFieldNumber;
const int CMsgGCUpdateSessionIP::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCUpdateSessionIP::CMsgGCUpdateSessionIP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCUpdateSessionIP)
}
CMsgGCUpdateSessionIP::CMsgGCUpdateSessionIP(const CMsgGCUpdateSessionIP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    reinterpret_cast<char*>(&ip_) -
    reinterpret_cast<char*>(&steamid_) + sizeof(ip_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCUpdateSessionIP)
}

void CMsgGCUpdateSessionIP::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steamid_, 0, reinterpret_cast<char*>(&ip_) -
    reinterpret_cast<char*>(&steamid_) + sizeof(ip_));
}

CMsgGCUpdateSessionIP::~CMsgGCUpdateSessionIP() {
  // @@protoc_insertion_point(destructor:CMsgGCUpdateSessionIP)
  SharedDtor();
}

void CMsgGCUpdateSessionIP::SharedDtor() {
}

void CMsgGCUpdateSessionIP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCUpdateSessionIP::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[18].descriptor;
}

const CMsgGCUpdateSessionIP& CMsgGCUpdateSessionIP::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCUpdateSessionIP* CMsgGCUpdateSessionIP::New(::google::protobuf::Arena* arena) const {
  CMsgGCUpdateSessionIP* n = new CMsgGCUpdateSessionIP;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCUpdateSessionIP::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCUpdateSessionIP)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&steamid_, 0, reinterpret_cast<char*>(&ip_) -
      reinterpret_cast<char*>(&steamid_) + sizeof(ip_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCUpdateSessionIP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCUpdateSessionIP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (tag == 9u) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 ip = 2;
      case 2: {
        if (tag == 21u) {
          set_has_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCUpdateSessionIP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCUpdateSessionIP)
  return false;
#undef DO_
}

void CMsgGCUpdateSessionIP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCUpdateSessionIP)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional fixed32 ip = 2;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->ip(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCUpdateSessionIP)
}

::google::protobuf::uint8* CMsgGCUpdateSessionIP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCUpdateSessionIP)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional fixed32 ip = 2;
  if (has_ip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->ip(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCUpdateSessionIP)
  return target;
}

size_t CMsgGCUpdateSessionIP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCUpdateSessionIP)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional fixed32 ip = 2;
    if (has_ip()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCUpdateSessionIP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCUpdateSessionIP)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCUpdateSessionIP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCUpdateSessionIP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCUpdateSessionIP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCUpdateSessionIP)
    MergeFrom(*source);
  }
}

void CMsgGCUpdateSessionIP::MergeFrom(const CMsgGCUpdateSessionIP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCUpdateSessionIP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_steamid()) {
      set_steamid(from.steamid());
    }
    if (from.has_ip()) {
      set_ip(from.ip());
    }
  }
}

void CMsgGCUpdateSessionIP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCUpdateSessionIP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCUpdateSessionIP::CopyFrom(const CMsgGCUpdateSessionIP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCUpdateSessionIP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCUpdateSessionIP::IsInitialized() const {
  return true;
}

void CMsgGCUpdateSessionIP::Swap(CMsgGCUpdateSessionIP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCUpdateSessionIP::InternalSwap(CMsgGCUpdateSessionIP* other) {
  std::swap(steamid_, other->steamid_);
  std::swap(ip_, other->ip_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCUpdateSessionIP::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[18];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCUpdateSessionIP

// optional fixed64 steamid = 1;
bool CMsgGCUpdateSessionIP::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCUpdateSessionIP::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCUpdateSessionIP::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCUpdateSessionIP::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
::google::protobuf::uint64 CMsgGCUpdateSessionIP::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCUpdateSessionIP.steamid)
  return steamid_;
}
void CMsgGCUpdateSessionIP::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCUpdateSessionIP.steamid)
}

// optional fixed32 ip = 2;
bool CMsgGCUpdateSessionIP::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCUpdateSessionIP::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCUpdateSessionIP::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCUpdateSessionIP::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
::google::protobuf::uint32 CMsgGCUpdateSessionIP::ip() const {
  // @@protoc_insertion_point(field_get:CMsgGCUpdateSessionIP.ip)
  return ip_;
}
void CMsgGCUpdateSessionIP::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCUpdateSessionIP.ip)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCRequestSessionIP::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCRequestSessionIP::CMsgGCRequestSessionIP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCRequestSessionIP)
}
CMsgGCRequestSessionIP::CMsgGCRequestSessionIP(const CMsgGCRequestSessionIP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCRequestSessionIP)
}

void CMsgGCRequestSessionIP::SharedCtor() {
  _cached_size_ = 0;
  steamid_ = GOOGLE_ULONGLONG(0);
}

CMsgGCRequestSessionIP::~CMsgGCRequestSessionIP() {
  // @@protoc_insertion_point(destructor:CMsgGCRequestSessionIP)
  SharedDtor();
}

void CMsgGCRequestSessionIP::SharedDtor() {
}

void CMsgGCRequestSessionIP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRequestSessionIP::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[19].descriptor;
}

const CMsgGCRequestSessionIP& CMsgGCRequestSessionIP::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCRequestSessionIP* CMsgGCRequestSessionIP::New(::google::protobuf::Arena* arena) const {
  CMsgGCRequestSessionIP* n = new CMsgGCRequestSessionIP;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCRequestSessionIP::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCRequestSessionIP)
  steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCRequestSessionIP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCRequestSessionIP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (tag == 9u) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCRequestSessionIP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCRequestSessionIP)
  return false;
#undef DO_
}

void CMsgGCRequestSessionIP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCRequestSessionIP)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCRequestSessionIP)
}

::google::protobuf::uint8* CMsgGCRequestSessionIP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRequestSessionIP)
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRequestSessionIP)
  return target;
}

size_t CMsgGCRequestSessionIP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCRequestSessionIP)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRequestSessionIP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCRequestSessionIP)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCRequestSessionIP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCRequestSessionIP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCRequestSessionIP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCRequestSessionIP)
    MergeFrom(*source);
  }
}

void CMsgGCRequestSessionIP::MergeFrom(const CMsgGCRequestSessionIP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCRequestSessionIP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_steamid()) {
    set_steamid(from.steamid());
  }
}

void CMsgGCRequestSessionIP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCRequestSessionIP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestSessionIP::CopyFrom(const CMsgGCRequestSessionIP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCRequestSessionIP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestSessionIP::IsInitialized() const {
  return true;
}

void CMsgGCRequestSessionIP::Swap(CMsgGCRequestSessionIP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCRequestSessionIP::InternalSwap(CMsgGCRequestSessionIP* other) {
  std::swap(steamid_, other->steamid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCRequestSessionIP::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[19];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCRequestSessionIP

// optional fixed64 steamid = 1;
bool CMsgGCRequestSessionIP::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCRequestSessionIP::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCRequestSessionIP::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCRequestSessionIP::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
::google::protobuf::uint64 CMsgGCRequestSessionIP::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCRequestSessionIP.steamid)
  return steamid_;
}
void CMsgGCRequestSessionIP::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCRequestSessionIP.steamid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCRequestSessionIPResponse::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCRequestSessionIPResponse::CMsgGCRequestSessionIPResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCRequestSessionIPResponse)
}
CMsgGCRequestSessionIPResponse::CMsgGCRequestSessionIPResponse(const CMsgGCRequestSessionIPResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_ = from.ip_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCRequestSessionIPResponse)
}

void CMsgGCRequestSessionIPResponse::SharedCtor() {
  _cached_size_ = 0;
  ip_ = 0u;
}

CMsgGCRequestSessionIPResponse::~CMsgGCRequestSessionIPResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCRequestSessionIPResponse)
  SharedDtor();
}

void CMsgGCRequestSessionIPResponse::SharedDtor() {
}

void CMsgGCRequestSessionIPResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRequestSessionIPResponse::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[20].descriptor;
}

const CMsgGCRequestSessionIPResponse& CMsgGCRequestSessionIPResponse::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCRequestSessionIPResponse* CMsgGCRequestSessionIPResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCRequestSessionIPResponse* n = new CMsgGCRequestSessionIPResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCRequestSessionIPResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCRequestSessionIPResponse)
  ip_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCRequestSessionIPResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCRequestSessionIPResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 ip = 1;
      case 1: {
        if (tag == 13u) {
          set_has_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCRequestSessionIPResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCRequestSessionIPResponse)
  return false;
#undef DO_
}

void CMsgGCRequestSessionIPResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCRequestSessionIPResponse)
  // optional fixed32 ip = 1;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->ip(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCRequestSessionIPResponse)
}

::google::protobuf::uint8* CMsgGCRequestSessionIPResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRequestSessionIPResponse)
  // optional fixed32 ip = 1;
  if (has_ip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->ip(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRequestSessionIPResponse)
  return target;
}

size_t CMsgGCRequestSessionIPResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCRequestSessionIPResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional fixed32 ip = 1;
  if (has_ip()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRequestSessionIPResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCRequestSessionIPResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCRequestSessionIPResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCRequestSessionIPResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCRequestSessionIPResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCRequestSessionIPResponse)
    MergeFrom(*source);
  }
}

void CMsgGCRequestSessionIPResponse::MergeFrom(const CMsgGCRequestSessionIPResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCRequestSessionIPResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ip()) {
    set_ip(from.ip());
  }
}

void CMsgGCRequestSessionIPResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCRequestSessionIPResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestSessionIPResponse::CopyFrom(const CMsgGCRequestSessionIPResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCRequestSessionIPResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestSessionIPResponse::IsInitialized() const {
  return true;
}

void CMsgGCRequestSessionIPResponse::Swap(CMsgGCRequestSessionIPResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCRequestSessionIPResponse::InternalSwap(CMsgGCRequestSessionIPResponse* other) {
  std::swap(ip_, other->ip_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCRequestSessionIPResponse::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[20];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCRequestSessionIPResponse

// optional fixed32 ip = 1;
bool CMsgGCRequestSessionIPResponse::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCRequestSessionIPResponse::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCRequestSessionIPResponse::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCRequestSessionIPResponse::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
::google::protobuf::uint32 CMsgGCRequestSessionIPResponse::ip() const {
  // @@protoc_insertion_point(field_get:CMsgGCRequestSessionIPResponse.ip)
  return ip_;
}
void CMsgGCRequestSessionIPResponse::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCRequestSessionIPResponse.ip)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOCacheHaveVersion::kSoidFieldNumber;
const int CMsgSOCacheHaveVersion::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOCacheHaveVersion::CMsgSOCacheHaveVersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOCacheHaveVersion)
}
CMsgSOCacheHaveVersion::CMsgSOCacheHaveVersion(const CMsgSOCacheHaveVersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_soid()) {
    soid_ = new ::CMsgSOIDOwner(*from.soid_);
  } else {
    soid_ = NULL;
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:CMsgSOCacheHaveVersion)
}

void CMsgSOCacheHaveVersion::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&soid_, 0, reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&soid_) + sizeof(version_));
}

CMsgSOCacheHaveVersion::~CMsgSOCacheHaveVersion() {
  // @@protoc_insertion_point(destructor:CMsgSOCacheHaveVersion)
  SharedDtor();
}

void CMsgSOCacheHaveVersion::SharedDtor() {
  if (this != internal_default_instance()) {
    delete soid_;
  }
}

void CMsgSOCacheHaveVersion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOCacheHaveVersion::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[21].descriptor;
}

const CMsgSOCacheHaveVersion& CMsgSOCacheHaveVersion::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgSOCacheHaveVersion* CMsgSOCacheHaveVersion::New(::google::protobuf::Arena* arena) const {
  CMsgSOCacheHaveVersion* n = new CMsgSOCacheHaveVersion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOCacheHaveVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOCacheHaveVersion)
  if (has_soid()) {
    GOOGLE_DCHECK(soid_ != NULL);
    soid_->::CMsgSOIDOwner::Clear();
  }
  version_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOCacheHaveVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOCacheHaveVersion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgSOIDOwner soid = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_soid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 version = 2;
      case 2: {
        if (tag == 17u) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOCacheHaveVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOCacheHaveVersion)
  return false;
#undef DO_
}

void CMsgSOCacheHaveVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOCacheHaveVersion)
  // optional .CMsgSOIDOwner soid = 1;
  if (has_soid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->soid_, output);
  }

  // optional fixed64 version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOCacheHaveVersion)
}

::google::protobuf::uint8* CMsgSOCacheHaveVersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOCacheHaveVersion)
  // optional .CMsgSOIDOwner soid = 1;
  if (has_soid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->soid_, false, target);
  }

  // optional fixed64 version = 2;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOCacheHaveVersion)
  return target;
}

size_t CMsgSOCacheHaveVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOCacheHaveVersion)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CMsgSOIDOwner soid = 1;
    if (has_soid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->soid_);
    }

    // optional fixed64 version = 2;
    if (has_version()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOCacheHaveVersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOCacheHaveVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOCacheHaveVersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOCacheHaveVersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOCacheHaveVersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOCacheHaveVersion)
    MergeFrom(*source);
  }
}

void CMsgSOCacheHaveVersion::MergeFrom(const CMsgSOCacheHaveVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOCacheHaveVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_soid()) {
      mutable_soid()->::CMsgSOIDOwner::MergeFrom(from.soid());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
}

void CMsgSOCacheHaveVersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOCacheHaveVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOCacheHaveVersion::CopyFrom(const CMsgSOCacheHaveVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOCacheHaveVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOCacheHaveVersion::IsInitialized() const {
  return true;
}

void CMsgSOCacheHaveVersion::Swap(CMsgSOCacheHaveVersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOCacheHaveVersion::InternalSwap(CMsgSOCacheHaveVersion* other) {
  std::swap(soid_, other->soid_);
  std::swap(version_, other->version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOCacheHaveVersion::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[21];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgSOCacheHaveVersion

// optional .CMsgSOIDOwner soid = 1;
bool CMsgSOCacheHaveVersion::has_soid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgSOCacheHaveVersion::set_has_soid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgSOCacheHaveVersion::clear_has_soid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgSOCacheHaveVersion::clear_soid() {
  if (soid_ != NULL) soid_->::CMsgSOIDOwner::Clear();
  clear_has_soid();
}
const ::CMsgSOIDOwner& CMsgSOCacheHaveVersion::soid() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheHaveVersion.soid)
  return soid_ != NULL ? *soid_
                         : *::CMsgSOIDOwner::internal_default_instance();
}
::CMsgSOIDOwner* CMsgSOCacheHaveVersion::mutable_soid() {
  set_has_soid();
  if (soid_ == NULL) {
    soid_ = new ::CMsgSOIDOwner;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheHaveVersion.soid)
  return soid_;
}
::CMsgSOIDOwner* CMsgSOCacheHaveVersion::release_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOCacheHaveVersion.soid)
  clear_has_soid();
  ::CMsgSOIDOwner* temp = soid_;
  soid_ = NULL;
  return temp;
}
void CMsgSOCacheHaveVersion::set_allocated_soid(::CMsgSOIDOwner* soid) {
  delete soid_;
  soid_ = soid;
  if (soid) {
    set_has_soid();
  } else {
    clear_has_soid();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSOCacheHaveVersion.soid)
}

// optional fixed64 version = 2;
bool CMsgSOCacheHaveVersion::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgSOCacheHaveVersion::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgSOCacheHaveVersion::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgSOCacheHaveVersion::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
::google::protobuf::uint64 CMsgSOCacheHaveVersion::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheHaveVersion.version)
  return version_;
}
void CMsgSOCacheHaveVersion::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheHaveVersion.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientHello::kVersionFieldNumber;
const int CMsgClientHello::kSocacheHaveVersionsFieldNumber;
const int CMsgClientHello::kClientSessionNeedFieldNumber;
const int CMsgClientHello::kClientLauncherFieldNumber;
const int CMsgClientHello::kPartnerSrcidFieldNumber;
const int CMsgClientHello::kPartnerAccountidFieldNumber;
const int CMsgClientHello::kPartnerAccountflagsFieldNumber;
const int CMsgClientHello::kPartnerAccountbalanceFieldNumber;
const int CMsgClientHello::kSteamLauncherFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientHello::CMsgClientHello()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientHello)
}
CMsgClientHello::CMsgClientHello(const CMsgClientHello& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      socache_have_versions_(from.socache_have_versions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    reinterpret_cast<char*>(&steam_launcher_) -
    reinterpret_cast<char*>(&version_) + sizeof(steam_launcher_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientHello)
}

void CMsgClientHello::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&version_, 0, reinterpret_cast<char*>(&steam_launcher_) -
    reinterpret_cast<char*>(&version_) + sizeof(steam_launcher_));
}

CMsgClientHello::~CMsgClientHello() {
  // @@protoc_insertion_point(destructor:CMsgClientHello)
  SharedDtor();
}

void CMsgClientHello::SharedDtor() {
}

void CMsgClientHello::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientHello::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[22].descriptor;
}

const CMsgClientHello& CMsgClientHello::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientHello* CMsgClientHello::New(::google::protobuf::Arena* arena) const {
  CMsgClientHello* n = new CMsgClientHello;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientHello::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientHello)
  socache_have_versions_.Clear();
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&version_, 0, reinterpret_cast<char*>(&steam_launcher_) -
      reinterpret_cast<char*>(&version_) + sizeof(steam_launcher_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientHello::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientHello)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (tag == 8u) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_socache_have_versions()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional uint32 client_session_need = 3;
      case 3: {
        if (tag == 24u) {
          set_has_client_session_need();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_session_need_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 client_launcher = 4;
      case 4: {
        if (tag == 32u) {
          set_has_client_launcher();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_launcher_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 partner_srcid = 5;
      case 5: {
        if (tag == 40u) {
          set_has_partner_srcid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &partner_srcid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 partner_accountid = 6;
      case 6: {
        if (tag == 48u) {
          set_has_partner_accountid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &partner_accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 partner_accountflags = 7;
      case 7: {
        if (tag == 56u) {
          set_has_partner_accountflags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &partner_accountflags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 partner_accountbalance = 8;
      case 8: {
        if (tag == 64u) {
          set_has_partner_accountbalance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &partner_accountbalance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 steam_launcher = 9;
      case 9: {
        if (tag == 72u) {
          set_has_steam_launcher();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &steam_launcher_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientHello)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientHello)
  return false;
#undef DO_
}

void CMsgClientHello::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientHello)
  // optional uint32 version = 1;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
  for (unsigned int i = 0, n = this->socache_have_versions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->socache_have_versions(i), output);
  }

  // optional uint32 client_session_need = 3;
  if (has_client_session_need()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->client_session_need(), output);
  }

  // optional uint32 client_launcher = 4;
  if (has_client_launcher()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->client_launcher(), output);
  }

  // optional uint32 partner_srcid = 5;
  if (has_partner_srcid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->partner_srcid(), output);
  }

  // optional uint32 partner_accountid = 6;
  if (has_partner_accountid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->partner_accountid(), output);
  }

  // optional uint32 partner_accountflags = 7;
  if (has_partner_accountflags()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->partner_accountflags(), output);
  }

  // optional uint32 partner_accountbalance = 8;
  if (has_partner_accountbalance()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->partner_accountbalance(), output);
  }

  // optional uint32 steam_launcher = 9;
  if (has_steam_launcher()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->steam_launcher(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientHello)
}

::google::protobuf::uint8* CMsgClientHello::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientHello)
  // optional uint32 version = 1;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
  for (unsigned int i = 0, n = this->socache_have_versions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->socache_have_versions(i), false, target);
  }

  // optional uint32 client_session_need = 3;
  if (has_client_session_need()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->client_session_need(), target);
  }

  // optional uint32 client_launcher = 4;
  if (has_client_launcher()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->client_launcher(), target);
  }

  // optional uint32 partner_srcid = 5;
  if (has_partner_srcid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->partner_srcid(), target);
  }

  // optional uint32 partner_accountid = 6;
  if (has_partner_accountid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->partner_accountid(), target);
  }

  // optional uint32 partner_accountflags = 7;
  if (has_partner_accountflags()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->partner_accountflags(), target);
  }

  // optional uint32 partner_accountbalance = 8;
  if (has_partner_accountbalance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->partner_accountbalance(), target);
  }

  // optional uint32 steam_launcher = 9;
  if (has_steam_launcher()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->steam_launcher(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientHello)
  return target;
}

size_t CMsgClientHello::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientHello)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
  {
    unsigned int count = this->socache_have_versions_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->socache_have_versions(i));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 client_session_need = 3;
    if (has_client_session_need()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_session_need());
    }

    // optional uint32 client_launcher = 4;
    if (has_client_launcher()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_launcher());
    }

    // optional uint32 partner_srcid = 5;
    if (has_partner_srcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->partner_srcid());
    }

    // optional uint32 partner_accountid = 6;
    if (has_partner_accountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->partner_accountid());
    }

    // optional uint32 partner_accountflags = 7;
    if (has_partner_accountflags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->partner_accountflags());
    }

    // optional uint32 partner_accountbalance = 8;
    if (has_partner_accountbalance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->partner_accountbalance());
    }

    // optional uint32 steam_launcher = 9;
    if (has_steam_launcher()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->steam_launcher());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientHello::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientHello)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientHello* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientHello>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientHello)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientHello)
    MergeFrom(*source);
  }
}

void CMsgClientHello::MergeFrom(const CMsgClientHello& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientHello)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  socache_have_versions_.MergeFrom(from.socache_have_versions_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_client_session_need()) {
      set_client_session_need(from.client_session_need());
    }
    if (from.has_client_launcher()) {
      set_client_launcher(from.client_launcher());
    }
    if (from.has_partner_srcid()) {
      set_partner_srcid(from.partner_srcid());
    }
    if (from.has_partner_accountid()) {
      set_partner_accountid(from.partner_accountid());
    }
    if (from.has_partner_accountflags()) {
      set_partner_accountflags(from.partner_accountflags());
    }
    if (from.has_partner_accountbalance()) {
      set_partner_accountbalance(from.partner_accountbalance());
    }
    if (from.has_steam_launcher()) {
      set_steam_launcher(from.steam_launcher());
    }
  }
}

void CMsgClientHello::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientHello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientHello::CopyFrom(const CMsgClientHello& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientHello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientHello::IsInitialized() const {
  return true;
}

void CMsgClientHello::Swap(CMsgClientHello* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientHello::InternalSwap(CMsgClientHello* other) {
  socache_have_versions_.UnsafeArenaSwap(&other->socache_have_versions_);
  std::swap(version_, other->version_);
  std::swap(client_session_need_, other->client_session_need_);
  std::swap(client_launcher_, other->client_launcher_);
  std::swap(partner_srcid_, other->partner_srcid_);
  std::swap(partner_accountid_, other->partner_accountid_);
  std::swap(partner_accountflags_, other->partner_accountflags_);
  std::swap(partner_accountbalance_, other->partner_accountbalance_);
  std::swap(steam_launcher_, other->steam_launcher_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientHello::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[22];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientHello

// optional uint32 version = 1;
bool CMsgClientHello::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientHello::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientHello::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientHello::clear_version() {
  version_ = 0u;
  clear_has_version();
}
::google::protobuf::uint32 CMsgClientHello::version() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.version)
  return version_;
}
void CMsgClientHello::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientHello.version)
}

// repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
int CMsgClientHello::socache_have_versions_size() const {
  return socache_have_versions_.size();
}
void CMsgClientHello::clear_socache_have_versions() {
  socache_have_versions_.Clear();
}
const ::CMsgSOCacheHaveVersion& CMsgClientHello::socache_have_versions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.socache_have_versions)
  return socache_have_versions_.Get(index);
}
::CMsgSOCacheHaveVersion* CMsgClientHello::mutable_socache_have_versions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientHello.socache_have_versions)
  return socache_have_versions_.Mutable(index);
}
::CMsgSOCacheHaveVersion* CMsgClientHello::add_socache_have_versions() {
  // @@protoc_insertion_point(field_add:CMsgClientHello.socache_have_versions)
  return socache_have_versions_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgSOCacheHaveVersion >*
CMsgClientHello::mutable_socache_have_versions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientHello.socache_have_versions)
  return &socache_have_versions_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheHaveVersion >&
CMsgClientHello::socache_have_versions() const {
  // @@protoc_insertion_point(field_list:CMsgClientHello.socache_have_versions)
  return socache_have_versions_;
}

// optional uint32 client_session_need = 3;
bool CMsgClientHello::has_client_session_need() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientHello::set_has_client_session_need() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientHello::clear_has_client_session_need() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientHello::clear_client_session_need() {
  client_session_need_ = 0u;
  clear_has_client_session_need();
}
::google::protobuf::uint32 CMsgClientHello::client_session_need() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.client_session_need)
  return client_session_need_;
}
void CMsgClientHello::set_client_session_need(::google::protobuf::uint32 value) {
  set_has_client_session_need();
  client_session_need_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientHello.client_session_need)
}

// optional uint32 client_launcher = 4;
bool CMsgClientHello::has_client_launcher() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientHello::set_has_client_launcher() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientHello::clear_has_client_launcher() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientHello::clear_client_launcher() {
  client_launcher_ = 0u;
  clear_has_client_launcher();
}
::google::protobuf::uint32 CMsgClientHello::client_launcher() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.client_launcher)
  return client_launcher_;
}
void CMsgClientHello::set_client_launcher(::google::protobuf::uint32 value) {
  set_has_client_launcher();
  client_launcher_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientHello.client_launcher)
}

// optional uint32 partner_srcid = 5;
bool CMsgClientHello::has_partner_srcid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientHello::set_has_partner_srcid() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientHello::clear_has_partner_srcid() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientHello::clear_partner_srcid() {
  partner_srcid_ = 0u;
  clear_has_partner_srcid();
}
::google::protobuf::uint32 CMsgClientHello::partner_srcid() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.partner_srcid)
  return partner_srcid_;
}
void CMsgClientHello::set_partner_srcid(::google::protobuf::uint32 value) {
  set_has_partner_srcid();
  partner_srcid_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientHello.partner_srcid)
}

// optional uint32 partner_accountid = 6;
bool CMsgClientHello::has_partner_accountid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientHello::set_has_partner_accountid() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientHello::clear_has_partner_accountid() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientHello::clear_partner_accountid() {
  partner_accountid_ = 0u;
  clear_has_partner_accountid();
}
::google::protobuf::uint32 CMsgClientHello::partner_accountid() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.partner_accountid)
  return partner_accountid_;
}
void CMsgClientHello::set_partner_accountid(::google::protobuf::uint32 value) {
  set_has_partner_accountid();
  partner_accountid_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientHello.partner_accountid)
}

// optional uint32 partner_accountflags = 7;
bool CMsgClientHello::has_partner_accountflags() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientHello::set_has_partner_accountflags() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientHello::clear_has_partner_accountflags() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientHello::clear_partner_accountflags() {
  partner_accountflags_ = 0u;
  clear_has_partner_accountflags();
}
::google::protobuf::uint32 CMsgClientHello::partner_accountflags() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.partner_accountflags)
  return partner_accountflags_;
}
void CMsgClientHello::set_partner_accountflags(::google::protobuf::uint32 value) {
  set_has_partner_accountflags();
  partner_accountflags_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientHello.partner_accountflags)
}

// optional uint32 partner_accountbalance = 8;
bool CMsgClientHello::has_partner_accountbalance() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgClientHello::set_has_partner_accountbalance() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgClientHello::clear_has_partner_accountbalance() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgClientHello::clear_partner_accountbalance() {
  partner_accountbalance_ = 0u;
  clear_has_partner_accountbalance();
}
::google::protobuf::uint32 CMsgClientHello::partner_accountbalance() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.partner_accountbalance)
  return partner_accountbalance_;
}
void CMsgClientHello::set_partner_accountbalance(::google::protobuf::uint32 value) {
  set_has_partner_accountbalance();
  partner_accountbalance_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientHello.partner_accountbalance)
}

// optional uint32 steam_launcher = 9;
bool CMsgClientHello::has_steam_launcher() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgClientHello::set_has_steam_launcher() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgClientHello::clear_has_steam_launcher() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgClientHello::clear_steam_launcher() {
  steam_launcher_ = 0u;
  clear_has_steam_launcher();
}
::google::protobuf::uint32 CMsgClientHello::steam_launcher() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.steam_launcher)
  return steam_launcher_;
}
void CMsgClientHello::set_steam_launcher(::google::protobuf::uint32 value) {
  set_has_steam_launcher();
  steam_launcher_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientHello.steam_launcher)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgServerHello::kVersionFieldNumber;
const int CMsgServerHello::kSocacheHaveVersionsFieldNumber;
const int CMsgServerHello::kLegacyClientSessionNeedFieldNumber;
const int CMsgServerHello::kClientLauncherFieldNumber;
const int CMsgServerHello::kLegacySteamdatagramRoutingFieldNumber;
const int CMsgServerHello::kRequiredInternalAddrFieldNumber;
const int CMsgServerHello::kSteamdatagramLoginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgServerHello::CMsgServerHello()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgServerHello)
}
CMsgServerHello::CMsgServerHello(const CMsgServerHello& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      socache_have_versions_(from.socache_have_versions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  legacy_steamdatagram_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_legacy_steamdatagram_routing()) {
    legacy_steamdatagram_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.legacy_steamdatagram_routing_);
  }
  steamdatagram_login_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_steamdatagram_login()) {
    steamdatagram_login_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.steamdatagram_login_);
  }
  ::memcpy(&version_, &from.version_,
    reinterpret_cast<char*>(&required_internal_addr_) -
    reinterpret_cast<char*>(&version_) + sizeof(required_internal_addr_));
  // @@protoc_insertion_point(copy_constructor:CMsgServerHello)
}

void CMsgServerHello::SharedCtor() {
  _cached_size_ = 0;
  legacy_steamdatagram_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  steamdatagram_login_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, reinterpret_cast<char*>(&required_internal_addr_) -
    reinterpret_cast<char*>(&version_) + sizeof(required_internal_addr_));
}

CMsgServerHello::~CMsgServerHello() {
  // @@protoc_insertion_point(destructor:CMsgServerHello)
  SharedDtor();
}

void CMsgServerHello::SharedDtor() {
  legacy_steamdatagram_routing_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  steamdatagram_login_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgServerHello::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgServerHello::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[23].descriptor;
}

const CMsgServerHello& CMsgServerHello::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgServerHello* CMsgServerHello::New(::google::protobuf::Arena* arena) const {
  CMsgServerHello* n = new CMsgServerHello;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgServerHello::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgServerHello)
  socache_have_versions_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_legacy_steamdatagram_routing()) {
      GOOGLE_DCHECK(!legacy_steamdatagram_routing_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*legacy_steamdatagram_routing_.UnsafeRawStringPointer())->clear();
    }
    if (has_steamdatagram_login()) {
      GOOGLE_DCHECK(!steamdatagram_login_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*steamdatagram_login_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 60u) {
    ::memset(&version_, 0, reinterpret_cast<char*>(&required_internal_addr_) -
      reinterpret_cast<char*>(&version_) + sizeof(required_internal_addr_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgServerHello::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgServerHello)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (tag == 8u) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_socache_have_versions()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional uint32 legacy_client_session_need = 3;
      case 3: {
        if (tag == 24u) {
          set_has_legacy_client_session_need();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &legacy_client_session_need_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 client_launcher = 4;
      case 4: {
        if (tag == 32u) {
          set_has_client_launcher();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_launcher_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes legacy_steamdatagram_routing = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_legacy_steamdatagram_routing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 required_internal_addr = 7;
      case 7: {
        if (tag == 56u) {
          set_has_required_internal_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &required_internal_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes steamdatagram_login = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_steamdatagram_login()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgServerHello)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgServerHello)
  return false;
#undef DO_
}

void CMsgServerHello::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgServerHello)
  // optional uint32 version = 1;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
  for (unsigned int i = 0, n = this->socache_have_versions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->socache_have_versions(i), output);
  }

  // optional uint32 legacy_client_session_need = 3;
  if (has_legacy_client_session_need()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->legacy_client_session_need(), output);
  }

  // optional uint32 client_launcher = 4;
  if (has_client_launcher()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->client_launcher(), output);
  }

  // optional bytes legacy_steamdatagram_routing = 6;
  if (has_legacy_steamdatagram_routing()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->legacy_steamdatagram_routing(), output);
  }

  // optional uint32 required_internal_addr = 7;
  if (has_required_internal_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->required_internal_addr(), output);
  }

  // optional bytes steamdatagram_login = 8;
  if (has_steamdatagram_login()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->steamdatagram_login(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgServerHello)
}

::google::protobuf::uint8* CMsgServerHello::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgServerHello)
  // optional uint32 version = 1;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
  for (unsigned int i = 0, n = this->socache_have_versions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->socache_have_versions(i), false, target);
  }

  // optional uint32 legacy_client_session_need = 3;
  if (has_legacy_client_session_need()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->legacy_client_session_need(), target);
  }

  // optional uint32 client_launcher = 4;
  if (has_client_launcher()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->client_launcher(), target);
  }

  // optional bytes legacy_steamdatagram_routing = 6;
  if (has_legacy_steamdatagram_routing()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->legacy_steamdatagram_routing(), target);
  }

  // optional uint32 required_internal_addr = 7;
  if (has_required_internal_addr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->required_internal_addr(), target);
  }

  // optional bytes steamdatagram_login = 8;
  if (has_steamdatagram_login()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->steamdatagram_login(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgServerHello)
  return target;
}

size_t CMsgServerHello::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgServerHello)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
  {
    unsigned int count = this->socache_have_versions_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->socache_have_versions(i));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes legacy_steamdatagram_routing = 6;
    if (has_legacy_steamdatagram_routing()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->legacy_steamdatagram_routing());
    }

    // optional bytes steamdatagram_login = 8;
    if (has_steamdatagram_login()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->steamdatagram_login());
    }

    // optional uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 legacy_client_session_need = 3;
    if (has_legacy_client_session_need()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->legacy_client_session_need());
    }

    // optional uint32 client_launcher = 4;
    if (has_client_launcher()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_launcher());
    }

    // optional uint32 required_internal_addr = 7;
    if (has_required_internal_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->required_internal_addr());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgServerHello::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgServerHello)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgServerHello* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgServerHello>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgServerHello)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgServerHello)
    MergeFrom(*source);
  }
}

void CMsgServerHello::MergeFrom(const CMsgServerHello& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgServerHello)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  socache_have_versions_.MergeFrom(from.socache_have_versions_);
  if (from._has_bits_[0 / 32] & 63u) {
    if (from.has_legacy_steamdatagram_routing()) {
      set_has_legacy_steamdatagram_routing();
      legacy_steamdatagram_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.legacy_steamdatagram_routing_);
    }
    if (from.has_steamdatagram_login()) {
      set_has_steamdatagram_login();
      steamdatagram_login_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.steamdatagram_login_);
    }
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_legacy_client_session_need()) {
      set_legacy_client_session_need(from.legacy_client_session_need());
    }
    if (from.has_client_launcher()) {
      set_client_launcher(from.client_launcher());
    }
    if (from.has_required_internal_addr()) {
      set_required_internal_addr(from.required_internal_addr());
    }
  }
}

void CMsgServerHello::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgServerHello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgServerHello::CopyFrom(const CMsgServerHello& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgServerHello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgServerHello::IsInitialized() const {
  return true;
}

void CMsgServerHello::Swap(CMsgServerHello* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgServerHello::InternalSwap(CMsgServerHello* other) {
  socache_have_versions_.UnsafeArenaSwap(&other->socache_have_versions_);
  legacy_steamdatagram_routing_.Swap(&other->legacy_steamdatagram_routing_);
  steamdatagram_login_.Swap(&other->steamdatagram_login_);
  std::swap(version_, other->version_);
  std::swap(legacy_client_session_need_, other->legacy_client_session_need_);
  std::swap(client_launcher_, other->client_launcher_);
  std::swap(required_internal_addr_, other->required_internal_addr_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgServerHello::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[23];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgServerHello

// optional uint32 version = 1;
bool CMsgServerHello::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgServerHello::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgServerHello::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgServerHello::clear_version() {
  version_ = 0u;
  clear_has_version();
}
::google::protobuf::uint32 CMsgServerHello::version() const {
  // @@protoc_insertion_point(field_get:CMsgServerHello.version)
  return version_;
}
void CMsgServerHello::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerHello.version)
}

// repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
int CMsgServerHello::socache_have_versions_size() const {
  return socache_have_versions_.size();
}
void CMsgServerHello::clear_socache_have_versions() {
  socache_have_versions_.Clear();
}
const ::CMsgSOCacheHaveVersion& CMsgServerHello::socache_have_versions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgServerHello.socache_have_versions)
  return socache_have_versions_.Get(index);
}
::CMsgSOCacheHaveVersion* CMsgServerHello::mutable_socache_have_versions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgServerHello.socache_have_versions)
  return socache_have_versions_.Mutable(index);
}
::CMsgSOCacheHaveVersion* CMsgServerHello::add_socache_have_versions() {
  // @@protoc_insertion_point(field_add:CMsgServerHello.socache_have_versions)
  return socache_have_versions_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgSOCacheHaveVersion >*
CMsgServerHello::mutable_socache_have_versions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgServerHello.socache_have_versions)
  return &socache_have_versions_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheHaveVersion >&
CMsgServerHello::socache_have_versions() const {
  // @@protoc_insertion_point(field_list:CMsgServerHello.socache_have_versions)
  return socache_have_versions_;
}

// optional uint32 legacy_client_session_need = 3;
bool CMsgServerHello::has_legacy_client_session_need() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgServerHello::set_has_legacy_client_session_need() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgServerHello::clear_has_legacy_client_session_need() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgServerHello::clear_legacy_client_session_need() {
  legacy_client_session_need_ = 0u;
  clear_has_legacy_client_session_need();
}
::google::protobuf::uint32 CMsgServerHello::legacy_client_session_need() const {
  // @@protoc_insertion_point(field_get:CMsgServerHello.legacy_client_session_need)
  return legacy_client_session_need_;
}
void CMsgServerHello::set_legacy_client_session_need(::google::protobuf::uint32 value) {
  set_has_legacy_client_session_need();
  legacy_client_session_need_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerHello.legacy_client_session_need)
}

// optional uint32 client_launcher = 4;
bool CMsgServerHello::has_client_launcher() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgServerHello::set_has_client_launcher() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgServerHello::clear_has_client_launcher() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgServerHello::clear_client_launcher() {
  client_launcher_ = 0u;
  clear_has_client_launcher();
}
::google::protobuf::uint32 CMsgServerHello::client_launcher() const {
  // @@protoc_insertion_point(field_get:CMsgServerHello.client_launcher)
  return client_launcher_;
}
void CMsgServerHello::set_client_launcher(::google::protobuf::uint32 value) {
  set_has_client_launcher();
  client_launcher_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerHello.client_launcher)
}

// optional bytes legacy_steamdatagram_routing = 6;
bool CMsgServerHello::has_legacy_steamdatagram_routing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgServerHello::set_has_legacy_steamdatagram_routing() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgServerHello::clear_has_legacy_steamdatagram_routing() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgServerHello::clear_legacy_steamdatagram_routing() {
  legacy_steamdatagram_routing_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_legacy_steamdatagram_routing();
}
const ::std::string& CMsgServerHello::legacy_steamdatagram_routing() const {
  // @@protoc_insertion_point(field_get:CMsgServerHello.legacy_steamdatagram_routing)
  return legacy_steamdatagram_routing_.GetNoArena();
}
void CMsgServerHello::set_legacy_steamdatagram_routing(const ::std::string& value) {
  set_has_legacy_steamdatagram_routing();
  legacy_steamdatagram_routing_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgServerHello.legacy_steamdatagram_routing)
}
#if LANG_CXX11
void CMsgServerHello::set_legacy_steamdatagram_routing(::std::string&& value) {
  set_has_legacy_steamdatagram_routing();
  legacy_steamdatagram_routing_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgServerHello.legacy_steamdatagram_routing)
}
#endif
void CMsgServerHello::set_legacy_steamdatagram_routing(const char* value) {
  set_has_legacy_steamdatagram_routing();
  legacy_steamdatagram_routing_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgServerHello.legacy_steamdatagram_routing)
}
void CMsgServerHello::set_legacy_steamdatagram_routing(const void* value, size_t size) {
  set_has_legacy_steamdatagram_routing();
  legacy_steamdatagram_routing_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgServerHello.legacy_steamdatagram_routing)
}
::std::string* CMsgServerHello::mutable_legacy_steamdatagram_routing() {
  set_has_legacy_steamdatagram_routing();
  // @@protoc_insertion_point(field_mutable:CMsgServerHello.legacy_steamdatagram_routing)
  return legacy_steamdatagram_routing_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgServerHello::release_legacy_steamdatagram_routing() {
  // @@protoc_insertion_point(field_release:CMsgServerHello.legacy_steamdatagram_routing)
  clear_has_legacy_steamdatagram_routing();
  return legacy_steamdatagram_routing_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgServerHello::set_allocated_legacy_steamdatagram_routing(::std::string* legacy_steamdatagram_routing) {
  if (legacy_steamdatagram_routing != NULL) {
    set_has_legacy_steamdatagram_routing();
  } else {
    clear_has_legacy_steamdatagram_routing();
  }
  legacy_steamdatagram_routing_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), legacy_steamdatagram_routing);
  // @@protoc_insertion_point(field_set_allocated:CMsgServerHello.legacy_steamdatagram_routing)
}

// optional uint32 required_internal_addr = 7;
bool CMsgServerHello::has_required_internal_addr() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgServerHello::set_has_required_internal_addr() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgServerHello::clear_has_required_internal_addr() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgServerHello::clear_required_internal_addr() {
  required_internal_addr_ = 0u;
  clear_has_required_internal_addr();
}
::google::protobuf::uint32 CMsgServerHello::required_internal_addr() const {
  // @@protoc_insertion_point(field_get:CMsgServerHello.required_internal_addr)
  return required_internal_addr_;
}
void CMsgServerHello::set_required_internal_addr(::google::protobuf::uint32 value) {
  set_has_required_internal_addr();
  required_internal_addr_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerHello.required_internal_addr)
}

// optional bytes steamdatagram_login = 8;
bool CMsgServerHello::has_steamdatagram_login() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgServerHello::set_has_steamdatagram_login() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgServerHello::clear_has_steamdatagram_login() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgServerHello::clear_steamdatagram_login() {
  steamdatagram_login_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_steamdatagram_login();
}
const ::std::string& CMsgServerHello::steamdatagram_login() const {
  // @@protoc_insertion_point(field_get:CMsgServerHello.steamdatagram_login)
  return steamdatagram_login_.GetNoArena();
}
void CMsgServerHello::set_steamdatagram_login(const ::std::string& value) {
  set_has_steamdatagram_login();
  steamdatagram_login_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgServerHello.steamdatagram_login)
}
#if LANG_CXX11
void CMsgServerHello::set_steamdatagram_login(::std::string&& value) {
  set_has_steamdatagram_login();
  steamdatagram_login_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgServerHello.steamdatagram_login)
}
#endif
void CMsgServerHello::set_steamdatagram_login(const char* value) {
  set_has_steamdatagram_login();
  steamdatagram_login_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgServerHello.steamdatagram_login)
}
void CMsgServerHello::set_steamdatagram_login(const void* value, size_t size) {
  set_has_steamdatagram_login();
  steamdatagram_login_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgServerHello.steamdatagram_login)
}
::std::string* CMsgServerHello::mutable_steamdatagram_login() {
  set_has_steamdatagram_login();
  // @@protoc_insertion_point(field_mutable:CMsgServerHello.steamdatagram_login)
  return steamdatagram_login_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgServerHello::release_steamdatagram_login() {
  // @@protoc_insertion_point(field_release:CMsgServerHello.steamdatagram_login)
  clear_has_steamdatagram_login();
  return steamdatagram_login_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgServerHello::set_allocated_steamdatagram_login(::std::string* steamdatagram_login) {
  if (steamdatagram_login != NULL) {
    set_has_steamdatagram_login();
  } else {
    clear_has_steamdatagram_login();
  }
  steamdatagram_login_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), steamdatagram_login);
  // @@protoc_insertion_point(field_set_allocated:CMsgServerHello.steamdatagram_login)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWelcome_Location::kLatitudeFieldNumber;
const int CMsgClientWelcome_Location::kLongitudeFieldNumber;
const int CMsgClientWelcome_Location::kCountryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWelcome_Location::CMsgClientWelcome_Location()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientWelcome.Location)
}
CMsgClientWelcome_Location::CMsgClientWelcome_Location(const CMsgClientWelcome_Location& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_country()) {
    country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
  }
  ::memcpy(&latitude_, &from.latitude_,
    reinterpret_cast<char*>(&longitude_) -
    reinterpret_cast<char*>(&latitude_) + sizeof(longitude_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientWelcome.Location)
}

void CMsgClientWelcome_Location::SharedCtor() {
  _cached_size_ = 0;
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&latitude_, 0, reinterpret_cast<char*>(&longitude_) -
    reinterpret_cast<char*>(&latitude_) + sizeof(longitude_));
}

CMsgClientWelcome_Location::~CMsgClientWelcome_Location() {
  // @@protoc_insertion_point(destructor:CMsgClientWelcome.Location)
  SharedDtor();
}

void CMsgClientWelcome_Location::SharedDtor() {
  country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientWelcome_Location::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientWelcome_Location::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[24].descriptor;
}

const CMsgClientWelcome_Location& CMsgClientWelcome_Location::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientWelcome_Location* CMsgClientWelcome_Location::New(::google::protobuf::Arena* arena) const {
  CMsgClientWelcome_Location* n = new CMsgClientWelcome_Location;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientWelcome_Location::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientWelcome.Location)
  if (has_country()) {
    GOOGLE_DCHECK(!country_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*country_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&latitude_, 0, reinterpret_cast<char*>(&longitude_) -
      reinterpret_cast<char*>(&latitude_) + sizeof(longitude_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientWelcome_Location::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientWelcome.Location)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float latitude = 1;
      case 1: {
        if (tag == 13u) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float longitude = 2;
      case 2: {
        if (tag == 21u) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string country = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country().data(), this->country().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientWelcome.Location.country");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientWelcome.Location)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientWelcome.Location)
  return false;
#undef DO_
}

void CMsgClientWelcome_Location::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientWelcome.Location)
  // optional float latitude = 1;
  if (has_latitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->latitude(), output);
  }

  // optional float longitude = 2;
  if (has_longitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->longitude(), output);
  }

  // optional string country = 3;
  if (has_country()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientWelcome.Location.country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->country(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientWelcome.Location)
}

::google::protobuf::uint8* CMsgClientWelcome_Location::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientWelcome.Location)
  // optional float latitude = 1;
  if (has_latitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->latitude(), target);
  }

  // optional float longitude = 2;
  if (has_longitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->longitude(), target);
  }

  // optional string country = 3;
  if (has_country()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientWelcome.Location.country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->country(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientWelcome.Location)
  return target;
}

size_t CMsgClientWelcome_Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientWelcome.Location)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string country = 3;
    if (has_country()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country());
    }

    // optional float latitude = 1;
    if (has_latitude()) {
      total_size += 1 + 4;
    }

    // optional float longitude = 2;
    if (has_longitude()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientWelcome_Location::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientWelcome.Location)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWelcome_Location* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientWelcome_Location>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientWelcome.Location)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientWelcome.Location)
    MergeFrom(*source);
  }
}

void CMsgClientWelcome_Location::MergeFrom(const CMsgClientWelcome_Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientWelcome.Location)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_country()) {
      set_has_country();
      country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
    }
    if (from.has_latitude()) {
      set_latitude(from.latitude());
    }
    if (from.has_longitude()) {
      set_longitude(from.longitude());
    }
  }
}

void CMsgClientWelcome_Location::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientWelcome.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWelcome_Location::CopyFrom(const CMsgClientWelcome_Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientWelcome.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWelcome_Location::IsInitialized() const {
  return true;
}

void CMsgClientWelcome_Location::Swap(CMsgClientWelcome_Location* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWelcome_Location::InternalSwap(CMsgClientWelcome_Location* other) {
  country_.Swap(&other->country_);
  std::swap(latitude_, other->latitude_);
  std::swap(longitude_, other->longitude_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientWelcome_Location::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[24];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientWelcome_Location

// optional float latitude = 1;
bool CMsgClientWelcome_Location::has_latitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientWelcome_Location::set_has_latitude() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientWelcome_Location::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientWelcome_Location::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
float CMsgClientWelcome_Location::latitude() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.Location.latitude)
  return latitude_;
}
void CMsgClientWelcome_Location::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.Location.latitude)
}

// optional float longitude = 2;
bool CMsgClientWelcome_Location::has_longitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientWelcome_Location::set_has_longitude() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientWelcome_Location::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientWelcome_Location::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
float CMsgClientWelcome_Location::longitude() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.Location.longitude)
  return longitude_;
}
void CMsgClientWelcome_Location::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.Location.longitude)
}

// optional string country = 3;
bool CMsgClientWelcome_Location::has_country() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientWelcome_Location::set_has_country() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientWelcome_Location::clear_has_country() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientWelcome_Location::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
const ::std::string& CMsgClientWelcome_Location::country() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.Location.country)
  return country_.GetNoArena();
}
void CMsgClientWelcome_Location::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.Location.country)
}
#if LANG_CXX11
void CMsgClientWelcome_Location::set_country(::std::string&& value) {
  set_has_country();
  country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientWelcome.Location.country)
}
#endif
void CMsgClientWelcome_Location::set_country(const char* value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgClientWelcome.Location.country)
}
void CMsgClientWelcome_Location::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgClientWelcome.Location.country)
}
::std::string* CMsgClientWelcome_Location::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.Location.country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientWelcome_Location::release_country() {
  // @@protoc_insertion_point(field_release:CMsgClientWelcome.Location.country)
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientWelcome_Location::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:CMsgClientWelcome.Location.country)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWelcome::kVersionFieldNumber;
const int CMsgClientWelcome::kGameDataFieldNumber;
const int CMsgClientWelcome::kOutofdateSubscribedCachesFieldNumber;
const int CMsgClientWelcome::kUptodateSubscribedCachesFieldNumber;
const int CMsgClientWelcome::kLocationFieldNumber;
const int CMsgClientWelcome::kGameData2FieldNumber;
const int CMsgClientWelcome::kRtime32GcWelcomeTimestampFieldNumber;
const int CMsgClientWelcome::kCurrencyFieldNumber;
const int CMsgClientWelcome::kBalanceFieldNumber;
const int CMsgClientWelcome::kBalanceUrlFieldNumber;
const int CMsgClientWelcome::kTxnCountryCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWelcome::CMsgClientWelcome()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientWelcome)
}
CMsgClientWelcome::CMsgClientWelcome(const CMsgClientWelcome& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      outofdate_subscribed_caches_(from.outofdate_subscribed_caches_),
      uptodate_subscribed_caches_(from.uptodate_subscribed_caches_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  game_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_data()) {
    game_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_data_);
  }
  game_data2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_data2()) {
    game_data2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_data2_);
  }
  balance_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_balance_url()) {
    balance_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.balance_url_);
  }
  txn_country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_txn_country_code()) {
    txn_country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txn_country_code_);
  }
  if (from.has_location()) {
    location_ = new ::CMsgClientWelcome_Location(*from.location_);
  } else {
    location_ = NULL;
  }
  ::memcpy(&version_, &from.version_,
    reinterpret_cast<char*>(&balance_) -
    reinterpret_cast<char*>(&version_) + sizeof(balance_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientWelcome)
}

void CMsgClientWelcome::SharedCtor() {
  _cached_size_ = 0;
  game_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_data2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  balance_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txn_country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&location_, 0, reinterpret_cast<char*>(&balance_) -
    reinterpret_cast<char*>(&location_) + sizeof(balance_));
}

CMsgClientWelcome::~CMsgClientWelcome() {
  // @@protoc_insertion_point(destructor:CMsgClientWelcome)
  SharedDtor();
}

void CMsgClientWelcome::SharedDtor() {
  game_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_data2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  balance_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txn_country_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete location_;
  }
}

void CMsgClientWelcome::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientWelcome::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[25].descriptor;
}

const CMsgClientWelcome& CMsgClientWelcome::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientWelcome* CMsgClientWelcome::New(::google::protobuf::Arena* arena) const {
  CMsgClientWelcome* n = new CMsgClientWelcome;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientWelcome::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientWelcome)
  outofdate_subscribed_caches_.Clear();
  uptodate_subscribed_caches_.Clear();
  if (_has_bits_[0 / 32] & 31u) {
    if (has_game_data()) {
      GOOGLE_DCHECK(!game_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*game_data_.UnsafeRawStringPointer())->clear();
    }
    if (has_game_data2()) {
      GOOGLE_DCHECK(!game_data2_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*game_data2_.UnsafeRawStringPointer())->clear();
    }
    if (has_balance_url()) {
      GOOGLE_DCHECK(!balance_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*balance_url_.UnsafeRawStringPointer())->clear();
    }
    if (has_txn_country_code()) {
      GOOGLE_DCHECK(!txn_country_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*txn_country_code_.UnsafeRawStringPointer())->clear();
    }
    if (has_location()) {
      GOOGLE_DCHECK(location_ != NULL);
      location_->::CMsgClientWelcome_Location::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 224u) {
    ::memset(&version_, 0, reinterpret_cast<char*>(&currency_) -
      reinterpret_cast<char*>(&version_) + sizeof(currency_));
  }
  balance_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientWelcome::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientWelcome)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (tag == 8u) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes game_data = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_game_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgSOCacheSubscribed outofdate_subscribed_caches = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_outofdate_subscribed_caches()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .CMsgSOCacheSubscriptionCheck uptodate_subscribed_caches = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_uptodate_subscribed_caches()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional .CMsgClientWelcome.Location location = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes game_data2 = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_game_data2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 rtime32_gc_welcome_timestamp = 7;
      case 7: {
        if (tag == 56u) {
          set_has_rtime32_gc_welcome_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rtime32_gc_welcome_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 currency = 8;
      case 8: {
        if (tag == 64u) {
          set_has_currency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 balance = 9;
      case 9: {
        if (tag == 72u) {
          set_has_balance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string balance_url = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_balance_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->balance_url().data(), this->balance_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientWelcome.balance_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string txn_country_code = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_txn_country_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->txn_country_code().data(), this->txn_country_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientWelcome.txn_country_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientWelcome)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientWelcome)
  return false;
#undef DO_
}

void CMsgClientWelcome::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientWelcome)
  // optional uint32 version = 1;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional bytes game_data = 2;
  if (has_game_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->game_data(), output);
  }

  // repeated .CMsgSOCacheSubscribed outofdate_subscribed_caches = 3;
  for (unsigned int i = 0, n = this->outofdate_subscribed_caches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->outofdate_subscribed_caches(i), output);
  }

  // repeated .CMsgSOCacheSubscriptionCheck uptodate_subscribed_caches = 4;
  for (unsigned int i = 0, n = this->uptodate_subscribed_caches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->uptodate_subscribed_caches(i), output);
  }

  // optional .CMsgClientWelcome.Location location = 5;
  if (has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->location_, output);
  }

  // optional bytes game_data2 = 6;
  if (has_game_data2()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->game_data2(), output);
  }

  // optional uint32 rtime32_gc_welcome_timestamp = 7;
  if (has_rtime32_gc_welcome_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->rtime32_gc_welcome_timestamp(), output);
  }

  // optional uint32 currency = 8;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->currency(), output);
  }

  // optional uint32 balance = 9;
  if (has_balance()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->balance(), output);
  }

  // optional string balance_url = 10;
  if (has_balance_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->balance_url().data(), this->balance_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientWelcome.balance_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->balance_url(), output);
  }

  // optional string txn_country_code = 11;
  if (has_txn_country_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->txn_country_code().data(), this->txn_country_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientWelcome.txn_country_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->txn_country_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientWelcome)
}

::google::protobuf::uint8* CMsgClientWelcome::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientWelcome)
  // optional uint32 version = 1;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional bytes game_data = 2;
  if (has_game_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->game_data(), target);
  }

  // repeated .CMsgSOCacheSubscribed outofdate_subscribed_caches = 3;
  for (unsigned int i = 0, n = this->outofdate_subscribed_caches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->outofdate_subscribed_caches(i), false, target);
  }

  // repeated .CMsgSOCacheSubscriptionCheck uptodate_subscribed_caches = 4;
  for (unsigned int i = 0, n = this->uptodate_subscribed_caches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->uptodate_subscribed_caches(i), false, target);
  }

  // optional .CMsgClientWelcome.Location location = 5;
  if (has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->location_, false, target);
  }

  // optional bytes game_data2 = 6;
  if (has_game_data2()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->game_data2(), target);
  }

  // optional uint32 rtime32_gc_welcome_timestamp = 7;
  if (has_rtime32_gc_welcome_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->rtime32_gc_welcome_timestamp(), target);
  }

  // optional uint32 currency = 8;
  if (has_currency()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->currency(), target);
  }

  // optional uint32 balance = 9;
  if (has_balance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->balance(), target);
  }

  // optional string balance_url = 10;
  if (has_balance_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->balance_url().data(), this->balance_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientWelcome.balance_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->balance_url(), target);
  }

  // optional string txn_country_code = 11;
  if (has_txn_country_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->txn_country_code().data(), this->txn_country_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientWelcome.txn_country_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->txn_country_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientWelcome)
  return target;
}

size_t CMsgClientWelcome::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientWelcome)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .CMsgSOCacheSubscribed outofdate_subscribed_caches = 3;
  {
    unsigned int count = this->outofdate_subscribed_caches_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->outofdate_subscribed_caches(i));
    }
  }

  // repeated .CMsgSOCacheSubscriptionCheck uptodate_subscribed_caches = 4;
  {
    unsigned int count = this->uptodate_subscribed_caches_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uptodate_subscribed_caches(i));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes game_data = 2;
    if (has_game_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->game_data());
    }

    // optional bytes game_data2 = 6;
    if (has_game_data2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->game_data2());
    }

    // optional string balance_url = 10;
    if (has_balance_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->balance_url());
    }

    // optional string txn_country_code = 11;
    if (has_txn_country_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->txn_country_code());
    }

    // optional .CMsgClientWelcome.Location location = 5;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->location_);
    }

    // optional uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 rtime32_gc_welcome_timestamp = 7;
    if (has_rtime32_gc_welcome_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rtime32_gc_welcome_timestamp());
    }

    // optional uint32 currency = 8;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->currency());
    }

  }
  // optional uint32 balance = 9;
  if (has_balance()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->balance());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientWelcome::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientWelcome)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWelcome* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientWelcome>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientWelcome)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientWelcome)
    MergeFrom(*source);
  }
}

void CMsgClientWelcome::MergeFrom(const CMsgClientWelcome& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientWelcome)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  outofdate_subscribed_caches_.MergeFrom(from.outofdate_subscribed_caches_);
  uptodate_subscribed_caches_.MergeFrom(from.uptodate_subscribed_caches_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_game_data()) {
      set_has_game_data();
      game_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_data_);
    }
    if (from.has_game_data2()) {
      set_has_game_data2();
      game_data2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_data2_);
    }
    if (from.has_balance_url()) {
      set_has_balance_url();
      balance_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.balance_url_);
    }
    if (from.has_txn_country_code()) {
      set_has_txn_country_code();
      txn_country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txn_country_code_);
    }
    if (from.has_location()) {
      mutable_location()->::CMsgClientWelcome_Location::MergeFrom(from.location());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_rtime32_gc_welcome_timestamp()) {
      set_rtime32_gc_welcome_timestamp(from.rtime32_gc_welcome_timestamp());
    }
    if (from.has_currency()) {
      set_currency(from.currency());
    }
  }
  if (from.has_balance()) {
    set_balance(from.balance());
  }
}

void CMsgClientWelcome::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientWelcome)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWelcome::CopyFrom(const CMsgClientWelcome& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientWelcome)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWelcome::IsInitialized() const {
  return true;
}

void CMsgClientWelcome::Swap(CMsgClientWelcome* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWelcome::InternalSwap(CMsgClientWelcome* other) {
  outofdate_subscribed_caches_.UnsafeArenaSwap(&other->outofdate_subscribed_caches_);
  uptodate_subscribed_caches_.UnsafeArenaSwap(&other->uptodate_subscribed_caches_);
  game_data_.Swap(&other->game_data_);
  game_data2_.Swap(&other->game_data2_);
  balance_url_.Swap(&other->balance_url_);
  txn_country_code_.Swap(&other->txn_country_code_);
  std::swap(location_, other->location_);
  std::swap(version_, other->version_);
  std::swap(rtime32_gc_welcome_timestamp_, other->rtime32_gc_welcome_timestamp_);
  std::swap(currency_, other->currency_);
  std::swap(balance_, other->balance_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientWelcome::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[25];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientWelcome

// optional uint32 version = 1;
bool CMsgClientWelcome::has_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientWelcome::set_has_version() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientWelcome::clear_has_version() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientWelcome::clear_version() {
  version_ = 0u;
  clear_has_version();
}
::google::protobuf::uint32 CMsgClientWelcome::version() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.version)
  return version_;
}
void CMsgClientWelcome::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.version)
}

// optional bytes game_data = 2;
bool CMsgClientWelcome::has_game_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientWelcome::set_has_game_data() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientWelcome::clear_has_game_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientWelcome::clear_game_data() {
  game_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_data();
}
const ::std::string& CMsgClientWelcome::game_data() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.game_data)
  return game_data_.GetNoArena();
}
void CMsgClientWelcome::set_game_data(const ::std::string& value) {
  set_has_game_data();
  game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.game_data)
}
#if LANG_CXX11
void CMsgClientWelcome::set_game_data(::std::string&& value) {
  set_has_game_data();
  game_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientWelcome.game_data)
}
#endif
void CMsgClientWelcome::set_game_data(const char* value) {
  set_has_game_data();
  game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgClientWelcome.game_data)
}
void CMsgClientWelcome::set_game_data(const void* value, size_t size) {
  set_has_game_data();
  game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgClientWelcome.game_data)
}
::std::string* CMsgClientWelcome::mutable_game_data() {
  set_has_game_data();
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.game_data)
  return game_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientWelcome::release_game_data() {
  // @@protoc_insertion_point(field_release:CMsgClientWelcome.game_data)
  clear_has_game_data();
  return game_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientWelcome::set_allocated_game_data(::std::string* game_data) {
  if (game_data != NULL) {
    set_has_game_data();
  } else {
    clear_has_game_data();
  }
  game_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_data);
  // @@protoc_insertion_point(field_set_allocated:CMsgClientWelcome.game_data)
}

// repeated .CMsgSOCacheSubscribed outofdate_subscribed_caches = 3;
int CMsgClientWelcome::outofdate_subscribed_caches_size() const {
  return outofdate_subscribed_caches_.size();
}
void CMsgClientWelcome::clear_outofdate_subscribed_caches() {
  outofdate_subscribed_caches_.Clear();
}
const ::CMsgSOCacheSubscribed& CMsgClientWelcome::outofdate_subscribed_caches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.outofdate_subscribed_caches)
  return outofdate_subscribed_caches_.Get(index);
}
::CMsgSOCacheSubscribed* CMsgClientWelcome::mutable_outofdate_subscribed_caches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.outofdate_subscribed_caches)
  return outofdate_subscribed_caches_.Mutable(index);
}
::CMsgSOCacheSubscribed* CMsgClientWelcome::add_outofdate_subscribed_caches() {
  // @@protoc_insertion_point(field_add:CMsgClientWelcome.outofdate_subscribed_caches)
  return outofdate_subscribed_caches_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed >*
CMsgClientWelcome::mutable_outofdate_subscribed_caches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientWelcome.outofdate_subscribed_caches)
  return &outofdate_subscribed_caches_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed >&
CMsgClientWelcome::outofdate_subscribed_caches() const {
  // @@protoc_insertion_point(field_list:CMsgClientWelcome.outofdate_subscribed_caches)
  return outofdate_subscribed_caches_;
}

// repeated .CMsgSOCacheSubscriptionCheck uptodate_subscribed_caches = 4;
int CMsgClientWelcome::uptodate_subscribed_caches_size() const {
  return uptodate_subscribed_caches_.size();
}
void CMsgClientWelcome::clear_uptodate_subscribed_caches() {
  uptodate_subscribed_caches_.Clear();
}
const ::CMsgSOCacheSubscriptionCheck& CMsgClientWelcome::uptodate_subscribed_caches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.uptodate_subscribed_caches)
  return uptodate_subscribed_caches_.Get(index);
}
::CMsgSOCacheSubscriptionCheck* CMsgClientWelcome::mutable_uptodate_subscribed_caches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.uptodate_subscribed_caches)
  return uptodate_subscribed_caches_.Mutable(index);
}
::CMsgSOCacheSubscriptionCheck* CMsgClientWelcome::add_uptodate_subscribed_caches() {
  // @@protoc_insertion_point(field_add:CMsgClientWelcome.uptodate_subscribed_caches)
  return uptodate_subscribed_caches_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscriptionCheck >*
CMsgClientWelcome::mutable_uptodate_subscribed_caches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientWelcome.uptodate_subscribed_caches)
  return &uptodate_subscribed_caches_;
}
const ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscriptionCheck >&
CMsgClientWelcome::uptodate_subscribed_caches() const {
  // @@protoc_insertion_point(field_list:CMsgClientWelcome.uptodate_subscribed_caches)
  return uptodate_subscribed_caches_;
}

// optional .CMsgClientWelcome.Location location = 5;
bool CMsgClientWelcome::has_location() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientWelcome::set_has_location() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientWelcome::clear_has_location() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientWelcome::clear_location() {
  if (location_ != NULL) location_->::CMsgClientWelcome_Location::Clear();
  clear_has_location();
}
const ::CMsgClientWelcome_Location& CMsgClientWelcome::location() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.location)
  return location_ != NULL ? *location_
                         : *::CMsgClientWelcome_Location::internal_default_instance();
}
::CMsgClientWelcome_Location* CMsgClientWelcome::mutable_location() {
  set_has_location();
  if (location_ == NULL) {
    location_ = new ::CMsgClientWelcome_Location;
  }
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.location)
  return location_;
}
::CMsgClientWelcome_Location* CMsgClientWelcome::release_location() {
  // @@protoc_insertion_point(field_release:CMsgClientWelcome.location)
  clear_has_location();
  ::CMsgClientWelcome_Location* temp = location_;
  location_ = NULL;
  return temp;
}
void CMsgClientWelcome::set_allocated_location(::CMsgClientWelcome_Location* location) {
  delete location_;
  location_ = location;
  if (location) {
    set_has_location();
  } else {
    clear_has_location();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgClientWelcome.location)
}

// optional bytes game_data2 = 6;
bool CMsgClientWelcome::has_game_data2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientWelcome::set_has_game_data2() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientWelcome::clear_has_game_data2() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientWelcome::clear_game_data2() {
  game_data2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_data2();
}
const ::std::string& CMsgClientWelcome::game_data2() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.game_data2)
  return game_data2_.GetNoArena();
}
void CMsgClientWelcome::set_game_data2(const ::std::string& value) {
  set_has_game_data2();
  game_data2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.game_data2)
}
#if LANG_CXX11
void CMsgClientWelcome::set_game_data2(::std::string&& value) {
  set_has_game_data2();
  game_data2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientWelcome.game_data2)
}
#endif
void CMsgClientWelcome::set_game_data2(const char* value) {
  set_has_game_data2();
  game_data2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgClientWelcome.game_data2)
}
void CMsgClientWelcome::set_game_data2(const void* value, size_t size) {
  set_has_game_data2();
  game_data2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgClientWelcome.game_data2)
}
::std::string* CMsgClientWelcome::mutable_game_data2() {
  set_has_game_data2();
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.game_data2)
  return game_data2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientWelcome::release_game_data2() {
  // @@protoc_insertion_point(field_release:CMsgClientWelcome.game_data2)
  clear_has_game_data2();
  return game_data2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientWelcome::set_allocated_game_data2(::std::string* game_data2) {
  if (game_data2 != NULL) {
    set_has_game_data2();
  } else {
    clear_has_game_data2();
  }
  game_data2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_data2);
  // @@protoc_insertion_point(field_set_allocated:CMsgClientWelcome.game_data2)
}

// optional uint32 rtime32_gc_welcome_timestamp = 7;
bool CMsgClientWelcome::has_rtime32_gc_welcome_timestamp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgClientWelcome::set_has_rtime32_gc_welcome_timestamp() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgClientWelcome::clear_has_rtime32_gc_welcome_timestamp() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgClientWelcome::clear_rtime32_gc_welcome_timestamp() {
  rtime32_gc_welcome_timestamp_ = 0u;
  clear_has_rtime32_gc_welcome_timestamp();
}
::google::protobuf::uint32 CMsgClientWelcome::rtime32_gc_welcome_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.rtime32_gc_welcome_timestamp)
  return rtime32_gc_welcome_timestamp_;
}
void CMsgClientWelcome::set_rtime32_gc_welcome_timestamp(::google::protobuf::uint32 value) {
  set_has_rtime32_gc_welcome_timestamp();
  rtime32_gc_welcome_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.rtime32_gc_welcome_timestamp)
}

// optional uint32 currency = 8;
bool CMsgClientWelcome::has_currency() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgClientWelcome::set_has_currency() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgClientWelcome::clear_has_currency() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgClientWelcome::clear_currency() {
  currency_ = 0u;
  clear_has_currency();
}
::google::protobuf::uint32 CMsgClientWelcome::currency() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.currency)
  return currency_;
}
void CMsgClientWelcome::set_currency(::google::protobuf::uint32 value) {
  set_has_currency();
  currency_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.currency)
}

// optional uint32 balance = 9;
bool CMsgClientWelcome::has_balance() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CMsgClientWelcome::set_has_balance() {
  _has_bits_[0] |= 0x00000100u;
}
void CMsgClientWelcome::clear_has_balance() {
  _has_bits_[0] &= ~0x00000100u;
}
void CMsgClientWelcome::clear_balance() {
  balance_ = 0u;
  clear_has_balance();
}
::google::protobuf::uint32 CMsgClientWelcome::balance() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.balance)
  return balance_;
}
void CMsgClientWelcome::set_balance(::google::protobuf::uint32 value) {
  set_has_balance();
  balance_ = value;
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.balance)
}

// optional string balance_url = 10;
bool CMsgClientWelcome::has_balance_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientWelcome::set_has_balance_url() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientWelcome::clear_has_balance_url() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientWelcome::clear_balance_url() {
  balance_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_balance_url();
}
const ::std::string& CMsgClientWelcome::balance_url() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.balance_url)
  return balance_url_.GetNoArena();
}
void CMsgClientWelcome::set_balance_url(const ::std::string& value) {
  set_has_balance_url();
  balance_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.balance_url)
}
#if LANG_CXX11
void CMsgClientWelcome::set_balance_url(::std::string&& value) {
  set_has_balance_url();
  balance_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientWelcome.balance_url)
}
#endif
void CMsgClientWelcome::set_balance_url(const char* value) {
  set_has_balance_url();
  balance_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgClientWelcome.balance_url)
}
void CMsgClientWelcome::set_balance_url(const char* value, size_t size) {
  set_has_balance_url();
  balance_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgClientWelcome.balance_url)
}
::std::string* CMsgClientWelcome::mutable_balance_url() {
  set_has_balance_url();
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.balance_url)
  return balance_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientWelcome::release_balance_url() {
  // @@protoc_insertion_point(field_release:CMsgClientWelcome.balance_url)
  clear_has_balance_url();
  return balance_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientWelcome::set_allocated_balance_url(::std::string* balance_url) {
  if (balance_url != NULL) {
    set_has_balance_url();
  } else {
    clear_has_balance_url();
  }
  balance_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), balance_url);
  // @@protoc_insertion_point(field_set_allocated:CMsgClientWelcome.balance_url)
}

// optional string txn_country_code = 11;
bool CMsgClientWelcome::has_txn_country_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientWelcome::set_has_txn_country_code() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientWelcome::clear_has_txn_country_code() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientWelcome::clear_txn_country_code() {
  txn_country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_txn_country_code();
}
const ::std::string& CMsgClientWelcome::txn_country_code() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.txn_country_code)
  return txn_country_code_.GetNoArena();
}
void CMsgClientWelcome::set_txn_country_code(const ::std::string& value) {
  set_has_txn_country_code();
  txn_country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.txn_country_code)
}
#if LANG_CXX11
void CMsgClientWelcome::set_txn_country_code(::std::string&& value) {
  set_has_txn_country_code();
  txn_country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientWelcome.txn_country_code)
}
#endif
void CMsgClientWelcome::set_txn_country_code(const char* value) {
  set_has_txn_country_code();
  txn_country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgClientWelcome.txn_country_code)
}
void CMsgClientWelcome::set_txn_country_code(const char* value, size_t size) {
  set_has_txn_country_code();
  txn_country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgClientWelcome.txn_country_code)
}
::std::string* CMsgClientWelcome::mutable_txn_country_code() {
  set_has_txn_country_code();
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.txn_country_code)
  return txn_country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientWelcome::release_txn_country_code() {
  // @@protoc_insertion_point(field_release:CMsgClientWelcome.txn_country_code)
  clear_has_txn_country_code();
  return txn_country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientWelcome::set_allocated_txn_country_code(::std::string* txn_country_code) {
  if (txn_country_code != NULL) {
    set_has_txn_country_code();
  } else {
    clear_has_txn_country_code();
  }
  txn_country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), txn_country_code);
  // @@protoc_insertion_point(field_set_allocated:CMsgClientWelcome.txn_country_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgConnectionStatus::kStatusFieldNumber;
const int CMsgConnectionStatus::kClientSessionNeedFieldNumber;
const int CMsgConnectionStatus::kQueuePositionFieldNumber;
const int CMsgConnectionStatus::kQueueSizeFieldNumber;
const int CMsgConnectionStatus::kWaitSecondsFieldNumber;
const int CMsgConnectionStatus::kEstimatedWaitSecondsRemainingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgConnectionStatus::CMsgConnectionStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgConnectionStatus)
}
CMsgConnectionStatus::CMsgConnectionStatus(const CMsgConnectionStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&status_, &from.status_,
    reinterpret_cast<char*>(&estimated_wait_seconds_remaining_) -
    reinterpret_cast<char*>(&status_) + sizeof(estimated_wait_seconds_remaining_));
  // @@protoc_insertion_point(copy_constructor:CMsgConnectionStatus)
}

void CMsgConnectionStatus::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&status_, 0, reinterpret_cast<char*>(&estimated_wait_seconds_remaining_) -
    reinterpret_cast<char*>(&status_) + sizeof(estimated_wait_seconds_remaining_));
}

CMsgConnectionStatus::~CMsgConnectionStatus() {
  // @@protoc_insertion_point(destructor:CMsgConnectionStatus)
  SharedDtor();
}

void CMsgConnectionStatus::SharedDtor() {
}

void CMsgConnectionStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgConnectionStatus::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[26].descriptor;
}

const CMsgConnectionStatus& CMsgConnectionStatus::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgConnectionStatus* CMsgConnectionStatus::New(::google::protobuf::Arena* arena) const {
  CMsgConnectionStatus* n = new CMsgConnectionStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgConnectionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgConnectionStatus)
  if (_has_bits_[0 / 32] & 63u) {
    ::memset(&status_, 0, reinterpret_cast<char*>(&estimated_wait_seconds_remaining_) -
      reinterpret_cast<char*>(&status_) + sizeof(estimated_wait_seconds_remaining_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgConnectionStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgConnectionStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .GCConnectionStatus status = 1 [default = GCConnectionStatus_HAVE_SESSION];
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::GCConnectionStatus_IsValid(value)) {
            set_status(static_cast< ::GCConnectionStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 client_session_need = 2;
      case 2: {
        if (tag == 16u) {
          set_has_client_session_need();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_session_need_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 queue_position = 3;
      case 3: {
        if (tag == 24u) {
          set_has_queue_position();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &queue_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 queue_size = 4;
      case 4: {
        if (tag == 32u) {
          set_has_queue_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &queue_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 wait_seconds = 5;
      case 5: {
        if (tag == 40u) {
          set_has_wait_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wait_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 estimated_wait_seconds_remaining = 6;
      case 6: {
        if (tag == 48u) {
          set_has_estimated_wait_seconds_remaining();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &estimated_wait_seconds_remaining_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgConnectionStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgConnectionStatus)
  return false;
#undef DO_
}

void CMsgConnectionStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgConnectionStatus)
  // optional .GCConnectionStatus status = 1 [default = GCConnectionStatus_HAVE_SESSION];
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional uint32 client_session_need = 2;
  if (has_client_session_need()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->client_session_need(), output);
  }

  // optional int32 queue_position = 3;
  if (has_queue_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->queue_position(), output);
  }

  // optional int32 queue_size = 4;
  if (has_queue_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->queue_size(), output);
  }

  // optional int32 wait_seconds = 5;
  if (has_wait_seconds()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->wait_seconds(), output);
  }

  // optional int32 estimated_wait_seconds_remaining = 6;
  if (has_estimated_wait_seconds_remaining()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->estimated_wait_seconds_remaining(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgConnectionStatus)
}

::google::protobuf::uint8* CMsgConnectionStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgConnectionStatus)
  // optional .GCConnectionStatus status = 1 [default = GCConnectionStatus_HAVE_SESSION];
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional uint32 client_session_need = 2;
  if (has_client_session_need()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->client_session_need(), target);
  }

  // optional int32 queue_position = 3;
  if (has_queue_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->queue_position(), target);
  }

  // optional int32 queue_size = 4;
  if (has_queue_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->queue_size(), target);
  }

  // optional int32 wait_seconds = 5;
  if (has_wait_seconds()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->wait_seconds(), target);
  }

  // optional int32 estimated_wait_seconds_remaining = 6;
  if (has_estimated_wait_seconds_remaining()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->estimated_wait_seconds_remaining(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgConnectionStatus)
  return target;
}

size_t CMsgConnectionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgConnectionStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .GCConnectionStatus status = 1 [default = GCConnectionStatus_HAVE_SESSION];
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional uint32 client_session_need = 2;
    if (has_client_session_need()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_session_need());
    }

    // optional int32 queue_position = 3;
    if (has_queue_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->queue_position());
    }

    // optional int32 queue_size = 4;
    if (has_queue_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->queue_size());
    }

    // optional int32 wait_seconds = 5;
    if (has_wait_seconds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wait_seconds());
    }

    // optional int32 estimated_wait_seconds_remaining = 6;
    if (has_estimated_wait_seconds_remaining()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->estimated_wait_seconds_remaining());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgConnectionStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgConnectionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgConnectionStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgConnectionStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgConnectionStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgConnectionStatus)
    MergeFrom(*source);
  }
}

void CMsgConnectionStatus::MergeFrom(const CMsgConnectionStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgConnectionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 63u) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_client_session_need()) {
      set_client_session_need(from.client_session_need());
    }
    if (from.has_queue_position()) {
      set_queue_position(from.queue_position());
    }
    if (from.has_queue_size()) {
      set_queue_size(from.queue_size());
    }
    if (from.has_wait_seconds()) {
      set_wait_seconds(from.wait_seconds());
    }
    if (from.has_estimated_wait_seconds_remaining()) {
      set_estimated_wait_seconds_remaining(from.estimated_wait_seconds_remaining());
    }
  }
}

void CMsgConnectionStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgConnectionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgConnectionStatus::CopyFrom(const CMsgConnectionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgConnectionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgConnectionStatus::IsInitialized() const {
  return true;
}

void CMsgConnectionStatus::Swap(CMsgConnectionStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgConnectionStatus::InternalSwap(CMsgConnectionStatus* other) {
  std::swap(status_, other->status_);
  std::swap(client_session_need_, other->client_session_need_);
  std::swap(queue_position_, other->queue_position_);
  std::swap(queue_size_, other->queue_size_);
  std::swap(wait_seconds_, other->wait_seconds_);
  std::swap(estimated_wait_seconds_remaining_, other->estimated_wait_seconds_remaining_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgConnectionStatus::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[26];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgConnectionStatus

// optional .GCConnectionStatus status = 1 [default = GCConnectionStatus_HAVE_SESSION];
bool CMsgConnectionStatus::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgConnectionStatus::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgConnectionStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgConnectionStatus::clear_status() {
  status_ = 0;
  clear_has_status();
}
::GCConnectionStatus CMsgConnectionStatus::status() const {
  // @@protoc_insertion_point(field_get:CMsgConnectionStatus.status)
  return static_cast< ::GCConnectionStatus >(status_);
}
void CMsgConnectionStatus::set_status(::GCConnectionStatus value) {
  assert(::GCConnectionStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectionStatus.status)
}

// optional uint32 client_session_need = 2;
bool CMsgConnectionStatus::has_client_session_need() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgConnectionStatus::set_has_client_session_need() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgConnectionStatus::clear_has_client_session_need() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgConnectionStatus::clear_client_session_need() {
  client_session_need_ = 0u;
  clear_has_client_session_need();
}
::google::protobuf::uint32 CMsgConnectionStatus::client_session_need() const {
  // @@protoc_insertion_point(field_get:CMsgConnectionStatus.client_session_need)
  return client_session_need_;
}
void CMsgConnectionStatus::set_client_session_need(::google::protobuf::uint32 value) {
  set_has_client_session_need();
  client_session_need_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectionStatus.client_session_need)
}

// optional int32 queue_position = 3;
bool CMsgConnectionStatus::has_queue_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgConnectionStatus::set_has_queue_position() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgConnectionStatus::clear_has_queue_position() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgConnectionStatus::clear_queue_position() {
  queue_position_ = 0;
  clear_has_queue_position();
}
::google::protobuf::int32 CMsgConnectionStatus::queue_position() const {
  // @@protoc_insertion_point(field_get:CMsgConnectionStatus.queue_position)
  return queue_position_;
}
void CMsgConnectionStatus::set_queue_position(::google::protobuf::int32 value) {
  set_has_queue_position();
  queue_position_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectionStatus.queue_position)
}

// optional int32 queue_size = 4;
bool CMsgConnectionStatus::has_queue_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgConnectionStatus::set_has_queue_size() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgConnectionStatus::clear_has_queue_size() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgConnectionStatus::clear_queue_size() {
  queue_size_ = 0;
  clear_has_queue_size();
}
::google::protobuf::int32 CMsgConnectionStatus::queue_size() const {
  // @@protoc_insertion_point(field_get:CMsgConnectionStatus.queue_size)
  return queue_size_;
}
void CMsgConnectionStatus::set_queue_size(::google::protobuf::int32 value) {
  set_has_queue_size();
  queue_size_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectionStatus.queue_size)
}

// optional int32 wait_seconds = 5;
bool CMsgConnectionStatus::has_wait_seconds() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgConnectionStatus::set_has_wait_seconds() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgConnectionStatus::clear_has_wait_seconds() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgConnectionStatus::clear_wait_seconds() {
  wait_seconds_ = 0;
  clear_has_wait_seconds();
}
::google::protobuf::int32 CMsgConnectionStatus::wait_seconds() const {
  // @@protoc_insertion_point(field_get:CMsgConnectionStatus.wait_seconds)
  return wait_seconds_;
}
void CMsgConnectionStatus::set_wait_seconds(::google::protobuf::int32 value) {
  set_has_wait_seconds();
  wait_seconds_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectionStatus.wait_seconds)
}

// optional int32 estimated_wait_seconds_remaining = 6;
bool CMsgConnectionStatus::has_estimated_wait_seconds_remaining() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgConnectionStatus::set_has_estimated_wait_seconds_remaining() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgConnectionStatus::clear_has_estimated_wait_seconds_remaining() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgConnectionStatus::clear_estimated_wait_seconds_remaining() {
  estimated_wait_seconds_remaining_ = 0;
  clear_has_estimated_wait_seconds_remaining();
}
::google::protobuf::int32 CMsgConnectionStatus::estimated_wait_seconds_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgConnectionStatus.estimated_wait_seconds_remaining)
  return estimated_wait_seconds_remaining_;
}
void CMsgConnectionStatus::set_estimated_wait_seconds_remaining(::google::protobuf::int32 value) {
  set_has_estimated_wait_seconds_remaining();
  estimated_wait_seconds_remaining_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectionStatus.estimated_wait_seconds_remaining)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::kGameitemidFieldNumber;
const int CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::kItemDescriptionFieldNumber;
const int CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::kOnePerAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
}
CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription(const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_item_description()) {
    item_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_description_);
  }
  ::memcpy(&gameitemid_, &from.gameitemid_,
    reinterpret_cast<char*>(&one_per_account_) -
    reinterpret_cast<char*>(&gameitemid_) + sizeof(one_per_account_));
  // @@protoc_insertion_point(copy_constructor:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::SharedCtor() {
  _cached_size_ = 0;
  item_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gameitemid_, 0, reinterpret_cast<char*>(&one_per_account_) -
    reinterpret_cast<char*>(&gameitemid_) + sizeof(one_per_account_));
}

CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::~CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription() {
  // @@protoc_insertion_point(destructor:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  SharedDtor();
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::SharedDtor() {
  item_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[27].descriptor;
}

const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::New(::google::protobuf::Arena* arena) const {
  CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* n = new CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  if (has_item_description()) {
    GOOGLE_DCHECK(!item_description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*item_description_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&gameitemid_, 0, reinterpret_cast<char*>(&one_per_account_) -
      reinterpret_cast<char*>(&gameitemid_) + sizeof(one_per_account_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 gameitemid = 1;
      case 1: {
        if (tag == 8u) {
          set_has_gameitemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gameitemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string item_description = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_description().data(), this->item_description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool one_per_account = 3;
      case 3: {
        if (tag == 24u) {
          set_has_one_per_account();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &one_per_account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  return false;
#undef DO_
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  // optional uint32 gameitemid = 1;
  if (has_gameitemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gameitemid(), output);
  }

  // optional string item_description = 2;
  if (has_item_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_description().data(), this->item_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_description(), output);
  }

  // optional bool one_per_account = 3;
  if (has_one_per_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->one_per_account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
}

::google::protobuf::uint8* CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  // optional uint32 gameitemid = 1;
  if (has_gameitemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gameitemid(), target);
  }

  // optional string item_description = 2;
  if (has_item_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_description().data(), this->item_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_description(), target);
  }

  // optional bool one_per_account = 3;
  if (has_one_per_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->one_per_account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  return target;
}

size_t CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string item_description = 2;
    if (has_item_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_description());
    }

    // optional uint32 gameitemid = 1;
    if (has_gameitemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gameitemid());
    }

    // optional bool one_per_account = 3;
    if (has_one_per_account()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
    MergeFrom(*source);
  }
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::MergeFrom(const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_item_description()) {
      set_has_item_description();
      item_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_description_);
    }
    if (from.has_gameitemid()) {
      set_gameitemid(from.gameitemid());
    }
    if (from.has_one_per_account()) {
      set_one_per_account(from.one_per_account());
    }
  }
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::CopyFrom(const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::IsInitialized() const {
  return true;
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::Swap(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::InternalSwap(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* other) {
  item_description_.Swap(&other->item_description_);
  std::swap(gameitemid_, other->gameitemid_);
  std::swap(one_per_account_, other->one_per_account_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[27];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription

// optional uint32 gameitemid = 1;
bool CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::has_gameitemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_has_gameitemid() {
  _has_bits_[0] |= 0x00000002u;
}
void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::clear_has_gameitemid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::clear_gameitemid() {
  gameitemid_ = 0u;
  clear_has_gameitemid();
}
::google::protobuf::uint32 CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::gameitemid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.gameitemid)
  return gameitemid_;
}
void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_gameitemid(::google::protobuf::uint32 value) {
  set_has_gameitemid();
  gameitemid_ = value;
  // @@protoc_insertion_point(field_set:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.gameitemid)
}

// optional string item_description = 2;
bool CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::has_item_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_has_item_description() {
  _has_bits_[0] |= 0x00000001u;
}
void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::clear_has_item_description() {
  _has_bits_[0] &= ~0x00000001u;
}
void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::clear_item_description() {
  item_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_description();
}
const ::std::string& CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::item_description() const {
  // @@protoc_insertion_point(field_get:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
  return item_description_.GetNoArena();
}
void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_item_description(const ::std::string& value) {
  set_has_item_description();
  item_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
}
#if LANG_CXX11
void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_item_description(::std::string&& value) {
  set_has_item_description();
  item_description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
}
#endif
void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_item_description(const char* value) {
  set_has_item_description();
  item_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
}
void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_item_description(const char* value, size_t size) {
  set_has_item_description();
  item_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
}
::std::string* CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::mutable_item_description() {
  set_has_item_description();
  // @@protoc_insertion_point(field_mutable:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
  return item_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::release_item_description() {
  // @@protoc_insertion_point(field_release:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
  clear_has_item_description();
  return item_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_allocated_item_description(::std::string* item_description) {
  if (item_description != NULL) {
    set_has_item_description();
  } else {
    clear_has_item_description();
  }
  item_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_description);
  // @@protoc_insertion_point(field_set_allocated:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
}

// optional bool one_per_account = 3;
bool CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::has_one_per_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_has_one_per_account() {
  _has_bits_[0] |= 0x00000004u;
}
void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::clear_has_one_per_account() {
  _has_bits_[0] &= ~0x00000004u;
}
void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::clear_one_per_account() {
  one_per_account_ = false;
  clear_has_one_per_account();
}
bool CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::one_per_account() const {
  // @@protoc_insertion_point(field_get:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.one_per_account)
  return one_per_account_;
}
void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_one_per_account(bool value) {
  set_has_one_per_account();
  one_per_account_ = value;
  // @@protoc_insertion_point(field_set:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.one_per_account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::kLanguageFieldNumber;
const int CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::kDescriptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
}
CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock(const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      descriptions_(from.descriptions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_language()) {
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  // @@protoc_insertion_point(copy_constructor:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::SharedCtor() {
  _cached_size_ = 0;
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::~CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock() {
  // @@protoc_insertion_point(destructor:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  SharedDtor();
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::SharedDtor() {
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[28].descriptor;
}

const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::New(::google::protobuf::Arena* arena) const {
  CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* n = new CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  descriptions_.Clear();
  if (has_language()) {
    GOOGLE_DCHECK(!language_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*language_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string language = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->language().data(), this->language().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription descriptions = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_descriptions()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  return false;
#undef DO_
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  // optional string language = 1;
  if (has_language()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->language(), output);
  }

  // repeated .CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription descriptions = 2;
  for (unsigned int i = 0, n = this->descriptions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->descriptions(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
}

::google::protobuf::uint8* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  // optional string language = 1;
  if (has_language()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->language(), target);
  }

  // repeated .CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription descriptions = 2;
  for (unsigned int i = 0, n = this->descriptions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->descriptions(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  return target;
}

size_t CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription descriptions = 2;
  {
    unsigned int count = this->descriptions_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->descriptions(i));
    }
  }

  // optional string language = 1;
  if (has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
    MergeFrom(*source);
  }
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::MergeFrom(const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  descriptions_.MergeFrom(from.descriptions_);
  if (from.has_language()) {
    set_has_language();
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::CopyFrom(const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::IsInitialized() const {
  return true;
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::Swap(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::InternalSwap(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* other) {
  descriptions_.UnsafeArenaSwap(&other->descriptions_);
  language_.Swap(&other->language_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[28];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock

// optional string language = 1;
bool CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::has_language() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::set_has_language() {
  _has_bits_[0] |= 0x00000001u;
}
void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::clear_has_language() {
  _has_bits_[0] &= ~0x00000001u;
}
void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_language();
}
const ::std::string& CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::language() const {
  // @@protoc_insertion_point(field_get:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
  return language_.GetNoArena();
}
void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::set_language(const ::std::string& value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
}
#if LANG_CXX11
void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::set_language(::std::string&& value) {
  set_has_language();
  language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
}
#endif
void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::set_language(const char* value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
}
void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::set_language(const char* value, size_t size) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
}
::std::string* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::mutable_language() {
  set_has_language();
  // @@protoc_insertion_point(field_mutable:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::release_language() {
  // @@protoc_insertion_point(field_release:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
  clear_has_language();
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    set_has_language();
  } else {
    clear_has_language();
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
}

// repeated .CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription descriptions = 2;
int CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::descriptions_size() const {
  return descriptions_.size();
}
void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::clear_descriptions() {
  descriptions_.Clear();
}
const ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::descriptions(int index) const {
  // @@protoc_insertion_point(field_get:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions)
  return descriptions_.Get(index);
}
::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::mutable_descriptions(int index) {
  // @@protoc_insertion_point(field_mutable:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions)
  return descriptions_.Mutable(index);
}
::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::add_descriptions() {
  // @@protoc_insertion_point(field_add:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions)
  return descriptions_.Add();
}
::google::protobuf::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription >*
CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::mutable_descriptions() {
  // @@protoc_insertion_point(field_mutable_list:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions)
  return &descriptions_;
}
const ::google::protobuf::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription >&
CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::descriptions() const {
  // @@protoc_insertion_point(field_list:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions)
  return descriptions_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_PopulateItemDescriptions_Request::kAppidFieldNumber;
const int CWorkshop_PopulateItemDescriptions_Request::kLanguagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_PopulateItemDescriptions_Request::CWorkshop_PopulateItemDescriptions_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_PopulateItemDescriptions_Request)
}
CWorkshop_PopulateItemDescriptions_Request::CWorkshop_PopulateItemDescriptions_Request(const CWorkshop_PopulateItemDescriptions_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      languages_(from.languages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CWorkshop_PopulateItemDescriptions_Request)
}

void CWorkshop_PopulateItemDescriptions_Request::SharedCtor() {
  _cached_size_ = 0;
  appid_ = 0u;
}

CWorkshop_PopulateItemDescriptions_Request::~CWorkshop_PopulateItemDescriptions_Request() {
  // @@protoc_insertion_point(destructor:CWorkshop_PopulateItemDescriptions_Request)
  SharedDtor();
}

void CWorkshop_PopulateItemDescriptions_Request::SharedDtor() {
}

void CWorkshop_PopulateItemDescriptions_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_PopulateItemDescriptions_Request::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[29].descriptor;
}

const CWorkshop_PopulateItemDescriptions_Request& CWorkshop_PopulateItemDescriptions_Request::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CWorkshop_PopulateItemDescriptions_Request* CWorkshop_PopulateItemDescriptions_Request::New(::google::protobuf::Arena* arena) const {
  CWorkshop_PopulateItemDescriptions_Request* n = new CWorkshop_PopulateItemDescriptions_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_PopulateItemDescriptions_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_PopulateItemDescriptions_Request)
  languages_.Clear();
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_PopulateItemDescriptions_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_PopulateItemDescriptions_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (tag == 8u) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock languages = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_languages()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_PopulateItemDescriptions_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_PopulateItemDescriptions_Request)
  return false;
#undef DO_
}

void CWorkshop_PopulateItemDescriptions_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_PopulateItemDescriptions_Request)
  // optional uint32 appid = 1;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // repeated .CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock languages = 2;
  for (unsigned int i = 0, n = this->languages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->languages(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_PopulateItemDescriptions_Request)
}

::google::protobuf::uint8* CWorkshop_PopulateItemDescriptions_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_PopulateItemDescriptions_Request)
  // optional uint32 appid = 1;
  if (has_appid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // repeated .CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock languages = 2;
  for (unsigned int i = 0, n = this->languages_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->languages(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_PopulateItemDescriptions_Request)
  return target;
}

size_t CWorkshop_PopulateItemDescriptions_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_PopulateItemDescriptions_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock languages = 2;
  {
    unsigned int count = this->languages_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->languages(i));
    }
  }

  // optional uint32 appid = 1;
  if (has_appid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_PopulateItemDescriptions_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_PopulateItemDescriptions_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_PopulateItemDescriptions_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_PopulateItemDescriptions_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_PopulateItemDescriptions_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_PopulateItemDescriptions_Request)
    MergeFrom(*source);
  }
}

void CWorkshop_PopulateItemDescriptions_Request::MergeFrom(const CWorkshop_PopulateItemDescriptions_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_PopulateItemDescriptions_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  languages_.MergeFrom(from.languages_);
  if (from.has_appid()) {
    set_appid(from.appid());
  }
}

void CWorkshop_PopulateItemDescriptions_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_PopulateItemDescriptions_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_PopulateItemDescriptions_Request::CopyFrom(const CWorkshop_PopulateItemDescriptions_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_PopulateItemDescriptions_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_PopulateItemDescriptions_Request::IsInitialized() const {
  return true;
}

void CWorkshop_PopulateItemDescriptions_Request::Swap(CWorkshop_PopulateItemDescriptions_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_PopulateItemDescriptions_Request::InternalSwap(CWorkshop_PopulateItemDescriptions_Request* other) {
  languages_.UnsafeArenaSwap(&other->languages_);
  std::swap(appid_, other->appid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_PopulateItemDescriptions_Request::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[29];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CWorkshop_PopulateItemDescriptions_Request

// optional uint32 appid = 1;
bool CWorkshop_PopulateItemDescriptions_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CWorkshop_PopulateItemDescriptions_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void CWorkshop_PopulateItemDescriptions_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CWorkshop_PopulateItemDescriptions_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
::google::protobuf::uint32 CWorkshop_PopulateItemDescriptions_Request::appid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_PopulateItemDescriptions_Request.appid)
  return appid_;
}
void CWorkshop_PopulateItemDescriptions_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:CWorkshop_PopulateItemDescriptions_Request.appid)
}

// repeated .CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock languages = 2;
int CWorkshop_PopulateItemDescriptions_Request::languages_size() const {
  return languages_.size();
}
void CWorkshop_PopulateItemDescriptions_Request::clear_languages() {
  languages_.Clear();
}
const ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& CWorkshop_PopulateItemDescriptions_Request::languages(int index) const {
  // @@protoc_insertion_point(field_get:CWorkshop_PopulateItemDescriptions_Request.languages)
  return languages_.Get(index);
}
::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* CWorkshop_PopulateItemDescriptions_Request::mutable_languages(int index) {
  // @@protoc_insertion_point(field_mutable:CWorkshop_PopulateItemDescriptions_Request.languages)
  return languages_.Mutable(index);
}
::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* CWorkshop_PopulateItemDescriptions_Request::add_languages() {
  // @@protoc_insertion_point(field_add:CWorkshop_PopulateItemDescriptions_Request.languages)
  return languages_.Add();
}
::google::protobuf::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock >*
CWorkshop_PopulateItemDescriptions_Request::mutable_languages() {
  // @@protoc_insertion_point(field_mutable_list:CWorkshop_PopulateItemDescriptions_Request.languages)
  return &languages_;
}
const ::google::protobuf::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock >&
CWorkshop_PopulateItemDescriptions_Request::languages() const {
  // @@protoc_insertion_point(field_list:CWorkshop_PopulateItemDescriptions_Request.languages)
  return languages_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_GetContributors_Request::kAppidFieldNumber;
const int CWorkshop_GetContributors_Request::kGameitemidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_GetContributors_Request::CWorkshop_GetContributors_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_GetContributors_Request)
}
CWorkshop_GetContributors_Request::CWorkshop_GetContributors_Request(const CWorkshop_GetContributors_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&appid_, &from.appid_,
    reinterpret_cast<char*>(&gameitemid_) -
    reinterpret_cast<char*>(&appid_) + sizeof(gameitemid_));
  // @@protoc_insertion_point(copy_constructor:CWorkshop_GetContributors_Request)
}

void CWorkshop_GetContributors_Request::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&appid_, 0, reinterpret_cast<char*>(&gameitemid_) -
    reinterpret_cast<char*>(&appid_) + sizeof(gameitemid_));
}

CWorkshop_GetContributors_Request::~CWorkshop_GetContributors_Request() {
  // @@protoc_insertion_point(destructor:CWorkshop_GetContributors_Request)
  SharedDtor();
}

void CWorkshop_GetContributors_Request::SharedDtor() {
}

void CWorkshop_GetContributors_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_GetContributors_Request::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[30].descriptor;
}

const CWorkshop_GetContributors_Request& CWorkshop_GetContributors_Request::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CWorkshop_GetContributors_Request* CWorkshop_GetContributors_Request::New(::google::protobuf::Arena* arena) const {
  CWorkshop_GetContributors_Request* n = new CWorkshop_GetContributors_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_GetContributors_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_GetContributors_Request)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&appid_, 0, reinterpret_cast<char*>(&gameitemid_) -
      reinterpret_cast<char*>(&appid_) + sizeof(gameitemid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_GetContributors_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_GetContributors_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (tag == 8u) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gameitemid = 2;
      case 2: {
        if (tag == 16u) {
          set_has_gameitemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gameitemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_GetContributors_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_GetContributors_Request)
  return false;
#undef DO_
}

void CWorkshop_GetContributors_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_GetContributors_Request)
  // optional uint32 appid = 1;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 gameitemid = 2;
  if (has_gameitemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gameitemid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_GetContributors_Request)
}

::google::protobuf::uint8* CWorkshop_GetContributors_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_GetContributors_Request)
  // optional uint32 appid = 1;
  if (has_appid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 gameitemid = 2;
  if (has_gameitemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gameitemid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_GetContributors_Request)
  return target;
}

size_t CWorkshop_GetContributors_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_GetContributors_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 gameitemid = 2;
    if (has_gameitemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gameitemid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_GetContributors_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_GetContributors_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_GetContributors_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_GetContributors_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_GetContributors_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_GetContributors_Request)
    MergeFrom(*source);
  }
}

void CWorkshop_GetContributors_Request::MergeFrom(const CWorkshop_GetContributors_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_GetContributors_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_appid()) {
      set_appid(from.appid());
    }
    if (from.has_gameitemid()) {
      set_gameitemid(from.gameitemid());
    }
  }
}

void CWorkshop_GetContributors_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_GetContributors_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_GetContributors_Request::CopyFrom(const CWorkshop_GetContributors_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_GetContributors_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_GetContributors_Request::IsInitialized() const {
  return true;
}

void CWorkshop_GetContributors_Request::Swap(CWorkshop_GetContributors_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_GetContributors_Request::InternalSwap(CWorkshop_GetContributors_Request* other) {
  std::swap(appid_, other->appid_);
  std::swap(gameitemid_, other->gameitemid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_GetContributors_Request::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[30];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CWorkshop_GetContributors_Request

// optional uint32 appid = 1;
bool CWorkshop_GetContributors_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CWorkshop_GetContributors_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void CWorkshop_GetContributors_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CWorkshop_GetContributors_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
::google::protobuf::uint32 CWorkshop_GetContributors_Request::appid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetContributors_Request.appid)
  return appid_;
}
void CWorkshop_GetContributors_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:CWorkshop_GetContributors_Request.appid)
}

// optional uint32 gameitemid = 2;
bool CWorkshop_GetContributors_Request::has_gameitemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CWorkshop_GetContributors_Request::set_has_gameitemid() {
  _has_bits_[0] |= 0x00000002u;
}
void CWorkshop_GetContributors_Request::clear_has_gameitemid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CWorkshop_GetContributors_Request::clear_gameitemid() {
  gameitemid_ = 0u;
  clear_has_gameitemid();
}
::google::protobuf::uint32 CWorkshop_GetContributors_Request::gameitemid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetContributors_Request.gameitemid)
  return gameitemid_;
}
void CWorkshop_GetContributors_Request::set_gameitemid(::google::protobuf::uint32 value) {
  set_has_gameitemid();
  gameitemid_ = value;
  // @@protoc_insertion_point(field_set:CWorkshop_GetContributors_Request.gameitemid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_GetContributors_Response::kContributorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_GetContributors_Response::CWorkshop_GetContributors_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_GetContributors_Response)
}
CWorkshop_GetContributors_Response::CWorkshop_GetContributors_Response(const CWorkshop_GetContributors_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      contributors_(from.contributors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CWorkshop_GetContributors_Response)
}

void CWorkshop_GetContributors_Response::SharedCtor() {
  _cached_size_ = 0;
}

CWorkshop_GetContributors_Response::~CWorkshop_GetContributors_Response() {
  // @@protoc_insertion_point(destructor:CWorkshop_GetContributors_Response)
  SharedDtor();
}

void CWorkshop_GetContributors_Response::SharedDtor() {
}

void CWorkshop_GetContributors_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_GetContributors_Response::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[31].descriptor;
}

const CWorkshop_GetContributors_Response& CWorkshop_GetContributors_Response::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CWorkshop_GetContributors_Response* CWorkshop_GetContributors_Response::New(::google::protobuf::Arena* arena) const {
  CWorkshop_GetContributors_Response* n = new CWorkshop_GetContributors_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_GetContributors_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_GetContributors_Response)
  contributors_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_GetContributors_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_GetContributors_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 contributors = 1;
      case 1: {
        if (tag == 9u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 9u, input, this->mutable_contributors())));
        } else if (tag == 10u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_contributors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_GetContributors_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_GetContributors_Response)
  return false;
#undef DO_
}

void CWorkshop_GetContributors_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_GetContributors_Response)
  // repeated fixed64 contributors = 1;
  for (int i = 0; i < this->contributors_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      1, this->contributors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_GetContributors_Response)
}

::google::protobuf::uint8* CWorkshop_GetContributors_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_GetContributors_Response)
  // repeated fixed64 contributors = 1;
  for (int i = 0; i < this->contributors_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64ToArray(1, this->contributors(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_GetContributors_Response)
  return target;
}

size_t CWorkshop_GetContributors_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_GetContributors_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated fixed64 contributors = 1;
  {
    unsigned int count = this->contributors_size();
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->contributors_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_GetContributors_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_GetContributors_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_GetContributors_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_GetContributors_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_GetContributors_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_GetContributors_Response)
    MergeFrom(*source);
  }
}

void CWorkshop_GetContributors_Response::MergeFrom(const CWorkshop_GetContributors_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_GetContributors_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  contributors_.MergeFrom(from.contributors_);
}

void CWorkshop_GetContributors_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_GetContributors_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_GetContributors_Response::CopyFrom(const CWorkshop_GetContributors_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_GetContributors_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_GetContributors_Response::IsInitialized() const {
  return true;
}

void CWorkshop_GetContributors_Response::Swap(CWorkshop_GetContributors_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_GetContributors_Response::InternalSwap(CWorkshop_GetContributors_Response* other) {
  contributors_.UnsafeArenaSwap(&other->contributors_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_GetContributors_Response::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[31];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CWorkshop_GetContributors_Response

// repeated fixed64 contributors = 1;
int CWorkshop_GetContributors_Response::contributors_size() const {
  return contributors_.size();
}
void CWorkshop_GetContributors_Response::clear_contributors() {
  contributors_.Clear();
}
::google::protobuf::uint64 CWorkshop_GetContributors_Response::contributors(int index) const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetContributors_Response.contributors)
  return contributors_.Get(index);
}
void CWorkshop_GetContributors_Response::set_contributors(int index, ::google::protobuf::uint64 value) {
  contributors_.Set(index, value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetContributors_Response.contributors)
}
void CWorkshop_GetContributors_Response::add_contributors(::google::protobuf::uint64 value) {
  contributors_.Add(value);
  // @@protoc_insertion_point(field_add:CWorkshop_GetContributors_Response.contributors)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CWorkshop_GetContributors_Response::contributors() const {
  // @@protoc_insertion_point(field_list:CWorkshop_GetContributors_Response.contributors)
  return contributors_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CWorkshop_GetContributors_Response::mutable_contributors() {
  // @@protoc_insertion_point(field_mutable_list:CWorkshop_GetContributors_Response.contributors)
  return &contributors_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::kWorkshopFileIdFieldNumber;
const int CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::kRevenuePercentageFieldNumber;
const int CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::kRuleDescriptionFieldNumber;
const int CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::kRuleTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
}
CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule(const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rule_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rule_description()) {
    rule_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rule_description_);
  }
  ::memcpy(&workshop_file_id_, &from.workshop_file_id_,
    reinterpret_cast<char*>(&rule_type_) -
    reinterpret_cast<char*>(&workshop_file_id_) + sizeof(rule_type_));
  // @@protoc_insertion_point(copy_constructor:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::SharedCtor() {
  _cached_size_ = 0;
  rule_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&workshop_file_id_, 0, reinterpret_cast<char*>(&revenue_percentage_) -
    reinterpret_cast<char*>(&workshop_file_id_) + sizeof(revenue_percentage_));
  rule_type_ = 1u;
}

CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::~CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule() {
  // @@protoc_insertion_point(destructor:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  SharedDtor();
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::SharedDtor() {
  rule_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[32].descriptor;
}

const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::New(::google::protobuf::Arena* arena) const {
  CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* n = new CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  if (has_rule_description()) {
    GOOGLE_DCHECK(!rule_description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*rule_description_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&workshop_file_id_, 0, reinterpret_cast<char*>(&revenue_percentage_) -
      reinterpret_cast<char*>(&workshop_file_id_) + sizeof(revenue_percentage_));
    rule_type_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 workshop_file_id = 1;
      case 1: {
        if (tag == 8u) {
          set_has_workshop_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &workshop_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float revenue_percentage = 2;
      case 2: {
        if (tag == 21u) {
          set_has_revenue_percentage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &revenue_percentage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string rule_description = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rule_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rule_description().data(), this->rule_description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 rule_type = 4 [default = 1];
      case 4: {
        if (tag == 32u) {
          set_has_rule_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rule_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  return false;
#undef DO_
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  // optional uint64 workshop_file_id = 1;
  if (has_workshop_file_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->workshop_file_id(), output);
  }

  // optional float revenue_percentage = 2;
  if (has_revenue_percentage()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->revenue_percentage(), output);
  }

  // optional string rule_description = 3;
  if (has_rule_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rule_description().data(), this->rule_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rule_description(), output);
  }

  // optional uint32 rule_type = 4 [default = 1];
  if (has_rule_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->rule_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
}

::google::protobuf::uint8* CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  // optional uint64 workshop_file_id = 1;
  if (has_workshop_file_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->workshop_file_id(), target);
  }

  // optional float revenue_percentage = 2;
  if (has_revenue_percentage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->revenue_percentage(), target);
  }

  // optional string rule_description = 3;
  if (has_rule_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rule_description().data(), this->rule_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rule_description(), target);
  }

  // optional uint32 rule_type = 4 [default = 1];
  if (has_rule_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->rule_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  return target;
}

size_t CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string rule_description = 3;
    if (has_rule_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rule_description());
    }

    // optional uint64 workshop_file_id = 1;
    if (has_workshop_file_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->workshop_file_id());
    }

    // optional float revenue_percentage = 2;
    if (has_revenue_percentage()) {
      total_size += 1 + 4;
    }

    // optional uint32 rule_type = 4 [default = 1];
    if (has_rule_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rule_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
    MergeFrom(*source);
  }
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::MergeFrom(const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_rule_description()) {
      set_has_rule_description();
      rule_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rule_description_);
    }
    if (from.has_workshop_file_id()) {
      set_workshop_file_id(from.workshop_file_id());
    }
    if (from.has_revenue_percentage()) {
      set_revenue_percentage(from.revenue_percentage());
    }
    if (from.has_rule_type()) {
      set_rule_type(from.rule_type());
    }
  }
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::CopyFrom(const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::IsInitialized() const {
  return true;
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::Swap(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::InternalSwap(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* other) {
  rule_description_.Swap(&other->rule_description_);
  std::swap(workshop_file_id_, other->workshop_file_id_);
  std::swap(revenue_percentage_, other->revenue_percentage_);
  std::swap(rule_type_, other->rule_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[32];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule

// optional uint64 workshop_file_id = 1;
bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::has_workshop_file_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_has_workshop_file_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::clear_has_workshop_file_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::clear_workshop_file_id() {
  workshop_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_workshop_file_id();
}
::google::protobuf::uint64 CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::workshop_file_id() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.workshop_file_id)
  return workshop_file_id_;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_workshop_file_id(::google::protobuf::uint64 value) {
  set_has_workshop_file_id();
  workshop_file_id_ = value;
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.workshop_file_id)
}

// optional float revenue_percentage = 2;
bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::has_revenue_percentage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_has_revenue_percentage() {
  _has_bits_[0] |= 0x00000004u;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::clear_has_revenue_percentage() {
  _has_bits_[0] &= ~0x00000004u;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::clear_revenue_percentage() {
  revenue_percentage_ = 0;
  clear_has_revenue_percentage();
}
float CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::revenue_percentage() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.revenue_percentage)
  return revenue_percentage_;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_revenue_percentage(float value) {
  set_has_revenue_percentage();
  revenue_percentage_ = value;
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.revenue_percentage)
}

// optional string rule_description = 3;
bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::has_rule_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_has_rule_description() {
  _has_bits_[0] |= 0x00000001u;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::clear_has_rule_description() {
  _has_bits_[0] &= ~0x00000001u;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::clear_rule_description() {
  rule_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rule_description();
}
const ::std::string& CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::rule_description() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
  return rule_description_.GetNoArena();
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_rule_description(const ::std::string& value) {
  set_has_rule_description();
  rule_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
}
#if LANG_CXX11
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_rule_description(::std::string&& value) {
  set_has_rule_description();
  rule_description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
}
#endif
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_rule_description(const char* value) {
  set_has_rule_description();
  rule_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_rule_description(const char* value, size_t size) {
  set_has_rule_description();
  rule_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
}
::std::string* CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::mutable_rule_description() {
  set_has_rule_description();
  // @@protoc_insertion_point(field_mutable:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
  return rule_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::release_rule_description() {
  // @@protoc_insertion_point(field_release:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
  clear_has_rule_description();
  return rule_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_allocated_rule_description(::std::string* rule_description) {
  if (rule_description != NULL) {
    set_has_rule_description();
  } else {
    clear_has_rule_description();
  }
  rule_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rule_description);
  // @@protoc_insertion_point(field_set_allocated:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
}

// optional uint32 rule_type = 4 [default = 1];
bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::has_rule_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_has_rule_type() {
  _has_bits_[0] |= 0x00000008u;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::clear_has_rule_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::clear_rule_type() {
  rule_type_ = 1u;
  clear_has_rule_type();
}
::google::protobuf::uint32 CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::rule_type() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_type)
  return rule_type_;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_rule_type(::google::protobuf::uint32 value) {
  set_has_rule_type();
  rule_type_ = value;
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::kWorkshopFileIdFieldNumber;
const int CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::kRuleDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
}
CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule(const CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rule_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rule_description()) {
    rule_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rule_description_);
  }
  workshop_file_id_ = from.workshop_file_id_;
  // @@protoc_insertion_point(copy_constructor:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::SharedCtor() {
  _cached_size_ = 0;
  rule_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  workshop_file_id_ = GOOGLE_ULONGLONG(0);
}

CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::~CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule() {
  // @@protoc_insertion_point(destructor:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
  SharedDtor();
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::SharedDtor() {
  rule_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[33].descriptor;
}

const CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule& CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::New(::google::protobuf::Arena* arena) const {
  CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* n = new CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
  if (has_rule_description()) {
    GOOGLE_DCHECK(!rule_description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*rule_description_.UnsafeRawStringPointer())->clear();
  }
  workshop_file_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 workshop_file_id = 1;
      case 1: {
        if (tag == 8u) {
          set_has_workshop_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &workshop_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string rule_description = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rule_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rule_description().data(), this->rule_description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.rule_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
  return false;
#undef DO_
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
  // optional uint64 workshop_file_id = 1;
  if (has_workshop_file_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->workshop_file_id(), output);
  }

  // optional string rule_description = 2;
  if (has_rule_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rule_description().data(), this->rule_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.rule_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rule_description(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
}

::google::protobuf::uint8* CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
  // optional uint64 workshop_file_id = 1;
  if (has_workshop_file_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->workshop_file_id(), target);
  }

  // optional string rule_description = 2;
  if (has_rule_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rule_description().data(), this->rule_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.rule_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rule_description(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
  return target;
}

size_t CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string rule_description = 2;
    if (has_rule_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rule_description());
    }

    // optional uint64 workshop_file_id = 1;
    if (has_workshop_file_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->workshop_file_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
    MergeFrom(*source);
  }
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::MergeFrom(const CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_rule_description()) {
      set_has_rule_description();
      rule_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rule_description_);
    }
    if (from.has_workshop_file_id()) {
      set_workshop_file_id(from.workshop_file_id());
    }
  }
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::CopyFrom(const CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::IsInitialized() const {
  return true;
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::Swap(CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::InternalSwap(CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* other) {
  rule_description_.Swap(&other->rule_description_);
  std::swap(workshop_file_id_, other->workshop_file_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[33];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule

// optional uint64 workshop_file_id = 1;
bool CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::has_workshop_file_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::set_has_workshop_file_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::clear_has_workshop_file_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::clear_workshop_file_id() {
  workshop_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_workshop_file_id();
}
::google::protobuf::uint64 CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::workshop_file_id() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.workshop_file_id)
  return workshop_file_id_;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::set_workshop_file_id(::google::protobuf::uint64 value) {
  set_has_workshop_file_id();
  workshop_file_id_ = value;
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.workshop_file_id)
}

// optional string rule_description = 2;
bool CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::has_rule_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::set_has_rule_description() {
  _has_bits_[0] |= 0x00000001u;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::clear_has_rule_description() {
  _has_bits_[0] &= ~0x00000001u;
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::clear_rule_description() {
  rule_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rule_description();
}
const ::std::string& CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::rule_description() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.rule_description)
  return rule_description_.GetNoArena();
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::set_rule_description(const ::std::string& value) {
  set_has_rule_description();
  rule_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.rule_description)
}
#if LANG_CXX11
void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::set_rule_description(::std::string&& value) {
  set_has_rule_description();
  rule_description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.rule_description)
}
#endif
void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::set_rule_description(const char* value) {
  set_has_rule_description();
  rule_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.rule_description)
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::set_rule_description(const char* value, size_t size) {
  set_has_rule_description();
  rule_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.rule_description)
}
::std::string* CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::mutable_rule_description() {
  set_has_rule_description();
  // @@protoc_insertion_point(field_mutable:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.rule_description)
  return rule_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::release_rule_description() {
  // @@protoc_insertion_point(field_release:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.rule_description)
  clear_has_rule_description();
  return rule_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::set_allocated_rule_description(::std::string* rule_description) {
  if (rule_description != NULL) {
    set_has_rule_description();
  } else {
    clear_has_rule_description();
  }
  rule_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rule_description);
  // @@protoc_insertion_point(field_set_allocated:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.rule_description)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::kAccountIdFieldNumber;
const int CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::kRevenuePercentageFieldNumber;
const int CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::kRuleDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
}
CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule(const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rule_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rule_description()) {
    rule_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rule_description_);
  }
  ::memcpy(&account_id_, &from.account_id_,
    reinterpret_cast<char*>(&revenue_percentage_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(revenue_percentage_));
  // @@protoc_insertion_point(copy_constructor:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::SharedCtor() {
  _cached_size_ = 0;
  rule_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&account_id_, 0, reinterpret_cast<char*>(&revenue_percentage_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(revenue_percentage_));
}

CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::~CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule() {
  // @@protoc_insertion_point(destructor:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  SharedDtor();
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::SharedDtor() {
  rule_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[34].descriptor;
}

const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::New(::google::protobuf::Arena* arena) const {
  CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* n = new CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  if (has_rule_description()) {
    GOOGLE_DCHECK(!rule_description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*rule_description_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&account_id_, 0, reinterpret_cast<char*>(&revenue_percentage_) -
      reinterpret_cast<char*>(&account_id_) + sizeof(revenue_percentage_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (tag == 8u) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float revenue_percentage = 2;
      case 2: {
        if (tag == 21u) {
          set_has_revenue_percentage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &revenue_percentage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string rule_description = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rule_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rule_description().data(), this->rule_description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  return false;
#undef DO_
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional float revenue_percentage = 2;
  if (has_revenue_percentage()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->revenue_percentage(), output);
  }

  // optional string rule_description = 3;
  if (has_rule_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rule_description().data(), this->rule_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rule_description(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
}

::google::protobuf::uint8* CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional float revenue_percentage = 2;
  if (has_revenue_percentage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->revenue_percentage(), target);
  }

  // optional string rule_description = 3;
  if (has_rule_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rule_description().data(), this->rule_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rule_description(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  return target;
}

size_t CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string rule_description = 3;
    if (has_rule_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rule_description());
    }

    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional float revenue_percentage = 2;
    if (has_revenue_percentage()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
    MergeFrom(*source);
  }
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::MergeFrom(const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_rule_description()) {
      set_has_rule_description();
      rule_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rule_description_);
    }
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_revenue_percentage()) {
      set_revenue_percentage(from.revenue_percentage());
    }
  }
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::CopyFrom(const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::IsInitialized() const {
  return true;
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::Swap(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::InternalSwap(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* other) {
  rule_description_.Swap(&other->rule_description_);
  std::swap(account_id_, other->account_id_);
  std::swap(revenue_percentage_, other->revenue_percentage_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[34];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule

// optional uint32 account_id = 1;
bool CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
::google::protobuf::uint32 CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::account_id() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.account_id)
  return account_id_;
}
void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.account_id)
}

// optional float revenue_percentage = 2;
bool CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::has_revenue_percentage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_has_revenue_percentage() {
  _has_bits_[0] |= 0x00000004u;
}
void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::clear_has_revenue_percentage() {
  _has_bits_[0] &= ~0x00000004u;
}
void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::clear_revenue_percentage() {
  revenue_percentage_ = 0;
  clear_has_revenue_percentage();
}
float CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::revenue_percentage() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.revenue_percentage)
  return revenue_percentage_;
}
void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_revenue_percentage(float value) {
  set_has_revenue_percentage();
  revenue_percentage_ = value;
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.revenue_percentage)
}

// optional string rule_description = 3;
bool CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::has_rule_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_has_rule_description() {
  _has_bits_[0] |= 0x00000001u;
}
void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::clear_has_rule_description() {
  _has_bits_[0] &= ~0x00000001u;
}
void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::clear_rule_description() {
  rule_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rule_description();
}
const ::std::string& CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::rule_description() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
  return rule_description_.GetNoArena();
}
void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_rule_description(const ::std::string& value) {
  set_has_rule_description();
  rule_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
}
#if LANG_CXX11
void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_rule_description(::std::string&& value) {
  set_has_rule_description();
  rule_description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
}
#endif
void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_rule_description(const char* value) {
  set_has_rule_description();
  rule_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
}
void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_rule_description(const char* value, size_t size) {
  set_has_rule_description();
  rule_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
}
::std::string* CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::mutable_rule_description() {
  set_has_rule_description();
  // @@protoc_insertion_point(field_mutable:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
  return rule_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::release_rule_description() {
  // @@protoc_insertion_point(field_release:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
  clear_has_rule_description();
  return rule_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_allocated_rule_description(::std::string* rule_description) {
  if (rule_description != NULL) {
    set_has_rule_description();
  } else {
    clear_has_rule_description();
  }
  rule_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rule_description);
  // @@protoc_insertion_point(field_set_allocated:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_SetItemPaymentRules_Request::kAppidFieldNumber;
const int CWorkshop_SetItemPaymentRules_Request::kGameitemidFieldNumber;
const int CWorkshop_SetItemPaymentRules_Request::kAssociatedWorkshopFilesFieldNumber;
const int CWorkshop_SetItemPaymentRules_Request::kPartnerAccountsFieldNumber;
const int CWorkshop_SetItemPaymentRules_Request::kValidateOnlyFieldNumber;
const int CWorkshop_SetItemPaymentRules_Request::kMakeWorkshopFilesSubscribableFieldNumber;
const int CWorkshop_SetItemPaymentRules_Request::kAssociatedWorkshopFileForDirectPaymentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_SetItemPaymentRules_Request::CWorkshop_SetItemPaymentRules_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_SetItemPaymentRules_Request)
}
CWorkshop_SetItemPaymentRules_Request::CWorkshop_SetItemPaymentRules_Request(const CWorkshop_SetItemPaymentRules_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      associated_workshop_files_(from.associated_workshop_files_),
      partner_accounts_(from.partner_accounts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_associated_workshop_file_for_direct_payments()) {
    associated_workshop_file_for_direct_payments_ = new ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule(*from.associated_workshop_file_for_direct_payments_);
  } else {
    associated_workshop_file_for_direct_payments_ = NULL;
  }
  ::memcpy(&appid_, &from.appid_,
    reinterpret_cast<char*>(&make_workshop_files_subscribable_) -
    reinterpret_cast<char*>(&appid_) + sizeof(make_workshop_files_subscribable_));
  // @@protoc_insertion_point(copy_constructor:CWorkshop_SetItemPaymentRules_Request)
}

void CWorkshop_SetItemPaymentRules_Request::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&associated_workshop_file_for_direct_payments_, 0, reinterpret_cast<char*>(&make_workshop_files_subscribable_) -
    reinterpret_cast<char*>(&associated_workshop_file_for_direct_payments_) + sizeof(make_workshop_files_subscribable_));
}

CWorkshop_SetItemPaymentRules_Request::~CWorkshop_SetItemPaymentRules_Request() {
  // @@protoc_insertion_point(destructor:CWorkshop_SetItemPaymentRules_Request)
  SharedDtor();
}

void CWorkshop_SetItemPaymentRules_Request::SharedDtor() {
  if (this != internal_default_instance()) {
    delete associated_workshop_file_for_direct_payments_;
  }
}

void CWorkshop_SetItemPaymentRules_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_SetItemPaymentRules_Request::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[35].descriptor;
}

const CWorkshop_SetItemPaymentRules_Request& CWorkshop_SetItemPaymentRules_Request::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CWorkshop_SetItemPaymentRules_Request* CWorkshop_SetItemPaymentRules_Request::New(::google::protobuf::Arena* arena) const {
  CWorkshop_SetItemPaymentRules_Request* n = new CWorkshop_SetItemPaymentRules_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_SetItemPaymentRules_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_SetItemPaymentRules_Request)
  associated_workshop_files_.Clear();
  partner_accounts_.Clear();
  if (has_associated_workshop_file_for_direct_payments()) {
    GOOGLE_DCHECK(associated_workshop_file_for_direct_payments_ != NULL);
    associated_workshop_file_for_direct_payments_->::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::Clear();
  }
  if (_has_bits_[0 / 32] & 30u) {
    ::memset(&appid_, 0, reinterpret_cast<char*>(&make_workshop_files_subscribable_) -
      reinterpret_cast<char*>(&appid_) + sizeof(make_workshop_files_subscribable_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_SetItemPaymentRules_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_SetItemPaymentRules_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (tag == 8u) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gameitemid = 2;
      case 2: {
        if (tag == 16u) {
          set_has_gameitemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gameitemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule associated_workshop_files = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_associated_workshop_files()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule partner_accounts = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_partner_accounts()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional bool validate_only = 5;
      case 5: {
        if (tag == 40u) {
          set_has_validate_only();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &validate_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool make_workshop_files_subscribable = 6;
      case 6: {
        if (tag == 48u) {
          set_has_make_workshop_files_subscribable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &make_workshop_files_subscribable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule associated_workshop_file_for_direct_payments = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_associated_workshop_file_for_direct_payments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_SetItemPaymentRules_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_SetItemPaymentRules_Request)
  return false;
#undef DO_
}

void CWorkshop_SetItemPaymentRules_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_SetItemPaymentRules_Request)
  // optional uint32 appid = 1;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 gameitemid = 2;
  if (has_gameitemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gameitemid(), output);
  }

  // repeated .CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule associated_workshop_files = 3;
  for (unsigned int i = 0, n = this->associated_workshop_files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->associated_workshop_files(i), output);
  }

  // repeated .CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule partner_accounts = 4;
  for (unsigned int i = 0, n = this->partner_accounts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->partner_accounts(i), output);
  }

  // optional bool validate_only = 5;
  if (has_validate_only()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->validate_only(), output);
  }

  // optional bool make_workshop_files_subscribable = 6;
  if (has_make_workshop_files_subscribable()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->make_workshop_files_subscribable(), output);
  }

  // optional .CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule associated_workshop_file_for_direct_payments = 7;
  if (has_associated_workshop_file_for_direct_payments()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->associated_workshop_file_for_direct_payments_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_SetItemPaymentRules_Request)
}

::google::protobuf::uint8* CWorkshop_SetItemPaymentRules_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_SetItemPaymentRules_Request)
  // optional uint32 appid = 1;
  if (has_appid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 gameitemid = 2;
  if (has_gameitemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gameitemid(), target);
  }

  // repeated .CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule associated_workshop_files = 3;
  for (unsigned int i = 0, n = this->associated_workshop_files_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->associated_workshop_files(i), false, target);
  }

  // repeated .CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule partner_accounts = 4;
  for (unsigned int i = 0, n = this->partner_accounts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->partner_accounts(i), false, target);
  }

  // optional bool validate_only = 5;
  if (has_validate_only()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->validate_only(), target);
  }

  // optional bool make_workshop_files_subscribable = 6;
  if (has_make_workshop_files_subscribable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->make_workshop_files_subscribable(), target);
  }

  // optional .CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule associated_workshop_file_for_direct_payments = 7;
  if (has_associated_workshop_file_for_direct_payments()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->associated_workshop_file_for_direct_payments_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_SetItemPaymentRules_Request)
  return target;
}

size_t CWorkshop_SetItemPaymentRules_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_SetItemPaymentRules_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule associated_workshop_files = 3;
  {
    unsigned int count = this->associated_workshop_files_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->associated_workshop_files(i));
    }
  }

  // repeated .CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule partner_accounts = 4;
  {
    unsigned int count = this->partner_accounts_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->partner_accounts(i));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional .CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule associated_workshop_file_for_direct_payments = 7;
    if (has_associated_workshop_file_for_direct_payments()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->associated_workshop_file_for_direct_payments_);
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 gameitemid = 2;
    if (has_gameitemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gameitemid());
    }

    // optional bool validate_only = 5;
    if (has_validate_only()) {
      total_size += 1 + 1;
    }

    // optional bool make_workshop_files_subscribable = 6;
    if (has_make_workshop_files_subscribable()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_SetItemPaymentRules_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_SetItemPaymentRules_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_SetItemPaymentRules_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_SetItemPaymentRules_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_SetItemPaymentRules_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_SetItemPaymentRules_Request)
    MergeFrom(*source);
  }
}

void CWorkshop_SetItemPaymentRules_Request::MergeFrom(const CWorkshop_SetItemPaymentRules_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_SetItemPaymentRules_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  associated_workshop_files_.MergeFrom(from.associated_workshop_files_);
  partner_accounts_.MergeFrom(from.partner_accounts_);
  if (from._has_bits_[0 / 32] & 31u) {
    if (from.has_associated_workshop_file_for_direct_payments()) {
      mutable_associated_workshop_file_for_direct_payments()->::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::MergeFrom(from.associated_workshop_file_for_direct_payments());
    }
    if (from.has_appid()) {
      set_appid(from.appid());
    }
    if (from.has_gameitemid()) {
      set_gameitemid(from.gameitemid());
    }
    if (from.has_validate_only()) {
      set_validate_only(from.validate_only());
    }
    if (from.has_make_workshop_files_subscribable()) {
      set_make_workshop_files_subscribable(from.make_workshop_files_subscribable());
    }
  }
}

void CWorkshop_SetItemPaymentRules_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_SetItemPaymentRules_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_SetItemPaymentRules_Request::CopyFrom(const CWorkshop_SetItemPaymentRules_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_SetItemPaymentRules_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_SetItemPaymentRules_Request::IsInitialized() const {
  return true;
}

void CWorkshop_SetItemPaymentRules_Request::Swap(CWorkshop_SetItemPaymentRules_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_SetItemPaymentRules_Request::InternalSwap(CWorkshop_SetItemPaymentRules_Request* other) {
  associated_workshop_files_.UnsafeArenaSwap(&other->associated_workshop_files_);
  partner_accounts_.UnsafeArenaSwap(&other->partner_accounts_);
  std::swap(associated_workshop_file_for_direct_payments_, other->associated_workshop_file_for_direct_payments_);
  std::swap(appid_, other->appid_);
  std::swap(gameitemid_, other->gameitemid_);
  std::swap(validate_only_, other->validate_only_);
  std::swap(make_workshop_files_subscribable_, other->make_workshop_files_subscribable_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_SetItemPaymentRules_Request::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[35];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CWorkshop_SetItemPaymentRules_Request

// optional uint32 appid = 1;
bool CWorkshop_SetItemPaymentRules_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CWorkshop_SetItemPaymentRules_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
void CWorkshop_SetItemPaymentRules_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CWorkshop_SetItemPaymentRules_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
::google::protobuf::uint32 CWorkshop_SetItemPaymentRules_Request::appid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.appid)
  return appid_;
}
void CWorkshop_SetItemPaymentRules_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.appid)
}

// optional uint32 gameitemid = 2;
bool CWorkshop_SetItemPaymentRules_Request::has_gameitemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CWorkshop_SetItemPaymentRules_Request::set_has_gameitemid() {
  _has_bits_[0] |= 0x00000004u;
}
void CWorkshop_SetItemPaymentRules_Request::clear_has_gameitemid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CWorkshop_SetItemPaymentRules_Request::clear_gameitemid() {
  gameitemid_ = 0u;
  clear_has_gameitemid();
}
::google::protobuf::uint32 CWorkshop_SetItemPaymentRules_Request::gameitemid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.gameitemid)
  return gameitemid_;
}
void CWorkshop_SetItemPaymentRules_Request::set_gameitemid(::google::protobuf::uint32 value) {
  set_has_gameitemid();
  gameitemid_ = value;
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.gameitemid)
}

// repeated .CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule associated_workshop_files = 3;
int CWorkshop_SetItemPaymentRules_Request::associated_workshop_files_size() const {
  return associated_workshop_files_.size();
}
void CWorkshop_SetItemPaymentRules_Request::clear_associated_workshop_files() {
  associated_workshop_files_.Clear();
}
const ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& CWorkshop_SetItemPaymentRules_Request::associated_workshop_files(int index) const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.associated_workshop_files)
  return associated_workshop_files_.Get(index);
}
::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* CWorkshop_SetItemPaymentRules_Request::mutable_associated_workshop_files(int index) {
  // @@protoc_insertion_point(field_mutable:CWorkshop_SetItemPaymentRules_Request.associated_workshop_files)
  return associated_workshop_files_.Mutable(index);
}
::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* CWorkshop_SetItemPaymentRules_Request::add_associated_workshop_files() {
  // @@protoc_insertion_point(field_add:CWorkshop_SetItemPaymentRules_Request.associated_workshop_files)
  return associated_workshop_files_.Add();
}
::google::protobuf::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule >*
CWorkshop_SetItemPaymentRules_Request::mutable_associated_workshop_files() {
  // @@protoc_insertion_point(field_mutable_list:CWorkshop_SetItemPaymentRules_Request.associated_workshop_files)
  return &associated_workshop_files_;
}
const ::google::protobuf::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule >&
CWorkshop_SetItemPaymentRules_Request::associated_workshop_files() const {
  // @@protoc_insertion_point(field_list:CWorkshop_SetItemPaymentRules_Request.associated_workshop_files)
  return associated_workshop_files_;
}

// repeated .CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule partner_accounts = 4;
int CWorkshop_SetItemPaymentRules_Request::partner_accounts_size() const {
  return partner_accounts_.size();
}
void CWorkshop_SetItemPaymentRules_Request::clear_partner_accounts() {
  partner_accounts_.Clear();
}
const ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& CWorkshop_SetItemPaymentRules_Request::partner_accounts(int index) const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.partner_accounts)
  return partner_accounts_.Get(index);
}
::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* CWorkshop_SetItemPaymentRules_Request::mutable_partner_accounts(int index) {
  // @@protoc_insertion_point(field_mutable:CWorkshop_SetItemPaymentRules_Request.partner_accounts)
  return partner_accounts_.Mutable(index);
}
::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* CWorkshop_SetItemPaymentRules_Request::add_partner_accounts() {
  // @@protoc_insertion_point(field_add:CWorkshop_SetItemPaymentRules_Request.partner_accounts)
  return partner_accounts_.Add();
}
::google::protobuf::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule >*
CWorkshop_SetItemPaymentRules_Request::mutable_partner_accounts() {
  // @@protoc_insertion_point(field_mutable_list:CWorkshop_SetItemPaymentRules_Request.partner_accounts)
  return &partner_accounts_;
}
const ::google::protobuf::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule >&
CWorkshop_SetItemPaymentRules_Request::partner_accounts() const {
  // @@protoc_insertion_point(field_list:CWorkshop_SetItemPaymentRules_Request.partner_accounts)
  return partner_accounts_;
}

// optional bool validate_only = 5;
bool CWorkshop_SetItemPaymentRules_Request::has_validate_only() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CWorkshop_SetItemPaymentRules_Request::set_has_validate_only() {
  _has_bits_[0] |= 0x00000008u;
}
void CWorkshop_SetItemPaymentRules_Request::clear_has_validate_only() {
  _has_bits_[0] &= ~0x00000008u;
}
void CWorkshop_SetItemPaymentRules_Request::clear_validate_only() {
  validate_only_ = false;
  clear_has_validate_only();
}
bool CWorkshop_SetItemPaymentRules_Request::validate_only() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.validate_only)
  return validate_only_;
}
void CWorkshop_SetItemPaymentRules_Request::set_validate_only(bool value) {
  set_has_validate_only();
  validate_only_ = value;
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.validate_only)
}

// optional bool make_workshop_files_subscribable = 6;
bool CWorkshop_SetItemPaymentRules_Request::has_make_workshop_files_subscribable() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CWorkshop_SetItemPaymentRules_Request::set_has_make_workshop_files_subscribable() {
  _has_bits_[0] |= 0x00000010u;
}
void CWorkshop_SetItemPaymentRules_Request::clear_has_make_workshop_files_subscribable() {
  _has_bits_[0] &= ~0x00000010u;
}
void CWorkshop_SetItemPaymentRules_Request::clear_make_workshop_files_subscribable() {
  make_workshop_files_subscribable_ = false;
  clear_has_make_workshop_files_subscribable();
}
bool CWorkshop_SetItemPaymentRules_Request::make_workshop_files_subscribable() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.make_workshop_files_subscribable)
  return make_workshop_files_subscribable_;
}
void CWorkshop_SetItemPaymentRules_Request::set_make_workshop_files_subscribable(bool value) {
  set_has_make_workshop_files_subscribable();
  make_workshop_files_subscribable_ = value;
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.make_workshop_files_subscribable)
}

// optional .CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule associated_workshop_file_for_direct_payments = 7;
bool CWorkshop_SetItemPaymentRules_Request::has_associated_workshop_file_for_direct_payments() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CWorkshop_SetItemPaymentRules_Request::set_has_associated_workshop_file_for_direct_payments() {
  _has_bits_[0] |= 0x00000001u;
}
void CWorkshop_SetItemPaymentRules_Request::clear_has_associated_workshop_file_for_direct_payments() {
  _has_bits_[0] &= ~0x00000001u;
}
void CWorkshop_SetItemPaymentRules_Request::clear_associated_workshop_file_for_direct_payments() {
  if (associated_workshop_file_for_direct_payments_ != NULL) associated_workshop_file_for_direct_payments_->::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::Clear();
  clear_has_associated_workshop_file_for_direct_payments();
}
const ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule& CWorkshop_SetItemPaymentRules_Request::associated_workshop_file_for_direct_payments() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.associated_workshop_file_for_direct_payments)
  return associated_workshop_file_for_direct_payments_ != NULL ? *associated_workshop_file_for_direct_payments_
                         : *::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::internal_default_instance();
}
::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* CWorkshop_SetItemPaymentRules_Request::mutable_associated_workshop_file_for_direct_payments() {
  set_has_associated_workshop_file_for_direct_payments();
  if (associated_workshop_file_for_direct_payments_ == NULL) {
    associated_workshop_file_for_direct_payments_ = new ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule;
  }
  // @@protoc_insertion_point(field_mutable:CWorkshop_SetItemPaymentRules_Request.associated_workshop_file_for_direct_payments)
  return associated_workshop_file_for_direct_payments_;
}
::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* CWorkshop_SetItemPaymentRules_Request::release_associated_workshop_file_for_direct_payments() {
  // @@protoc_insertion_point(field_release:CWorkshop_SetItemPaymentRules_Request.associated_workshop_file_for_direct_payments)
  clear_has_associated_workshop_file_for_direct_payments();
  ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* temp = associated_workshop_file_for_direct_payments_;
  associated_workshop_file_for_direct_payments_ = NULL;
  return temp;
}
void CWorkshop_SetItemPaymentRules_Request::set_allocated_associated_workshop_file_for_direct_payments(::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* associated_workshop_file_for_direct_payments) {
  delete associated_workshop_file_for_direct_payments_;
  associated_workshop_file_for_direct_payments_ = associated_workshop_file_for_direct_payments;
  if (associated_workshop_file_for_direct_payments) {
    set_has_associated_workshop_file_for_direct_payments();
  } else {
    clear_has_associated_workshop_file_for_direct_payments();
  }
  // @@protoc_insertion_point(field_set_allocated:CWorkshop_SetItemPaymentRules_Request.associated_workshop_file_for_direct_payments)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_SetItemPaymentRules_Response::CWorkshop_SetItemPaymentRules_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_SetItemPaymentRules_Response)
}
CWorkshop_SetItemPaymentRules_Response::CWorkshop_SetItemPaymentRules_Response(const CWorkshop_SetItemPaymentRules_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CWorkshop_SetItemPaymentRules_Response)
}

void CWorkshop_SetItemPaymentRules_Response::SharedCtor() {
  _cached_size_ = 0;
}

CWorkshop_SetItemPaymentRules_Response::~CWorkshop_SetItemPaymentRules_Response() {
  // @@protoc_insertion_point(destructor:CWorkshop_SetItemPaymentRules_Response)
  SharedDtor();
}

void CWorkshop_SetItemPaymentRules_Response::SharedDtor() {
}

void CWorkshop_SetItemPaymentRules_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_SetItemPaymentRules_Response::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[36].descriptor;
}

const CWorkshop_SetItemPaymentRules_Response& CWorkshop_SetItemPaymentRules_Response::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CWorkshop_SetItemPaymentRules_Response* CWorkshop_SetItemPaymentRules_Response::New(::google::protobuf::Arena* arena) const {
  CWorkshop_SetItemPaymentRules_Response* n = new CWorkshop_SetItemPaymentRules_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_SetItemPaymentRules_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_SetItemPaymentRules_Response)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_SetItemPaymentRules_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_SetItemPaymentRules_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_SetItemPaymentRules_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_SetItemPaymentRules_Response)
  return false;
#undef DO_
}

void CWorkshop_SetItemPaymentRules_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_SetItemPaymentRules_Response)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_SetItemPaymentRules_Response)
}

::google::protobuf::uint8* CWorkshop_SetItemPaymentRules_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_SetItemPaymentRules_Response)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_SetItemPaymentRules_Response)
  return target;
}

size_t CWorkshop_SetItemPaymentRules_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_SetItemPaymentRules_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_SetItemPaymentRules_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_SetItemPaymentRules_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_SetItemPaymentRules_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_SetItemPaymentRules_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_SetItemPaymentRules_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_SetItemPaymentRules_Response)
    MergeFrom(*source);
  }
}

void CWorkshop_SetItemPaymentRules_Response::MergeFrom(const CWorkshop_SetItemPaymentRules_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_SetItemPaymentRules_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void CWorkshop_SetItemPaymentRules_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_SetItemPaymentRules_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_SetItemPaymentRules_Response::CopyFrom(const CWorkshop_SetItemPaymentRules_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_SetItemPaymentRules_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_SetItemPaymentRules_Response::IsInitialized() const {
  return true;
}

void CWorkshop_SetItemPaymentRules_Response::Swap(CWorkshop_SetItemPaymentRules_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_SetItemPaymentRules_Response::InternalSwap(CWorkshop_SetItemPaymentRules_Response* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_SetItemPaymentRules_Response::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[36];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CWorkshop_SetItemPaymentRules_Response

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGameServers_AggregationQuery_Request::kFilterFieldNumber;
const int CGameServers_AggregationQuery_Request::kGroupFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGameServers_AggregationQuery_Request::CGameServers_AggregationQuery_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGameServers_AggregationQuery_Request)
}
CGameServers_AggregationQuery_Request::CGameServers_AggregationQuery_Request(const CGameServers_AggregationQuery_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      group_fields_(from.group_fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filter()) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  // @@protoc_insertion_point(copy_constructor:CGameServers_AggregationQuery_Request)
}

void CGameServers_AggregationQuery_Request::SharedCtor() {
  _cached_size_ = 0;
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CGameServers_AggregationQuery_Request::~CGameServers_AggregationQuery_Request() {
  // @@protoc_insertion_point(destructor:CGameServers_AggregationQuery_Request)
  SharedDtor();
}

void CGameServers_AggregationQuery_Request::SharedDtor() {
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CGameServers_AggregationQuery_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGameServers_AggregationQuery_Request::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[37].descriptor;
}

const CGameServers_AggregationQuery_Request& CGameServers_AggregationQuery_Request::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CGameServers_AggregationQuery_Request* CGameServers_AggregationQuery_Request::New(::google::protobuf::Arena* arena) const {
  CGameServers_AggregationQuery_Request* n = new CGameServers_AggregationQuery_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGameServers_AggregationQuery_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CGameServers_AggregationQuery_Request)
  group_fields_.Clear();
  if (has_filter()) {
    GOOGLE_DCHECK(!filter_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*filter_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGameServers_AggregationQuery_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGameServers_AggregationQuery_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filter = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filter().data(), this->filter().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CGameServers_AggregationQuery_Request.filter");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string group_fields = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_group_fields()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_fields(this->group_fields_size() - 1).data(),
            this->group_fields(this->group_fields_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CGameServers_AggregationQuery_Request.group_fields");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGameServers_AggregationQuery_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGameServers_AggregationQuery_Request)
  return false;
#undef DO_
}

void CGameServers_AggregationQuery_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGameServers_AggregationQuery_Request)
  // optional string filter = 1;
  if (has_filter()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGameServers_AggregationQuery_Request.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filter(), output);
  }

  // repeated string group_fields = 3;
  for (int i = 0; i < this->group_fields_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_fields(i).data(), this->group_fields(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGameServers_AggregationQuery_Request.group_fields");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->group_fields(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGameServers_AggregationQuery_Request)
}

::google::protobuf::uint8* CGameServers_AggregationQuery_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGameServers_AggregationQuery_Request)
  // optional string filter = 1;
  if (has_filter()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGameServers_AggregationQuery_Request.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filter(), target);
  }

  // repeated string group_fields = 3;
  for (int i = 0; i < this->group_fields_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_fields(i).data(), this->group_fields(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGameServers_AggregationQuery_Request.group_fields");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->group_fields(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGameServers_AggregationQuery_Request)
  return target;
}

size_t CGameServers_AggregationQuery_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGameServers_AggregationQuery_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated string group_fields = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->group_fields_size());
  for (int i = 0; i < this->group_fields_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->group_fields(i));
  }

  // optional string filter = 1;
  if (has_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGameServers_AggregationQuery_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGameServers_AggregationQuery_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CGameServers_AggregationQuery_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGameServers_AggregationQuery_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGameServers_AggregationQuery_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGameServers_AggregationQuery_Request)
    MergeFrom(*source);
  }
}

void CGameServers_AggregationQuery_Request::MergeFrom(const CGameServers_AggregationQuery_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGameServers_AggregationQuery_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_fields_.MergeFrom(from.group_fields_);
  if (from.has_filter()) {
    set_has_filter();
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
}

void CGameServers_AggregationQuery_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGameServers_AggregationQuery_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGameServers_AggregationQuery_Request::CopyFrom(const CGameServers_AggregationQuery_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGameServers_AggregationQuery_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGameServers_AggregationQuery_Request::IsInitialized() const {
  return true;
}

void CGameServers_AggregationQuery_Request::Swap(CGameServers_AggregationQuery_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGameServers_AggregationQuery_Request::InternalSwap(CGameServers_AggregationQuery_Request* other) {
  group_fields_.UnsafeArenaSwap(&other->group_fields_);
  filter_.Swap(&other->filter_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGameServers_AggregationQuery_Request::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[37];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGameServers_AggregationQuery_Request

// optional string filter = 1;
bool CGameServers_AggregationQuery_Request::has_filter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGameServers_AggregationQuery_Request::set_has_filter() {
  _has_bits_[0] |= 0x00000001u;
}
void CGameServers_AggregationQuery_Request::clear_has_filter() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGameServers_AggregationQuery_Request::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filter();
}
const ::std::string& CGameServers_AggregationQuery_Request::filter() const {
  // @@protoc_insertion_point(field_get:CGameServers_AggregationQuery_Request.filter)
  return filter_.GetNoArena();
}
void CGameServers_AggregationQuery_Request::set_filter(const ::std::string& value) {
  set_has_filter();
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGameServers_AggregationQuery_Request.filter)
}
#if LANG_CXX11
void CGameServers_AggregationQuery_Request::set_filter(::std::string&& value) {
  set_has_filter();
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CGameServers_AggregationQuery_Request.filter)
}
#endif
void CGameServers_AggregationQuery_Request::set_filter(const char* value) {
  set_has_filter();
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGameServers_AggregationQuery_Request.filter)
}
void CGameServers_AggregationQuery_Request::set_filter(const char* value, size_t size) {
  set_has_filter();
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGameServers_AggregationQuery_Request.filter)
}
::std::string* CGameServers_AggregationQuery_Request::mutable_filter() {
  set_has_filter();
  // @@protoc_insertion_point(field_mutable:CGameServers_AggregationQuery_Request.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CGameServers_AggregationQuery_Request::release_filter() {
  // @@protoc_insertion_point(field_release:CGameServers_AggregationQuery_Request.filter)
  clear_has_filter();
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CGameServers_AggregationQuery_Request::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    set_has_filter();
  } else {
    clear_has_filter();
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:CGameServers_AggregationQuery_Request.filter)
}

// repeated string group_fields = 3;
int CGameServers_AggregationQuery_Request::group_fields_size() const {
  return group_fields_.size();
}
void CGameServers_AggregationQuery_Request::clear_group_fields() {
  group_fields_.Clear();
}
const ::std::string& CGameServers_AggregationQuery_Request::group_fields(int index) const {
  // @@protoc_insertion_point(field_get:CGameServers_AggregationQuery_Request.group_fields)
  return group_fields_.Get(index);
}
::std::string* CGameServers_AggregationQuery_Request::mutable_group_fields(int index) {
  // @@protoc_insertion_point(field_mutable:CGameServers_AggregationQuery_Request.group_fields)
  return group_fields_.Mutable(index);
}
void CGameServers_AggregationQuery_Request::set_group_fields(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CGameServers_AggregationQuery_Request.group_fields)
  group_fields_.Mutable(index)->assign(value);
}
void CGameServers_AggregationQuery_Request::set_group_fields(int index, const char* value) {
  group_fields_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CGameServers_AggregationQuery_Request.group_fields)
}
void CGameServers_AggregationQuery_Request::set_group_fields(int index, const char* value, size_t size) {
  group_fields_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGameServers_AggregationQuery_Request.group_fields)
}
::std::string* CGameServers_AggregationQuery_Request::add_group_fields() {
  // @@protoc_insertion_point(field_add_mutable:CGameServers_AggregationQuery_Request.group_fields)
  return group_fields_.Add();
}
void CGameServers_AggregationQuery_Request::add_group_fields(const ::std::string& value) {
  group_fields_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CGameServers_AggregationQuery_Request.group_fields)
}
void CGameServers_AggregationQuery_Request::add_group_fields(const char* value) {
  group_fields_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CGameServers_AggregationQuery_Request.group_fields)
}
void CGameServers_AggregationQuery_Request::add_group_fields(const char* value, size_t size) {
  group_fields_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CGameServers_AggregationQuery_Request.group_fields)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CGameServers_AggregationQuery_Request::group_fields() const {
  // @@protoc_insertion_point(field_list:CGameServers_AggregationQuery_Request.group_fields)
  return group_fields_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CGameServers_AggregationQuery_Request::mutable_group_fields() {
  // @@protoc_insertion_point(field_mutable_list:CGameServers_AggregationQuery_Request.group_fields)
  return &group_fields_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGameServers_AggregationQuery_Response_Group::kGroupValuesFieldNumber;
const int CGameServers_AggregationQuery_Response_Group::kServersEmptyFieldNumber;
const int CGameServers_AggregationQuery_Response_Group::kServersFullFieldNumber;
const int CGameServers_AggregationQuery_Response_Group::kServersTotalFieldNumber;
const int CGameServers_AggregationQuery_Response_Group::kPlayersHumansFieldNumber;
const int CGameServers_AggregationQuery_Response_Group::kPlayersBotsFieldNumber;
const int CGameServers_AggregationQuery_Response_Group::kPlayerCapacityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGameServers_AggregationQuery_Response_Group::CGameServers_AggregationQuery_Response_Group()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGameServers_AggregationQuery_Response.Group)
}
CGameServers_AggregationQuery_Response_Group::CGameServers_AggregationQuery_Response_Group(const CGameServers_AggregationQuery_Response_Group& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      group_values_(from.group_values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&servers_empty_, &from.servers_empty_,
    reinterpret_cast<char*>(&player_capacity_) -
    reinterpret_cast<char*>(&servers_empty_) + sizeof(player_capacity_));
  // @@protoc_insertion_point(copy_constructor:CGameServers_AggregationQuery_Response.Group)
}

void CGameServers_AggregationQuery_Response_Group::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&servers_empty_, 0, reinterpret_cast<char*>(&player_capacity_) -
    reinterpret_cast<char*>(&servers_empty_) + sizeof(player_capacity_));
}

CGameServers_AggregationQuery_Response_Group::~CGameServers_AggregationQuery_Response_Group() {
  // @@protoc_insertion_point(destructor:CGameServers_AggregationQuery_Response.Group)
  SharedDtor();
}

void CGameServers_AggregationQuery_Response_Group::SharedDtor() {
}

void CGameServers_AggregationQuery_Response_Group::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGameServers_AggregationQuery_Response_Group::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[38].descriptor;
}

const CGameServers_AggregationQuery_Response_Group& CGameServers_AggregationQuery_Response_Group::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CGameServers_AggregationQuery_Response_Group* CGameServers_AggregationQuery_Response_Group::New(::google::protobuf::Arena* arena) const {
  CGameServers_AggregationQuery_Response_Group* n = new CGameServers_AggregationQuery_Response_Group;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGameServers_AggregationQuery_Response_Group::Clear() {
// @@protoc_insertion_point(message_clear_start:CGameServers_AggregationQuery_Response.Group)
  group_values_.Clear();
  if (_has_bits_[0 / 32] & 63u) {
    ::memset(&servers_empty_, 0, reinterpret_cast<char*>(&player_capacity_) -
      reinterpret_cast<char*>(&servers_empty_) + sizeof(player_capacity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGameServers_AggregationQuery_Response_Group::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGameServers_AggregationQuery_Response.Group)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string group_values = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_group_values()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_values(this->group_values_size() - 1).data(),
            this->group_values(this->group_values_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CGameServers_AggregationQuery_Response.Group.group_values");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 servers_empty = 2;
      case 2: {
        if (tag == 16u) {
          set_has_servers_empty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &servers_empty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 servers_full = 3;
      case 3: {
        if (tag == 24u) {
          set_has_servers_full();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &servers_full_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 servers_total = 4;
      case 4: {
        if (tag == 32u) {
          set_has_servers_total();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &servers_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 players_humans = 5;
      case 5: {
        if (tag == 40u) {
          set_has_players_humans();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &players_humans_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 players_bots = 6;
      case 6: {
        if (tag == 48u) {
          set_has_players_bots();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &players_bots_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 player_capacity = 7;
      case 7: {
        if (tag == 56u) {
          set_has_player_capacity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_capacity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGameServers_AggregationQuery_Response.Group)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGameServers_AggregationQuery_Response.Group)
  return false;
#undef DO_
}

void CGameServers_AggregationQuery_Response_Group::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGameServers_AggregationQuery_Response.Group)
  // repeated string group_values = 1;
  for (int i = 0; i < this->group_values_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_values(i).data(), this->group_values(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGameServers_AggregationQuery_Response.Group.group_values");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->group_values(i), output);
  }

  // optional uint32 servers_empty = 2;
  if (has_servers_empty()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->servers_empty(), output);
  }

  // optional uint32 servers_full = 3;
  if (has_servers_full()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->servers_full(), output);
  }

  // optional uint32 servers_total = 4;
  if (has_servers_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->servers_total(), output);
  }

  // optional uint32 players_humans = 5;
  if (has_players_humans()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->players_humans(), output);
  }

  // optional uint32 players_bots = 6;
  if (has_players_bots()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->players_bots(), output);
  }

  // optional uint32 player_capacity = 7;
  if (has_player_capacity()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->player_capacity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGameServers_AggregationQuery_Response.Group)
}

::google::protobuf::uint8* CGameServers_AggregationQuery_Response_Group::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGameServers_AggregationQuery_Response.Group)
  // repeated string group_values = 1;
  for (int i = 0; i < this->group_values_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_values(i).data(), this->group_values(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGameServers_AggregationQuery_Response.Group.group_values");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->group_values(i), target);
  }

  // optional uint32 servers_empty = 2;
  if (has_servers_empty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->servers_empty(), target);
  }

  // optional uint32 servers_full = 3;
  if (has_servers_full()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->servers_full(), target);
  }

  // optional uint32 servers_total = 4;
  if (has_servers_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->servers_total(), target);
  }

  // optional uint32 players_humans = 5;
  if (has_players_humans()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->players_humans(), target);
  }

  // optional uint32 players_bots = 6;
  if (has_players_bots()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->players_bots(), target);
  }

  // optional uint32 player_capacity = 7;
  if (has_player_capacity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->player_capacity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGameServers_AggregationQuery_Response.Group)
  return target;
}

size_t CGameServers_AggregationQuery_Response_Group::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGameServers_AggregationQuery_Response.Group)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated string group_values = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->group_values_size());
  for (int i = 0; i < this->group_values_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->group_values(i));
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional uint32 servers_empty = 2;
    if (has_servers_empty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->servers_empty());
    }

    // optional uint32 servers_full = 3;
    if (has_servers_full()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->servers_full());
    }

    // optional uint32 servers_total = 4;
    if (has_servers_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->servers_total());
    }

    // optional uint32 players_humans = 5;
    if (has_players_humans()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->players_humans());
    }

    // optional uint32 players_bots = 6;
    if (has_players_bots()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->players_bots());
    }

    // optional uint32 player_capacity = 7;
    if (has_player_capacity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_capacity());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGameServers_AggregationQuery_Response_Group::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGameServers_AggregationQuery_Response.Group)
  GOOGLE_DCHECK_NE(&from, this);
  const CGameServers_AggregationQuery_Response_Group* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGameServers_AggregationQuery_Response_Group>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGameServers_AggregationQuery_Response.Group)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGameServers_AggregationQuery_Response.Group)
    MergeFrom(*source);
  }
}

void CGameServers_AggregationQuery_Response_Group::MergeFrom(const CGameServers_AggregationQuery_Response_Group& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGameServers_AggregationQuery_Response.Group)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_values_.MergeFrom(from.group_values_);
  if (from._has_bits_[0 / 32] & 63u) {
    if (from.has_servers_empty()) {
      set_servers_empty(from.servers_empty());
    }
    if (from.has_servers_full()) {
      set_servers_full(from.servers_full());
    }
    if (from.has_servers_total()) {
      set_servers_total(from.servers_total());
    }
    if (from.has_players_humans()) {
      set_players_humans(from.players_humans());
    }
    if (from.has_players_bots()) {
      set_players_bots(from.players_bots());
    }
    if (from.has_player_capacity()) {
      set_player_capacity(from.player_capacity());
    }
  }
}

void CGameServers_AggregationQuery_Response_Group::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGameServers_AggregationQuery_Response.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGameServers_AggregationQuery_Response_Group::CopyFrom(const CGameServers_AggregationQuery_Response_Group& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGameServers_AggregationQuery_Response.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGameServers_AggregationQuery_Response_Group::IsInitialized() const {
  return true;
}

void CGameServers_AggregationQuery_Response_Group::Swap(CGameServers_AggregationQuery_Response_Group* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGameServers_AggregationQuery_Response_Group::InternalSwap(CGameServers_AggregationQuery_Response_Group* other) {
  group_values_.UnsafeArenaSwap(&other->group_values_);
  std::swap(servers_empty_, other->servers_empty_);
  std::swap(servers_full_, other->servers_full_);
  std::swap(servers_total_, other->servers_total_);
  std::swap(players_humans_, other->players_humans_);
  std::swap(players_bots_, other->players_bots_);
  std::swap(player_capacity_, other->player_capacity_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGameServers_AggregationQuery_Response_Group::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[38];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGameServers_AggregationQuery_Response_Group

// repeated string group_values = 1;
int CGameServers_AggregationQuery_Response_Group::group_values_size() const {
  return group_values_.size();
}
void CGameServers_AggregationQuery_Response_Group::clear_group_values() {
  group_values_.Clear();
}
const ::std::string& CGameServers_AggregationQuery_Response_Group::group_values(int index) const {
  // @@protoc_insertion_point(field_get:CGameServers_AggregationQuery_Response.Group.group_values)
  return group_values_.Get(index);
}
::std::string* CGameServers_AggregationQuery_Response_Group::mutable_group_values(int index) {
  // @@protoc_insertion_point(field_mutable:CGameServers_AggregationQuery_Response.Group.group_values)
  return group_values_.Mutable(index);
}
void CGameServers_AggregationQuery_Response_Group::set_group_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CGameServers_AggregationQuery_Response.Group.group_values)
  group_values_.Mutable(index)->assign(value);
}
void CGameServers_AggregationQuery_Response_Group::set_group_values(int index, const char* value) {
  group_values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CGameServers_AggregationQuery_Response.Group.group_values)
}
void CGameServers_AggregationQuery_Response_Group::set_group_values(int index, const char* value, size_t size) {
  group_values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGameServers_AggregationQuery_Response.Group.group_values)
}
::std::string* CGameServers_AggregationQuery_Response_Group::add_group_values() {
  // @@protoc_insertion_point(field_add_mutable:CGameServers_AggregationQuery_Response.Group.group_values)
  return group_values_.Add();
}
void CGameServers_AggregationQuery_Response_Group::add_group_values(const ::std::string& value) {
  group_values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CGameServers_AggregationQuery_Response.Group.group_values)
}
void CGameServers_AggregationQuery_Response_Group::add_group_values(const char* value) {
  group_values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CGameServers_AggregationQuery_Response.Group.group_values)
}
void CGameServers_AggregationQuery_Response_Group::add_group_values(const char* value, size_t size) {
  group_values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CGameServers_AggregationQuery_Response.Group.group_values)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CGameServers_AggregationQuery_Response_Group::group_values() const {
  // @@protoc_insertion_point(field_list:CGameServers_AggregationQuery_Response.Group.group_values)
  return group_values_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CGameServers_AggregationQuery_Response_Group::mutable_group_values() {
  // @@protoc_insertion_point(field_mutable_list:CGameServers_AggregationQuery_Response.Group.group_values)
  return &group_values_;
}

// optional uint32 servers_empty = 2;
bool CGameServers_AggregationQuery_Response_Group::has_servers_empty() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGameServers_AggregationQuery_Response_Group::set_has_servers_empty() {
  _has_bits_[0] |= 0x00000001u;
}
void CGameServers_AggregationQuery_Response_Group::clear_has_servers_empty() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGameServers_AggregationQuery_Response_Group::clear_servers_empty() {
  servers_empty_ = 0u;
  clear_has_servers_empty();
}
::google::protobuf::uint32 CGameServers_AggregationQuery_Response_Group::servers_empty() const {
  // @@protoc_insertion_point(field_get:CGameServers_AggregationQuery_Response.Group.servers_empty)
  return servers_empty_;
}
void CGameServers_AggregationQuery_Response_Group::set_servers_empty(::google::protobuf::uint32 value) {
  set_has_servers_empty();
  servers_empty_ = value;
  // @@protoc_insertion_point(field_set:CGameServers_AggregationQuery_Response.Group.servers_empty)
}

// optional uint32 servers_full = 3;
bool CGameServers_AggregationQuery_Response_Group::has_servers_full() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGameServers_AggregationQuery_Response_Group::set_has_servers_full() {
  _has_bits_[0] |= 0x00000002u;
}
void CGameServers_AggregationQuery_Response_Group::clear_has_servers_full() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGameServers_AggregationQuery_Response_Group::clear_servers_full() {
  servers_full_ = 0u;
  clear_has_servers_full();
}
::google::protobuf::uint32 CGameServers_AggregationQuery_Response_Group::servers_full() const {
  // @@protoc_insertion_point(field_get:CGameServers_AggregationQuery_Response.Group.servers_full)
  return servers_full_;
}
void CGameServers_AggregationQuery_Response_Group::set_servers_full(::google::protobuf::uint32 value) {
  set_has_servers_full();
  servers_full_ = value;
  // @@protoc_insertion_point(field_set:CGameServers_AggregationQuery_Response.Group.servers_full)
}

// optional uint32 servers_total = 4;
bool CGameServers_AggregationQuery_Response_Group::has_servers_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGameServers_AggregationQuery_Response_Group::set_has_servers_total() {
  _has_bits_[0] |= 0x00000004u;
}
void CGameServers_AggregationQuery_Response_Group::clear_has_servers_total() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGameServers_AggregationQuery_Response_Group::clear_servers_total() {
  servers_total_ = 0u;
  clear_has_servers_total();
}
::google::protobuf::uint32 CGameServers_AggregationQuery_Response_Group::servers_total() const {
  // @@protoc_insertion_point(field_get:CGameServers_AggregationQuery_Response.Group.servers_total)
  return servers_total_;
}
void CGameServers_AggregationQuery_Response_Group::set_servers_total(::google::protobuf::uint32 value) {
  set_has_servers_total();
  servers_total_ = value;
  // @@protoc_insertion_point(field_set:CGameServers_AggregationQuery_Response.Group.servers_total)
}

// optional uint32 players_humans = 5;
bool CGameServers_AggregationQuery_Response_Group::has_players_humans() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGameServers_AggregationQuery_Response_Group::set_has_players_humans() {
  _has_bits_[0] |= 0x00000008u;
}
void CGameServers_AggregationQuery_Response_Group::clear_has_players_humans() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGameServers_AggregationQuery_Response_Group::clear_players_humans() {
  players_humans_ = 0u;
  clear_has_players_humans();
}
::google::protobuf::uint32 CGameServers_AggregationQuery_Response_Group::players_humans() const {
  // @@protoc_insertion_point(field_get:CGameServers_AggregationQuery_Response.Group.players_humans)
  return players_humans_;
}
void CGameServers_AggregationQuery_Response_Group::set_players_humans(::google::protobuf::uint32 value) {
  set_has_players_humans();
  players_humans_ = value;
  // @@protoc_insertion_point(field_set:CGameServers_AggregationQuery_Response.Group.players_humans)
}

// optional uint32 players_bots = 6;
bool CGameServers_AggregationQuery_Response_Group::has_players_bots() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGameServers_AggregationQuery_Response_Group::set_has_players_bots() {
  _has_bits_[0] |= 0x00000010u;
}
void CGameServers_AggregationQuery_Response_Group::clear_has_players_bots() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGameServers_AggregationQuery_Response_Group::clear_players_bots() {
  players_bots_ = 0u;
  clear_has_players_bots();
}
::google::protobuf::uint32 CGameServers_AggregationQuery_Response_Group::players_bots() const {
  // @@protoc_insertion_point(field_get:CGameServers_AggregationQuery_Response.Group.players_bots)
  return players_bots_;
}
void CGameServers_AggregationQuery_Response_Group::set_players_bots(::google::protobuf::uint32 value) {
  set_has_players_bots();
  players_bots_ = value;
  // @@protoc_insertion_point(field_set:CGameServers_AggregationQuery_Response.Group.players_bots)
}

// optional uint32 player_capacity = 7;
bool CGameServers_AggregationQuery_Response_Group::has_player_capacity() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CGameServers_AggregationQuery_Response_Group::set_has_player_capacity() {
  _has_bits_[0] |= 0x00000020u;
}
void CGameServers_AggregationQuery_Response_Group::clear_has_player_capacity() {
  _has_bits_[0] &= ~0x00000020u;
}
void CGameServers_AggregationQuery_Response_Group::clear_player_capacity() {
  player_capacity_ = 0u;
  clear_has_player_capacity();
}
::google::protobuf::uint32 CGameServers_AggregationQuery_Response_Group::player_capacity() const {
  // @@protoc_insertion_point(field_get:CGameServers_AggregationQuery_Response.Group.player_capacity)
  return player_capacity_;
}
void CGameServers_AggregationQuery_Response_Group::set_player_capacity(::google::protobuf::uint32 value) {
  set_has_player_capacity();
  player_capacity_ = value;
  // @@protoc_insertion_point(field_set:CGameServers_AggregationQuery_Response.Group.player_capacity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGameServers_AggregationQuery_Response::kGroupsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGameServers_AggregationQuery_Response::CGameServers_AggregationQuery_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGameServers_AggregationQuery_Response)
}
CGameServers_AggregationQuery_Response::CGameServers_AggregationQuery_Response(const CGameServers_AggregationQuery_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      groups_(from.groups_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CGameServers_AggregationQuery_Response)
}

void CGameServers_AggregationQuery_Response::SharedCtor() {
  _cached_size_ = 0;
}

CGameServers_AggregationQuery_Response::~CGameServers_AggregationQuery_Response() {
  // @@protoc_insertion_point(destructor:CGameServers_AggregationQuery_Response)
  SharedDtor();
}

void CGameServers_AggregationQuery_Response::SharedDtor() {
}

void CGameServers_AggregationQuery_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGameServers_AggregationQuery_Response::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[39].descriptor;
}

const CGameServers_AggregationQuery_Response& CGameServers_AggregationQuery_Response::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CGameServers_AggregationQuery_Response* CGameServers_AggregationQuery_Response::New(::google::protobuf::Arena* arena) const {
  CGameServers_AggregationQuery_Response* n = new CGameServers_AggregationQuery_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGameServers_AggregationQuery_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CGameServers_AggregationQuery_Response)
  groups_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGameServers_AggregationQuery_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGameServers_AggregationQuery_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CGameServers_AggregationQuery_Response.Group groups = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_groups()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGameServers_AggregationQuery_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGameServers_AggregationQuery_Response)
  return false;
#undef DO_
}

void CGameServers_AggregationQuery_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGameServers_AggregationQuery_Response)
  // repeated .CGameServers_AggregationQuery_Response.Group groups = 1;
  for (unsigned int i = 0, n = this->groups_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->groups(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGameServers_AggregationQuery_Response)
}

::google::protobuf::uint8* CGameServers_AggregationQuery_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGameServers_AggregationQuery_Response)
  // repeated .CGameServers_AggregationQuery_Response.Group groups = 1;
  for (unsigned int i = 0, n = this->groups_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->groups(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGameServers_AggregationQuery_Response)
  return target;
}

size_t CGameServers_AggregationQuery_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGameServers_AggregationQuery_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .CGameServers_AggregationQuery_Response.Group groups = 1;
  {
    unsigned int count = this->groups_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->groups(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGameServers_AggregationQuery_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGameServers_AggregationQuery_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CGameServers_AggregationQuery_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGameServers_AggregationQuery_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGameServers_AggregationQuery_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGameServers_AggregationQuery_Response)
    MergeFrom(*source);
  }
}

void CGameServers_AggregationQuery_Response::MergeFrom(const CGameServers_AggregationQuery_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGameServers_AggregationQuery_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  groups_.MergeFrom(from.groups_);
}

void CGameServers_AggregationQuery_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGameServers_AggregationQuery_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGameServers_AggregationQuery_Response::CopyFrom(const CGameServers_AggregationQuery_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGameServers_AggregationQuery_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGameServers_AggregationQuery_Response::IsInitialized() const {
  return true;
}

void CGameServers_AggregationQuery_Response::Swap(CGameServers_AggregationQuery_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGameServers_AggregationQuery_Response::InternalSwap(CGameServers_AggregationQuery_Response* other) {
  groups_.UnsafeArenaSwap(&other->groups_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGameServers_AggregationQuery_Response::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[39];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGameServers_AggregationQuery_Response

// repeated .CGameServers_AggregationQuery_Response.Group groups = 1;
int CGameServers_AggregationQuery_Response::groups_size() const {
  return groups_.size();
}
void CGameServers_AggregationQuery_Response::clear_groups() {
  groups_.Clear();
}
const ::CGameServers_AggregationQuery_Response_Group& CGameServers_AggregationQuery_Response::groups(int index) const {
  // @@protoc_insertion_point(field_get:CGameServers_AggregationQuery_Response.groups)
  return groups_.Get(index);
}
::CGameServers_AggregationQuery_Response_Group* CGameServers_AggregationQuery_Response::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:CGameServers_AggregationQuery_Response.groups)
  return groups_.Mutable(index);
}
::CGameServers_AggregationQuery_Response_Group* CGameServers_AggregationQuery_Response::add_groups() {
  // @@protoc_insertion_point(field_add:CGameServers_AggregationQuery_Response.groups)
  return groups_.Add();
}
::google::protobuf::RepeatedPtrField< ::CGameServers_AggregationQuery_Response_Group >*
CGameServers_AggregationQuery_Response::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:CGameServers_AggregationQuery_Response.groups)
  return &groups_;
}
const ::google::protobuf::RepeatedPtrField< ::CGameServers_AggregationQuery_Response_Group >&
CGameServers_AggregationQuery_Response::groups() const {
  // @@protoc_insertion_point(field_list:CGameServers_AggregationQuery_Response.groups)
  return groups_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_AddSpecialPayment_Request::kAppidFieldNumber;
const int CWorkshop_AddSpecialPayment_Request::kGameitemidFieldNumber;
const int CWorkshop_AddSpecialPayment_Request::kDateFieldNumber;
const int CWorkshop_AddSpecialPayment_Request::kPaymentUsUsdFieldNumber;
const int CWorkshop_AddSpecialPayment_Request::kPaymentRowUsdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_AddSpecialPayment_Request::CWorkshop_AddSpecialPayment_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_AddSpecialPayment_Request)
}
CWorkshop_AddSpecialPayment_Request::CWorkshop_AddSpecialPayment_Request(const CWorkshop_AddSpecialPayment_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_date()) {
    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  ::memcpy(&appid_, &from.appid_,
    reinterpret_cast<char*>(&payment_row_usd_) -
    reinterpret_cast<char*>(&appid_) + sizeof(payment_row_usd_));
  // @@protoc_insertion_point(copy_constructor:CWorkshop_AddSpecialPayment_Request)
}

void CWorkshop_AddSpecialPayment_Request::SharedCtor() {
  _cached_size_ = 0;
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, reinterpret_cast<char*>(&payment_row_usd_) -
    reinterpret_cast<char*>(&appid_) + sizeof(payment_row_usd_));
}

CWorkshop_AddSpecialPayment_Request::~CWorkshop_AddSpecialPayment_Request() {
  // @@protoc_insertion_point(destructor:CWorkshop_AddSpecialPayment_Request)
  SharedDtor();
}

void CWorkshop_AddSpecialPayment_Request::SharedDtor() {
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CWorkshop_AddSpecialPayment_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_AddSpecialPayment_Request::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[40].descriptor;
}

const CWorkshop_AddSpecialPayment_Request& CWorkshop_AddSpecialPayment_Request::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CWorkshop_AddSpecialPayment_Request* CWorkshop_AddSpecialPayment_Request::New(::google::protobuf::Arena* arena) const {
  CWorkshop_AddSpecialPayment_Request* n = new CWorkshop_AddSpecialPayment_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_AddSpecialPayment_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_AddSpecialPayment_Request)
  if (has_date()) {
    GOOGLE_DCHECK(!date_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*date_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 30u) {
    ::memset(&appid_, 0, reinterpret_cast<char*>(&payment_row_usd_) -
      reinterpret_cast<char*>(&appid_) + sizeof(payment_row_usd_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_AddSpecialPayment_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_AddSpecialPayment_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (tag == 8u) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gameitemid = 2;
      case 2: {
        if (tag == 16u) {
          set_has_gameitemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gameitemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string date = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CWorkshop_AddSpecialPayment_Request.date");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 payment_us_usd = 4;
      case 4: {
        if (tag == 32u) {
          set_has_payment_us_usd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &payment_us_usd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 payment_row_usd = 5;
      case 5: {
        if (tag == 40u) {
          set_has_payment_row_usd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &payment_row_usd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_AddSpecialPayment_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_AddSpecialPayment_Request)
  return false;
#undef DO_
}

void CWorkshop_AddSpecialPayment_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_AddSpecialPayment_Request)
  // optional uint32 appid = 1;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 gameitemid = 2;
  if (has_gameitemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gameitemid(), output);
  }

  // optional string date = 3;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_AddSpecialPayment_Request.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->date(), output);
  }

  // optional uint64 payment_us_usd = 4;
  if (has_payment_us_usd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->payment_us_usd(), output);
  }

  // optional uint64 payment_row_usd = 5;
  if (has_payment_row_usd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->payment_row_usd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_AddSpecialPayment_Request)
}

::google::protobuf::uint8* CWorkshop_AddSpecialPayment_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_AddSpecialPayment_Request)
  // optional uint32 appid = 1;
  if (has_appid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 gameitemid = 2;
  if (has_gameitemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gameitemid(), target);
  }

  // optional string date = 3;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_AddSpecialPayment_Request.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->date(), target);
  }

  // optional uint64 payment_us_usd = 4;
  if (has_payment_us_usd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->payment_us_usd(), target);
  }

  // optional uint64 payment_row_usd = 5;
  if (has_payment_row_usd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->payment_row_usd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_AddSpecialPayment_Request)
  return target;
}

size_t CWorkshop_AddSpecialPayment_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_AddSpecialPayment_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string date = 3;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 gameitemid = 2;
    if (has_gameitemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gameitemid());
    }

    // optional uint64 payment_us_usd = 4;
    if (has_payment_us_usd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->payment_us_usd());
    }

    // optional uint64 payment_row_usd = 5;
    if (has_payment_row_usd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->payment_row_usd());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_AddSpecialPayment_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_AddSpecialPayment_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_AddSpecialPayment_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_AddSpecialPayment_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_AddSpecialPayment_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_AddSpecialPayment_Request)
    MergeFrom(*source);
  }
}

void CWorkshop_AddSpecialPayment_Request::MergeFrom(const CWorkshop_AddSpecialPayment_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_AddSpecialPayment_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 31u) {
    if (from.has_date()) {
      set_has_date();
      date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
    }
    if (from.has_appid()) {
      set_appid(from.appid());
    }
    if (from.has_gameitemid()) {
      set_gameitemid(from.gameitemid());
    }
    if (from.has_payment_us_usd()) {
      set_payment_us_usd(from.payment_us_usd());
    }
    if (from.has_payment_row_usd()) {
      set_payment_row_usd(from.payment_row_usd());
    }
  }
}

void CWorkshop_AddSpecialPayment_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_AddSpecialPayment_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_AddSpecialPayment_Request::CopyFrom(const CWorkshop_AddSpecialPayment_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_AddSpecialPayment_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_AddSpecialPayment_Request::IsInitialized() const {
  return true;
}

void CWorkshop_AddSpecialPayment_Request::Swap(CWorkshop_AddSpecialPayment_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_AddSpecialPayment_Request::InternalSwap(CWorkshop_AddSpecialPayment_Request* other) {
  date_.Swap(&other->date_);
  std::swap(appid_, other->appid_);
  std::swap(gameitemid_, other->gameitemid_);
  std::swap(payment_us_usd_, other->payment_us_usd_);
  std::swap(payment_row_usd_, other->payment_row_usd_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_AddSpecialPayment_Request::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[40];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CWorkshop_AddSpecialPayment_Request

// optional uint32 appid = 1;
bool CWorkshop_AddSpecialPayment_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CWorkshop_AddSpecialPayment_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
void CWorkshop_AddSpecialPayment_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CWorkshop_AddSpecialPayment_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
::google::protobuf::uint32 CWorkshop_AddSpecialPayment_Request::appid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_AddSpecialPayment_Request.appid)
  return appid_;
}
void CWorkshop_AddSpecialPayment_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:CWorkshop_AddSpecialPayment_Request.appid)
}

// optional uint32 gameitemid = 2;
bool CWorkshop_AddSpecialPayment_Request::has_gameitemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CWorkshop_AddSpecialPayment_Request::set_has_gameitemid() {
  _has_bits_[0] |= 0x00000004u;
}
void CWorkshop_AddSpecialPayment_Request::clear_has_gameitemid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CWorkshop_AddSpecialPayment_Request::clear_gameitemid() {
  gameitemid_ = 0u;
  clear_has_gameitemid();
}
::google::protobuf::uint32 CWorkshop_AddSpecialPayment_Request::gameitemid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_AddSpecialPayment_Request.gameitemid)
  return gameitemid_;
}
void CWorkshop_AddSpecialPayment_Request::set_gameitemid(::google::protobuf::uint32 value) {
  set_has_gameitemid();
  gameitemid_ = value;
  // @@protoc_insertion_point(field_set:CWorkshop_AddSpecialPayment_Request.gameitemid)
}

// optional string date = 3;
bool CWorkshop_AddSpecialPayment_Request::has_date() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CWorkshop_AddSpecialPayment_Request::set_has_date() {
  _has_bits_[0] |= 0x00000001u;
}
void CWorkshop_AddSpecialPayment_Request::clear_has_date() {
  _has_bits_[0] &= ~0x00000001u;
}
void CWorkshop_AddSpecialPayment_Request::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
const ::std::string& CWorkshop_AddSpecialPayment_Request::date() const {
  // @@protoc_insertion_point(field_get:CWorkshop_AddSpecialPayment_Request.date)
  return date_.GetNoArena();
}
void CWorkshop_AddSpecialPayment_Request::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CWorkshop_AddSpecialPayment_Request.date)
}
#if LANG_CXX11
void CWorkshop_AddSpecialPayment_Request::set_date(::std::string&& value) {
  set_has_date();
  date_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CWorkshop_AddSpecialPayment_Request.date)
}
#endif
void CWorkshop_AddSpecialPayment_Request::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CWorkshop_AddSpecialPayment_Request.date)
}
void CWorkshop_AddSpecialPayment_Request::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CWorkshop_AddSpecialPayment_Request.date)
}
::std::string* CWorkshop_AddSpecialPayment_Request::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:CWorkshop_AddSpecialPayment_Request.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CWorkshop_AddSpecialPayment_Request::release_date() {
  // @@protoc_insertion_point(field_release:CWorkshop_AddSpecialPayment_Request.date)
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CWorkshop_AddSpecialPayment_Request::set_allocated_date(::std::string* date) {
  if (date != NULL) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:CWorkshop_AddSpecialPayment_Request.date)
}

// optional uint64 payment_us_usd = 4;
bool CWorkshop_AddSpecialPayment_Request::has_payment_us_usd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CWorkshop_AddSpecialPayment_Request::set_has_payment_us_usd() {
  _has_bits_[0] |= 0x00000008u;
}
void CWorkshop_AddSpecialPayment_Request::clear_has_payment_us_usd() {
  _has_bits_[0] &= ~0x00000008u;
}
void CWorkshop_AddSpecialPayment_Request::clear_payment_us_usd() {
  payment_us_usd_ = GOOGLE_ULONGLONG(0);
  clear_has_payment_us_usd();
}
::google::protobuf::uint64 CWorkshop_AddSpecialPayment_Request::payment_us_usd() const {
  // @@protoc_insertion_point(field_get:CWorkshop_AddSpecialPayment_Request.payment_us_usd)
  return payment_us_usd_;
}
void CWorkshop_AddSpecialPayment_Request::set_payment_us_usd(::google::protobuf::uint64 value) {
  set_has_payment_us_usd();
  payment_us_usd_ = value;
  // @@protoc_insertion_point(field_set:CWorkshop_AddSpecialPayment_Request.payment_us_usd)
}

// optional uint64 payment_row_usd = 5;
bool CWorkshop_AddSpecialPayment_Request::has_payment_row_usd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CWorkshop_AddSpecialPayment_Request::set_has_payment_row_usd() {
  _has_bits_[0] |= 0x00000010u;
}
void CWorkshop_AddSpecialPayment_Request::clear_has_payment_row_usd() {
  _has_bits_[0] &= ~0x00000010u;
}
void CWorkshop_AddSpecialPayment_Request::clear_payment_row_usd() {
  payment_row_usd_ = GOOGLE_ULONGLONG(0);
  clear_has_payment_row_usd();
}
::google::protobuf::uint64 CWorkshop_AddSpecialPayment_Request::payment_row_usd() const {
  // @@protoc_insertion_point(field_get:CWorkshop_AddSpecialPayment_Request.payment_row_usd)
  return payment_row_usd_;
}
void CWorkshop_AddSpecialPayment_Request::set_payment_row_usd(::google::protobuf::uint64 value) {
  set_has_payment_row_usd();
  payment_row_usd_ = value;
  // @@protoc_insertion_point(field_set:CWorkshop_AddSpecialPayment_Request.payment_row_usd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_AddSpecialPayment_Response::CWorkshop_AddSpecialPayment_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_AddSpecialPayment_Response)
}
CWorkshop_AddSpecialPayment_Response::CWorkshop_AddSpecialPayment_Response(const CWorkshop_AddSpecialPayment_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CWorkshop_AddSpecialPayment_Response)
}

void CWorkshop_AddSpecialPayment_Response::SharedCtor() {
  _cached_size_ = 0;
}

CWorkshop_AddSpecialPayment_Response::~CWorkshop_AddSpecialPayment_Response() {
  // @@protoc_insertion_point(destructor:CWorkshop_AddSpecialPayment_Response)
  SharedDtor();
}

void CWorkshop_AddSpecialPayment_Response::SharedDtor() {
}

void CWorkshop_AddSpecialPayment_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_AddSpecialPayment_Response::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[41].descriptor;
}

const CWorkshop_AddSpecialPayment_Response& CWorkshop_AddSpecialPayment_Response::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CWorkshop_AddSpecialPayment_Response* CWorkshop_AddSpecialPayment_Response::New(::google::protobuf::Arena* arena) const {
  CWorkshop_AddSpecialPayment_Response* n = new CWorkshop_AddSpecialPayment_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_AddSpecialPayment_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_AddSpecialPayment_Response)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_AddSpecialPayment_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_AddSpecialPayment_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_AddSpecialPayment_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_AddSpecialPayment_Response)
  return false;
#undef DO_
}

void CWorkshop_AddSpecialPayment_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_AddSpecialPayment_Response)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_AddSpecialPayment_Response)
}

::google::protobuf::uint8* CWorkshop_AddSpecialPayment_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_AddSpecialPayment_Response)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_AddSpecialPayment_Response)
  return target;
}

size_t CWorkshop_AddSpecialPayment_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_AddSpecialPayment_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_AddSpecialPayment_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_AddSpecialPayment_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_AddSpecialPayment_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_AddSpecialPayment_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_AddSpecialPayment_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_AddSpecialPayment_Response)
    MergeFrom(*source);
  }
}

void CWorkshop_AddSpecialPayment_Response::MergeFrom(const CWorkshop_AddSpecialPayment_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_AddSpecialPayment_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void CWorkshop_AddSpecialPayment_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_AddSpecialPayment_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_AddSpecialPayment_Response::CopyFrom(const CWorkshop_AddSpecialPayment_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_AddSpecialPayment_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_AddSpecialPayment_Response::IsInitialized() const {
  return true;
}

void CWorkshop_AddSpecialPayment_Response::Swap(CWorkshop_AddSpecialPayment_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_AddSpecialPayment_Response::InternalSwap(CWorkshop_AddSpecialPayment_Response* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_AddSpecialPayment_Response::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[41];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CWorkshop_AddSpecialPayment_Response

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProductInfo_SetRichPresenceLocalization_Request_Token::kTokenFieldNumber;
const int CProductInfo_SetRichPresenceLocalization_Request_Token::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProductInfo_SetRichPresenceLocalization_Request_Token::CProductInfo_SetRichPresenceLocalization_Request_Token()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CProductInfo_SetRichPresenceLocalization_Request.Token)
}
CProductInfo_SetRichPresenceLocalization_Request_Token::CProductInfo_SetRichPresenceLocalization_Request_Token(const CProductInfo_SetRichPresenceLocalization_Request_Token& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:CProductInfo_SetRichPresenceLocalization_Request.Token)
}

void CProductInfo_SetRichPresenceLocalization_Request_Token::SharedCtor() {
  _cached_size_ = 0;
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CProductInfo_SetRichPresenceLocalization_Request_Token::~CProductInfo_SetRichPresenceLocalization_Request_Token() {
  // @@protoc_insertion_point(destructor:CProductInfo_SetRichPresenceLocalization_Request.Token)
  SharedDtor();
}

void CProductInfo_SetRichPresenceLocalization_Request_Token::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CProductInfo_SetRichPresenceLocalization_Request_Token::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProductInfo_SetRichPresenceLocalization_Request_Token::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[42].descriptor;
}

const CProductInfo_SetRichPresenceLocalization_Request_Token& CProductInfo_SetRichPresenceLocalization_Request_Token::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CProductInfo_SetRichPresenceLocalization_Request_Token* CProductInfo_SetRichPresenceLocalization_Request_Token::New(::google::protobuf::Arena* arena) const {
  CProductInfo_SetRichPresenceLocalization_Request_Token* n = new CProductInfo_SetRichPresenceLocalization_Request_Token;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CProductInfo_SetRichPresenceLocalization_Request_Token::Clear() {
// @@protoc_insertion_point(message_clear_start:CProductInfo_SetRichPresenceLocalization_Request.Token)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_token()) {
      GOOGLE_DCHECK(!token_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*token_.UnsafeRawStringPointer())->clear();
    }
    if (has_value()) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CProductInfo_SetRichPresenceLocalization_Request_Token::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CProductInfo_SetRichPresenceLocalization_Request.Token)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string token = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CProductInfo_SetRichPresenceLocalization_Request.Token.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CProductInfo_SetRichPresenceLocalization_Request.Token.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CProductInfo_SetRichPresenceLocalization_Request.Token)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CProductInfo_SetRichPresenceLocalization_Request.Token)
  return false;
#undef DO_
}

void CProductInfo_SetRichPresenceLocalization_Request_Token::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CProductInfo_SetRichPresenceLocalization_Request.Token)
  // optional string token = 1;
  if (has_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CProductInfo_SetRichPresenceLocalization_Request.Token.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CProductInfo_SetRichPresenceLocalization_Request.Token.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CProductInfo_SetRichPresenceLocalization_Request.Token)
}

::google::protobuf::uint8* CProductInfo_SetRichPresenceLocalization_Request_Token::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CProductInfo_SetRichPresenceLocalization_Request.Token)
  // optional string token = 1;
  if (has_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CProductInfo_SetRichPresenceLocalization_Request.Token.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CProductInfo_SetRichPresenceLocalization_Request.Token.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CProductInfo_SetRichPresenceLocalization_Request.Token)
  return target;
}

size_t CProductInfo_SetRichPresenceLocalization_Request_Token::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CProductInfo_SetRichPresenceLocalization_Request.Token)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string token = 1;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->token());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProductInfo_SetRichPresenceLocalization_Request_Token::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CProductInfo_SetRichPresenceLocalization_Request.Token)
  GOOGLE_DCHECK_NE(&from, this);
  const CProductInfo_SetRichPresenceLocalization_Request_Token* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CProductInfo_SetRichPresenceLocalization_Request_Token>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CProductInfo_SetRichPresenceLocalization_Request.Token)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CProductInfo_SetRichPresenceLocalization_Request.Token)
    MergeFrom(*source);
  }
}

void CProductInfo_SetRichPresenceLocalization_Request_Token::MergeFrom(const CProductInfo_SetRichPresenceLocalization_Request_Token& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CProductInfo_SetRichPresenceLocalization_Request.Token)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_token()) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void CProductInfo_SetRichPresenceLocalization_Request_Token::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CProductInfo_SetRichPresenceLocalization_Request.Token)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProductInfo_SetRichPresenceLocalization_Request_Token::CopyFrom(const CProductInfo_SetRichPresenceLocalization_Request_Token& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CProductInfo_SetRichPresenceLocalization_Request.Token)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProductInfo_SetRichPresenceLocalization_Request_Token::IsInitialized() const {
  return true;
}

void CProductInfo_SetRichPresenceLocalization_Request_Token::Swap(CProductInfo_SetRichPresenceLocalization_Request_Token* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProductInfo_SetRichPresenceLocalization_Request_Token::InternalSwap(CProductInfo_SetRichPresenceLocalization_Request_Token* other) {
  token_.Swap(&other->token_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CProductInfo_SetRichPresenceLocalization_Request_Token::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[42];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CProductInfo_SetRichPresenceLocalization_Request_Token

// optional string token = 1;
bool CProductInfo_SetRichPresenceLocalization_Request_Token::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CProductInfo_SetRichPresenceLocalization_Request_Token::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
void CProductInfo_SetRichPresenceLocalization_Request_Token::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
void CProductInfo_SetRichPresenceLocalization_Request_Token::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
const ::std::string& CProductInfo_SetRichPresenceLocalization_Request_Token::token() const {
  // @@protoc_insertion_point(field_get:CProductInfo_SetRichPresenceLocalization_Request.Token.token)
  return token_.GetNoArena();
}
void CProductInfo_SetRichPresenceLocalization_Request_Token::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CProductInfo_SetRichPresenceLocalization_Request.Token.token)
}
#if LANG_CXX11
void CProductInfo_SetRichPresenceLocalization_Request_Token::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CProductInfo_SetRichPresenceLocalization_Request.Token.token)
}
#endif
void CProductInfo_SetRichPresenceLocalization_Request_Token::set_token(const char* value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CProductInfo_SetRichPresenceLocalization_Request.Token.token)
}
void CProductInfo_SetRichPresenceLocalization_Request_Token::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CProductInfo_SetRichPresenceLocalization_Request.Token.token)
}
::std::string* CProductInfo_SetRichPresenceLocalization_Request_Token::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:CProductInfo_SetRichPresenceLocalization_Request.Token.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CProductInfo_SetRichPresenceLocalization_Request_Token::release_token() {
  // @@protoc_insertion_point(field_release:CProductInfo_SetRichPresenceLocalization_Request.Token.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CProductInfo_SetRichPresenceLocalization_Request_Token::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:CProductInfo_SetRichPresenceLocalization_Request.Token.token)
}

// optional string value = 2;
bool CProductInfo_SetRichPresenceLocalization_Request_Token::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CProductInfo_SetRichPresenceLocalization_Request_Token::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void CProductInfo_SetRichPresenceLocalization_Request_Token::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void CProductInfo_SetRichPresenceLocalization_Request_Token::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& CProductInfo_SetRichPresenceLocalization_Request_Token::value() const {
  // @@protoc_insertion_point(field_get:CProductInfo_SetRichPresenceLocalization_Request.Token.value)
  return value_.GetNoArena();
}
void CProductInfo_SetRichPresenceLocalization_Request_Token::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CProductInfo_SetRichPresenceLocalization_Request.Token.value)
}
#if LANG_CXX11
void CProductInfo_SetRichPresenceLocalization_Request_Token::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CProductInfo_SetRichPresenceLocalization_Request.Token.value)
}
#endif
void CProductInfo_SetRichPresenceLocalization_Request_Token::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CProductInfo_SetRichPresenceLocalization_Request.Token.value)
}
void CProductInfo_SetRichPresenceLocalization_Request_Token::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CProductInfo_SetRichPresenceLocalization_Request.Token.value)
}
::std::string* CProductInfo_SetRichPresenceLocalization_Request_Token::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:CProductInfo_SetRichPresenceLocalization_Request.Token.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CProductInfo_SetRichPresenceLocalization_Request_Token::release_value() {
  // @@protoc_insertion_point(field_release:CProductInfo_SetRichPresenceLocalization_Request.Token.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CProductInfo_SetRichPresenceLocalization_Request_Token::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:CProductInfo_SetRichPresenceLocalization_Request.Token.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::kLanguageFieldNumber;
const int CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::kTokensFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::CProductInfo_SetRichPresenceLocalization_Request_LanguageSection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
}
CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::CProductInfo_SetRichPresenceLocalization_Request_LanguageSection(const CProductInfo_SetRichPresenceLocalization_Request_LanguageSection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      tokens_(from.tokens_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_language()) {
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  // @@protoc_insertion_point(copy_constructor:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
}

void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::SharedCtor() {
  _cached_size_ = 0;
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::~CProductInfo_SetRichPresenceLocalization_Request_LanguageSection() {
  // @@protoc_insertion_point(destructor:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
  SharedDtor();
}

void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::SharedDtor() {
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[43].descriptor;
}

const CProductInfo_SetRichPresenceLocalization_Request_LanguageSection& CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CProductInfo_SetRichPresenceLocalization_Request_LanguageSection* CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::New(::google::protobuf::Arena* arena) const {
  CProductInfo_SetRichPresenceLocalization_Request_LanguageSection* n = new CProductInfo_SetRichPresenceLocalization_Request_LanguageSection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::Clear() {
// @@protoc_insertion_point(message_clear_start:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
  tokens_.Clear();
  if (has_language()) {
    GOOGLE_DCHECK(!language_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*language_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string language = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->language().data(), this->language().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.language");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CProductInfo_SetRichPresenceLocalization_Request.Token tokens = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tokens()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
  return false;
#undef DO_
}

void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
  // optional string language = 1;
  if (has_language()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->language(), output);
  }

  // repeated .CProductInfo_SetRichPresenceLocalization_Request.Token tokens = 2;
  for (unsigned int i = 0, n = this->tokens_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->tokens(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
}

::google::protobuf::uint8* CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
  // optional string language = 1;
  if (has_language()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->language(), target);
  }

  // repeated .CProductInfo_SetRichPresenceLocalization_Request.Token tokens = 2;
  for (unsigned int i = 0, n = this->tokens_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->tokens(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
  return target;
}

size_t CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .CProductInfo_SetRichPresenceLocalization_Request.Token tokens = 2;
  {
    unsigned int count = this->tokens_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tokens(i));
    }
  }

  // optional string language = 1;
  if (has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
  GOOGLE_DCHECK_NE(&from, this);
  const CProductInfo_SetRichPresenceLocalization_Request_LanguageSection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CProductInfo_SetRichPresenceLocalization_Request_LanguageSection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
    MergeFrom(*source);
  }
}

void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::MergeFrom(const CProductInfo_SetRichPresenceLocalization_Request_LanguageSection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tokens_.MergeFrom(from.tokens_);
  if (from.has_language()) {
    set_has_language();
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
}

void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::CopyFrom(const CProductInfo_SetRichPresenceLocalization_Request_LanguageSection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::IsInitialized() const {
  return true;
}

void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::Swap(CProductInfo_SetRichPresenceLocalization_Request_LanguageSection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::InternalSwap(CProductInfo_SetRichPresenceLocalization_Request_LanguageSection* other) {
  tokens_.UnsafeArenaSwap(&other->tokens_);
  language_.Swap(&other->language_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[43];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CProductInfo_SetRichPresenceLocalization_Request_LanguageSection

// optional string language = 1;
bool CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::has_language() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::set_has_language() {
  _has_bits_[0] |= 0x00000001u;
}
void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::clear_has_language() {
  _has_bits_[0] &= ~0x00000001u;
}
void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_language();
}
const ::std::string& CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::language() const {
  // @@protoc_insertion_point(field_get:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.language)
  return language_.GetNoArena();
}
void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::set_language(const ::std::string& value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.language)
}
#if LANG_CXX11
void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::set_language(::std::string&& value) {
  set_has_language();
  language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.language)
}
#endif
void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::set_language(const char* value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.language)
}
void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::set_language(const char* value, size_t size) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.language)
}
::std::string* CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::mutable_language() {
  set_has_language();
  // @@protoc_insertion_point(field_mutable:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::release_language() {
  // @@protoc_insertion_point(field_release:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.language)
  clear_has_language();
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    set_has_language();
  } else {
    clear_has_language();
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.language)
}

// repeated .CProductInfo_SetRichPresenceLocalization_Request.Token tokens = 2;
int CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::tokens_size() const {
  return tokens_.size();
}
void CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::clear_tokens() {
  tokens_.Clear();
}
const ::CProductInfo_SetRichPresenceLocalization_Request_Token& CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::tokens(int index) const {
  // @@protoc_insertion_point(field_get:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.tokens)
  return tokens_.Get(index);
}
::CProductInfo_SetRichPresenceLocalization_Request_Token* CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::mutable_tokens(int index) {
  // @@protoc_insertion_point(field_mutable:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.tokens)
  return tokens_.Mutable(index);
}
::CProductInfo_SetRichPresenceLocalization_Request_Token* CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::add_tokens() {
  // @@protoc_insertion_point(field_add:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.tokens)
  return tokens_.Add();
}
::google::protobuf::RepeatedPtrField< ::CProductInfo_SetRichPresenceLocalization_Request_Token >*
CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::mutable_tokens() {
  // @@protoc_insertion_point(field_mutable_list:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.tokens)
  return &tokens_;
}
const ::google::protobuf::RepeatedPtrField< ::CProductInfo_SetRichPresenceLocalization_Request_Token >&
CProductInfo_SetRichPresenceLocalization_Request_LanguageSection::tokens() const {
  // @@protoc_insertion_point(field_list:CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.tokens)
  return tokens_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProductInfo_SetRichPresenceLocalization_Request::kAppidFieldNumber;
const int CProductInfo_SetRichPresenceLocalization_Request::kLanguagesFieldNumber;
const int CProductInfo_SetRichPresenceLocalization_Request::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProductInfo_SetRichPresenceLocalization_Request::CProductInfo_SetRichPresenceLocalization_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CProductInfo_SetRichPresenceLocalization_Request)
}
CProductInfo_SetRichPresenceLocalization_Request::CProductInfo_SetRichPresenceLocalization_Request(const CProductInfo_SetRichPresenceLocalization_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      languages_(from.languages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&steamid_) + sizeof(appid_));
  // @@protoc_insertion_point(copy_constructor:CProductInfo_SetRichPresenceLocalization_Request)
}

void CProductInfo_SetRichPresenceLocalization_Request::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steamid_, 0, reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&steamid_) + sizeof(appid_));
}

CProductInfo_SetRichPresenceLocalization_Request::~CProductInfo_SetRichPresenceLocalization_Request() {
  // @@protoc_insertion_point(destructor:CProductInfo_SetRichPresenceLocalization_Request)
  SharedDtor();
}

void CProductInfo_SetRichPresenceLocalization_Request::SharedDtor() {
}

void CProductInfo_SetRichPresenceLocalization_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProductInfo_SetRichPresenceLocalization_Request::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[44].descriptor;
}

const CProductInfo_SetRichPresenceLocalization_Request& CProductInfo_SetRichPresenceLocalization_Request::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CProductInfo_SetRichPresenceLocalization_Request* CProductInfo_SetRichPresenceLocalization_Request::New(::google::protobuf::Arena* arena) const {
  CProductInfo_SetRichPresenceLocalization_Request* n = new CProductInfo_SetRichPresenceLocalization_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CProductInfo_SetRichPresenceLocalization_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CProductInfo_SetRichPresenceLocalization_Request)
  languages_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&steamid_, 0, reinterpret_cast<char*>(&appid_) -
      reinterpret_cast<char*>(&steamid_) + sizeof(appid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CProductInfo_SetRichPresenceLocalization_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CProductInfo_SetRichPresenceLocalization_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (tag == 8u) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CProductInfo_SetRichPresenceLocalization_Request.LanguageSection languages = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_languages()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional uint64 steamid = 3;
      case 3: {
        if (tag == 24u) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CProductInfo_SetRichPresenceLocalization_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CProductInfo_SetRichPresenceLocalization_Request)
  return false;
#undef DO_
}

void CProductInfo_SetRichPresenceLocalization_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CProductInfo_SetRichPresenceLocalization_Request)
  // optional uint32 appid = 1;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // repeated .CProductInfo_SetRichPresenceLocalization_Request.LanguageSection languages = 2;
  for (unsigned int i = 0, n = this->languages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->languages(i), output);
  }

  // optional uint64 steamid = 3;
  if (has_steamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CProductInfo_SetRichPresenceLocalization_Request)
}

::google::protobuf::uint8* CProductInfo_SetRichPresenceLocalization_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CProductInfo_SetRichPresenceLocalization_Request)
  // optional uint32 appid = 1;
  if (has_appid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // repeated .CProductInfo_SetRichPresenceLocalization_Request.LanguageSection languages = 2;
  for (unsigned int i = 0, n = this->languages_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->languages(i), false, target);
  }

  // optional uint64 steamid = 3;
  if (has_steamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CProductInfo_SetRichPresenceLocalization_Request)
  return target;
}

size_t CProductInfo_SetRichPresenceLocalization_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CProductInfo_SetRichPresenceLocalization_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .CProductInfo_SetRichPresenceLocalization_Request.LanguageSection languages = 2;
  {
    unsigned int count = this->languages_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->languages(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 steamid = 3;
    if (has_steamid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->steamid());
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProductInfo_SetRichPresenceLocalization_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CProductInfo_SetRichPresenceLocalization_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CProductInfo_SetRichPresenceLocalization_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CProductInfo_SetRichPresenceLocalization_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CProductInfo_SetRichPresenceLocalization_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CProductInfo_SetRichPresenceLocalization_Request)
    MergeFrom(*source);
  }
}

void CProductInfo_SetRichPresenceLocalization_Request::MergeFrom(const CProductInfo_SetRichPresenceLocalization_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CProductInfo_SetRichPresenceLocalization_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  languages_.MergeFrom(from.languages_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_steamid()) {
      set_steamid(from.steamid());
    }
    if (from.has_appid()) {
      set_appid(from.appid());
    }
  }
}

void CProductInfo_SetRichPresenceLocalization_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CProductInfo_SetRichPresenceLocalization_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProductInfo_SetRichPresenceLocalization_Request::CopyFrom(const CProductInfo_SetRichPresenceLocalization_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CProductInfo_SetRichPresenceLocalization_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProductInfo_SetRichPresenceLocalization_Request::IsInitialized() const {
  return true;
}

void CProductInfo_SetRichPresenceLocalization_Request::Swap(CProductInfo_SetRichPresenceLocalization_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProductInfo_SetRichPresenceLocalization_Request::InternalSwap(CProductInfo_SetRichPresenceLocalization_Request* other) {
  languages_.UnsafeArenaSwap(&other->languages_);
  std::swap(steamid_, other->steamid_);
  std::swap(appid_, other->appid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CProductInfo_SetRichPresenceLocalization_Request::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[44];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CProductInfo_SetRichPresenceLocalization_Request

// optional uint32 appid = 1;
bool CProductInfo_SetRichPresenceLocalization_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CProductInfo_SetRichPresenceLocalization_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
void CProductInfo_SetRichPresenceLocalization_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CProductInfo_SetRichPresenceLocalization_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
::google::protobuf::uint32 CProductInfo_SetRichPresenceLocalization_Request::appid() const {
  // @@protoc_insertion_point(field_get:CProductInfo_SetRichPresenceLocalization_Request.appid)
  return appid_;
}
void CProductInfo_SetRichPresenceLocalization_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:CProductInfo_SetRichPresenceLocalization_Request.appid)
}

// repeated .CProductInfo_SetRichPresenceLocalization_Request.LanguageSection languages = 2;
int CProductInfo_SetRichPresenceLocalization_Request::languages_size() const {
  return languages_.size();
}
void CProductInfo_SetRichPresenceLocalization_Request::clear_languages() {
  languages_.Clear();
}
const ::CProductInfo_SetRichPresenceLocalization_Request_LanguageSection& CProductInfo_SetRichPresenceLocalization_Request::languages(int index) const {
  // @@protoc_insertion_point(field_get:CProductInfo_SetRichPresenceLocalization_Request.languages)
  return languages_.Get(index);
}
::CProductInfo_SetRichPresenceLocalization_Request_LanguageSection* CProductInfo_SetRichPresenceLocalization_Request::mutable_languages(int index) {
  // @@protoc_insertion_point(field_mutable:CProductInfo_SetRichPresenceLocalization_Request.languages)
  return languages_.Mutable(index);
}
::CProductInfo_SetRichPresenceLocalization_Request_LanguageSection* CProductInfo_SetRichPresenceLocalization_Request::add_languages() {
  // @@protoc_insertion_point(field_add:CProductInfo_SetRichPresenceLocalization_Request.languages)
  return languages_.Add();
}
::google::protobuf::RepeatedPtrField< ::CProductInfo_SetRichPresenceLocalization_Request_LanguageSection >*
CProductInfo_SetRichPresenceLocalization_Request::mutable_languages() {
  // @@protoc_insertion_point(field_mutable_list:CProductInfo_SetRichPresenceLocalization_Request.languages)
  return &languages_;
}
const ::google::protobuf::RepeatedPtrField< ::CProductInfo_SetRichPresenceLocalization_Request_LanguageSection >&
CProductInfo_SetRichPresenceLocalization_Request::languages() const {
  // @@protoc_insertion_point(field_list:CProductInfo_SetRichPresenceLocalization_Request.languages)
  return languages_;
}

// optional uint64 steamid = 3;
bool CProductInfo_SetRichPresenceLocalization_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CProductInfo_SetRichPresenceLocalization_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CProductInfo_SetRichPresenceLocalization_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CProductInfo_SetRichPresenceLocalization_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
::google::protobuf::uint64 CProductInfo_SetRichPresenceLocalization_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CProductInfo_SetRichPresenceLocalization_Request.steamid)
  return steamid_;
}
void CProductInfo_SetRichPresenceLocalization_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CProductInfo_SetRichPresenceLocalization_Request.steamid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProductInfo_SetRichPresenceLocalization_Response::CProductInfo_SetRichPresenceLocalization_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CProductInfo_SetRichPresenceLocalization_Response)
}
CProductInfo_SetRichPresenceLocalization_Response::CProductInfo_SetRichPresenceLocalization_Response(const CProductInfo_SetRichPresenceLocalization_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CProductInfo_SetRichPresenceLocalization_Response)
}

void CProductInfo_SetRichPresenceLocalization_Response::SharedCtor() {
  _cached_size_ = 0;
}

CProductInfo_SetRichPresenceLocalization_Response::~CProductInfo_SetRichPresenceLocalization_Response() {
  // @@protoc_insertion_point(destructor:CProductInfo_SetRichPresenceLocalization_Response)
  SharedDtor();
}

void CProductInfo_SetRichPresenceLocalization_Response::SharedDtor() {
}

void CProductInfo_SetRichPresenceLocalization_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProductInfo_SetRichPresenceLocalization_Response::descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[45].descriptor;
}

const CProductInfo_SetRichPresenceLocalization_Response& CProductInfo_SetRichPresenceLocalization_Response::default_instance() {
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CProductInfo_SetRichPresenceLocalization_Response* CProductInfo_SetRichPresenceLocalization_Response::New(::google::protobuf::Arena* arena) const {
  CProductInfo_SetRichPresenceLocalization_Response* n = new CProductInfo_SetRichPresenceLocalization_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CProductInfo_SetRichPresenceLocalization_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CProductInfo_SetRichPresenceLocalization_Response)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CProductInfo_SetRichPresenceLocalization_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CProductInfo_SetRichPresenceLocalization_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CProductInfo_SetRichPresenceLocalization_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CProductInfo_SetRichPresenceLocalization_Response)
  return false;
#undef DO_
}

void CProductInfo_SetRichPresenceLocalization_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CProductInfo_SetRichPresenceLocalization_Response)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CProductInfo_SetRichPresenceLocalization_Response)
}

::google::protobuf::uint8* CProductInfo_SetRichPresenceLocalization_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CProductInfo_SetRichPresenceLocalization_Response)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CProductInfo_SetRichPresenceLocalization_Response)
  return target;
}

size_t CProductInfo_SetRichPresenceLocalization_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CProductInfo_SetRichPresenceLocalization_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProductInfo_SetRichPresenceLocalization_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CProductInfo_SetRichPresenceLocalization_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CProductInfo_SetRichPresenceLocalization_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CProductInfo_SetRichPresenceLocalization_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CProductInfo_SetRichPresenceLocalization_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CProductInfo_SetRichPresenceLocalization_Response)
    MergeFrom(*source);
  }
}

void CProductInfo_SetRichPresenceLocalization_Response::MergeFrom(const CProductInfo_SetRichPresenceLocalization_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CProductInfo_SetRichPresenceLocalization_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void CProductInfo_SetRichPresenceLocalization_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CProductInfo_SetRichPresenceLocalization_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProductInfo_SetRichPresenceLocalization_Response::CopyFrom(const CProductInfo_SetRichPresenceLocalization_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CProductInfo_SetRichPresenceLocalization_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProductInfo_SetRichPresenceLocalization_Response::IsInitialized() const {
  return true;
}

void CProductInfo_SetRichPresenceLocalization_Response::Swap(CProductInfo_SetRichPresenceLocalization_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProductInfo_SetRichPresenceLocalization_Response::InternalSwap(CProductInfo_SetRichPresenceLocalization_Response* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CProductInfo_SetRichPresenceLocalization_Response::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[45];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CProductInfo_SetRichPresenceLocalization_Response

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
