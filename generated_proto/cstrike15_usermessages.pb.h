// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cstrike15_usermessages.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cstrike15_5fusermessages_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_cstrike15_5fusermessages_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3018000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3018003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
#include "netmessages.pb.h"
#include "cstrike15_gcmessages.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_cstrike15_5fusermessages_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_cstrike15_5fusermessages_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[68]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_cstrike15_5fusermessages_2eproto;
class CCSUsrMsg_AchievementEvent;
struct CCSUsrMsg_AchievementEventDefaultTypeInternal;
extern CCSUsrMsg_AchievementEventDefaultTypeInternal _CCSUsrMsg_AchievementEvent_default_instance_;
class CCSUsrMsg_AdjustMoney;
struct CCSUsrMsg_AdjustMoneyDefaultTypeInternal;
extern CCSUsrMsg_AdjustMoneyDefaultTypeInternal _CCSUsrMsg_AdjustMoney_default_instance_;
class CCSUsrMsg_AmmoDenied;
struct CCSUsrMsg_AmmoDeniedDefaultTypeInternal;
extern CCSUsrMsg_AmmoDeniedDefaultTypeInternal _CCSUsrMsg_AmmoDenied_default_instance_;
class CCSUsrMsg_BarTime;
struct CCSUsrMsg_BarTimeDefaultTypeInternal;
extern CCSUsrMsg_BarTimeDefaultTypeInternal _CCSUsrMsg_BarTime_default_instance_;
class CCSUsrMsg_CallVoteFailed;
struct CCSUsrMsg_CallVoteFailedDefaultTypeInternal;
extern CCSUsrMsg_CallVoteFailedDefaultTypeInternal _CCSUsrMsg_CallVoteFailed_default_instance_;
class CCSUsrMsg_ClientInfo;
struct CCSUsrMsg_ClientInfoDefaultTypeInternal;
extern CCSUsrMsg_ClientInfoDefaultTypeInternal _CCSUsrMsg_ClientInfo_default_instance_;
class CCSUsrMsg_CloseCaption;
struct CCSUsrMsg_CloseCaptionDefaultTypeInternal;
extern CCSUsrMsg_CloseCaptionDefaultTypeInternal _CCSUsrMsg_CloseCaption_default_instance_;
class CCSUsrMsg_CloseCaptionDirect;
struct CCSUsrMsg_CloseCaptionDirectDefaultTypeInternal;
extern CCSUsrMsg_CloseCaptionDirectDefaultTypeInternal _CCSUsrMsg_CloseCaptionDirect_default_instance_;
class CCSUsrMsg_CurrentTimescale;
struct CCSUsrMsg_CurrentTimescaleDefaultTypeInternal;
extern CCSUsrMsg_CurrentTimescaleDefaultTypeInternal _CCSUsrMsg_CurrentTimescale_default_instance_;
class CCSUsrMsg_Damage;
struct CCSUsrMsg_DamageDefaultTypeInternal;
extern CCSUsrMsg_DamageDefaultTypeInternal _CCSUsrMsg_Damage_default_instance_;
class CCSUsrMsg_DesiredTimescale;
struct CCSUsrMsg_DesiredTimescaleDefaultTypeInternal;
extern CCSUsrMsg_DesiredTimescaleDefaultTypeInternal _CCSUsrMsg_DesiredTimescale_default_instance_;
class CCSUsrMsg_DisconnectToLobby;
struct CCSUsrMsg_DisconnectToLobbyDefaultTypeInternal;
extern CCSUsrMsg_DisconnectToLobbyDefaultTypeInternal _CCSUsrMsg_DisconnectToLobby_default_instance_;
class CCSUsrMsg_DisplayInventory;
struct CCSUsrMsg_DisplayInventoryDefaultTypeInternal;
extern CCSUsrMsg_DisplayInventoryDefaultTypeInternal _CCSUsrMsg_DisplayInventory_default_instance_;
class CCSUsrMsg_Fade;
struct CCSUsrMsg_FadeDefaultTypeInternal;
extern CCSUsrMsg_FadeDefaultTypeInternal _CCSUsrMsg_Fade_default_instance_;
class CCSUsrMsg_GameTitle;
struct CCSUsrMsg_GameTitleDefaultTypeInternal;
extern CCSUsrMsg_GameTitleDefaultTypeInternal _CCSUsrMsg_GameTitle_default_instance_;
class CCSUsrMsg_Geiger;
struct CCSUsrMsg_GeigerDefaultTypeInternal;
extern CCSUsrMsg_GeigerDefaultTypeInternal _CCSUsrMsg_Geiger_default_instance_;
class CCSUsrMsg_GlowPropTurnOff;
struct CCSUsrMsg_GlowPropTurnOffDefaultTypeInternal;
extern CCSUsrMsg_GlowPropTurnOffDefaultTypeInternal _CCSUsrMsg_GlowPropTurnOff_default_instance_;
class CCSUsrMsg_HintText;
struct CCSUsrMsg_HintTextDefaultTypeInternal;
extern CCSUsrMsg_HintTextDefaultTypeInternal _CCSUsrMsg_HintText_default_instance_;
class CCSUsrMsg_HudMsg;
struct CCSUsrMsg_HudMsgDefaultTypeInternal;
extern CCSUsrMsg_HudMsgDefaultTypeInternal _CCSUsrMsg_HudMsg_default_instance_;
class CCSUsrMsg_HudText;
struct CCSUsrMsg_HudTextDefaultTypeInternal;
extern CCSUsrMsg_HudTextDefaultTypeInternal _CCSUsrMsg_HudText_default_instance_;
class CCSUsrMsg_ItemDrop;
struct CCSUsrMsg_ItemDropDefaultTypeInternal;
extern CCSUsrMsg_ItemDropDefaultTypeInternal _CCSUsrMsg_ItemDrop_default_instance_;
class CCSUsrMsg_ItemPickup;
struct CCSUsrMsg_ItemPickupDefaultTypeInternal;
extern CCSUsrMsg_ItemPickupDefaultTypeInternal _CCSUsrMsg_ItemPickup_default_instance_;
class CCSUsrMsg_KeyHintText;
struct CCSUsrMsg_KeyHintTextDefaultTypeInternal;
extern CCSUsrMsg_KeyHintTextDefaultTypeInternal _CCSUsrMsg_KeyHintText_default_instance_;
class CCSUsrMsg_KillCam;
struct CCSUsrMsg_KillCamDefaultTypeInternal;
extern CCSUsrMsg_KillCamDefaultTypeInternal _CCSUsrMsg_KillCam_default_instance_;
class CCSUsrMsg_MarkAchievement;
struct CCSUsrMsg_MarkAchievementDefaultTypeInternal;
extern CCSUsrMsg_MarkAchievementDefaultTypeInternal _CCSUsrMsg_MarkAchievement_default_instance_;
class CCSUsrMsg_MatchEndConditions;
struct CCSUsrMsg_MatchEndConditionsDefaultTypeInternal;
extern CCSUsrMsg_MatchEndConditionsDefaultTypeInternal _CCSUsrMsg_MatchEndConditions_default_instance_;
class CCSUsrMsg_MatchStatsUpdate;
struct CCSUsrMsg_MatchStatsUpdateDefaultTypeInternal;
extern CCSUsrMsg_MatchStatsUpdateDefaultTypeInternal _CCSUsrMsg_MatchStatsUpdate_default_instance_;
class CCSUsrMsg_PlayerDecalDigitalSignature;
struct CCSUsrMsg_PlayerDecalDigitalSignatureDefaultTypeInternal;
extern CCSUsrMsg_PlayerDecalDigitalSignatureDefaultTypeInternal _CCSUsrMsg_PlayerDecalDigitalSignature_default_instance_;
class CCSUsrMsg_PlayerStatsUpdate;
struct CCSUsrMsg_PlayerStatsUpdateDefaultTypeInternal;
extern CCSUsrMsg_PlayerStatsUpdateDefaultTypeInternal _CCSUsrMsg_PlayerStatsUpdate_default_instance_;
class CCSUsrMsg_PlayerStatsUpdate_Stat;
struct CCSUsrMsg_PlayerStatsUpdate_StatDefaultTypeInternal;
extern CCSUsrMsg_PlayerStatsUpdate_StatDefaultTypeInternal _CCSUsrMsg_PlayerStatsUpdate_Stat_default_instance_;
class CCSUsrMsg_ProcessSpottedEntityUpdate;
struct CCSUsrMsg_ProcessSpottedEntityUpdateDefaultTypeInternal;
extern CCSUsrMsg_ProcessSpottedEntityUpdateDefaultTypeInternal _CCSUsrMsg_ProcessSpottedEntityUpdate_default_instance_;
class CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate;
struct CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdateDefaultTypeInternal;
extern CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdateDefaultTypeInternal _CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate_default_instance_;
class CCSUsrMsg_QuestProgress;
struct CCSUsrMsg_QuestProgressDefaultTypeInternal;
extern CCSUsrMsg_QuestProgressDefaultTypeInternal _CCSUsrMsg_QuestProgress_default_instance_;
class CCSUsrMsg_RadioText;
struct CCSUsrMsg_RadioTextDefaultTypeInternal;
extern CCSUsrMsg_RadioTextDefaultTypeInternal _CCSUsrMsg_RadioText_default_instance_;
class CCSUsrMsg_RawAudio;
struct CCSUsrMsg_RawAudioDefaultTypeInternal;
extern CCSUsrMsg_RawAudioDefaultTypeInternal _CCSUsrMsg_RawAudio_default_instance_;
class CCSUsrMsg_ReloadEffect;
struct CCSUsrMsg_ReloadEffectDefaultTypeInternal;
extern CCSUsrMsg_ReloadEffectDefaultTypeInternal _CCSUsrMsg_ReloadEffect_default_instance_;
class CCSUsrMsg_ReportHit;
struct CCSUsrMsg_ReportHitDefaultTypeInternal;
extern CCSUsrMsg_ReportHitDefaultTypeInternal _CCSUsrMsg_ReportHit_default_instance_;
class CCSUsrMsg_RequestState;
struct CCSUsrMsg_RequestStateDefaultTypeInternal;
extern CCSUsrMsg_RequestStateDefaultTypeInternal _CCSUsrMsg_RequestState_default_instance_;
class CCSUsrMsg_ResetHud;
struct CCSUsrMsg_ResetHudDefaultTypeInternal;
extern CCSUsrMsg_ResetHudDefaultTypeInternal _CCSUsrMsg_ResetHud_default_instance_;
class CCSUsrMsg_RoundBackupFilenames;
struct CCSUsrMsg_RoundBackupFilenamesDefaultTypeInternal;
extern CCSUsrMsg_RoundBackupFilenamesDefaultTypeInternal _CCSUsrMsg_RoundBackupFilenames_default_instance_;
class CCSUsrMsg_Rumble;
struct CCSUsrMsg_RumbleDefaultTypeInternal;
extern CCSUsrMsg_RumbleDefaultTypeInternal _CCSUsrMsg_Rumble_default_instance_;
class CCSUsrMsg_SayText;
struct CCSUsrMsg_SayTextDefaultTypeInternal;
extern CCSUsrMsg_SayTextDefaultTypeInternal _CCSUsrMsg_SayText_default_instance_;
class CCSUsrMsg_SayText2;
struct CCSUsrMsg_SayText2DefaultTypeInternal;
extern CCSUsrMsg_SayText2DefaultTypeInternal _CCSUsrMsg_SayText2_default_instance_;
class CCSUsrMsg_ScoreLeaderboardData;
struct CCSUsrMsg_ScoreLeaderboardDataDefaultTypeInternal;
extern CCSUsrMsg_ScoreLeaderboardDataDefaultTypeInternal _CCSUsrMsg_ScoreLeaderboardData_default_instance_;
class CCSUsrMsg_SendAudio;
struct CCSUsrMsg_SendAudioDefaultTypeInternal;
extern CCSUsrMsg_SendAudioDefaultTypeInternal _CCSUsrMsg_SendAudio_default_instance_;
class CCSUsrMsg_SendLastKillerDamageToClient;
struct CCSUsrMsg_SendLastKillerDamageToClientDefaultTypeInternal;
extern CCSUsrMsg_SendLastKillerDamageToClientDefaultTypeInternal _CCSUsrMsg_SendLastKillerDamageToClient_default_instance_;
class CCSUsrMsg_SendPlayerItemDrops;
struct CCSUsrMsg_SendPlayerItemDropsDefaultTypeInternal;
extern CCSUsrMsg_SendPlayerItemDropsDefaultTypeInternal _CCSUsrMsg_SendPlayerItemDrops_default_instance_;
class CCSUsrMsg_SendPlayerItemFound;
struct CCSUsrMsg_SendPlayerItemFoundDefaultTypeInternal;
extern CCSUsrMsg_SendPlayerItemFoundDefaultTypeInternal _CCSUsrMsg_SendPlayerItemFound_default_instance_;
class CCSUsrMsg_ServerRankRevealAll;
struct CCSUsrMsg_ServerRankRevealAllDefaultTypeInternal;
extern CCSUsrMsg_ServerRankRevealAllDefaultTypeInternal _CCSUsrMsg_ServerRankRevealAll_default_instance_;
class CCSUsrMsg_ServerRankUpdate;
struct CCSUsrMsg_ServerRankUpdateDefaultTypeInternal;
extern CCSUsrMsg_ServerRankUpdateDefaultTypeInternal _CCSUsrMsg_ServerRankUpdate_default_instance_;
class CCSUsrMsg_ServerRankUpdate_RankUpdate;
struct CCSUsrMsg_ServerRankUpdate_RankUpdateDefaultTypeInternal;
extern CCSUsrMsg_ServerRankUpdate_RankUpdateDefaultTypeInternal _CCSUsrMsg_ServerRankUpdate_RankUpdate_default_instance_;
class CCSUsrMsg_Shake;
struct CCSUsrMsg_ShakeDefaultTypeInternal;
extern CCSUsrMsg_ShakeDefaultTypeInternal _CCSUsrMsg_Shake_default_instance_;
class CCSUsrMsg_ShowMenu;
struct CCSUsrMsg_ShowMenuDefaultTypeInternal;
extern CCSUsrMsg_ShowMenuDefaultTypeInternal _CCSUsrMsg_ShowMenu_default_instance_;
class CCSUsrMsg_StopSpectatorMode;
struct CCSUsrMsg_StopSpectatorModeDefaultTypeInternal;
extern CCSUsrMsg_StopSpectatorModeDefaultTypeInternal _CCSUsrMsg_StopSpectatorMode_default_instance_;
class CCSUsrMsg_TextMsg;
struct CCSUsrMsg_TextMsgDefaultTypeInternal;
extern CCSUsrMsg_TextMsgDefaultTypeInternal _CCSUsrMsg_TextMsg_default_instance_;
class CCSUsrMsg_Train;
struct CCSUsrMsg_TrainDefaultTypeInternal;
extern CCSUsrMsg_TrainDefaultTypeInternal _CCSUsrMsg_Train_default_instance_;
class CCSUsrMsg_VGUIMenu;
struct CCSUsrMsg_VGUIMenuDefaultTypeInternal;
extern CCSUsrMsg_VGUIMenuDefaultTypeInternal _CCSUsrMsg_VGUIMenu_default_instance_;
class CCSUsrMsg_VGUIMenu_Subkey;
struct CCSUsrMsg_VGUIMenu_SubkeyDefaultTypeInternal;
extern CCSUsrMsg_VGUIMenu_SubkeyDefaultTypeInternal _CCSUsrMsg_VGUIMenu_Subkey_default_instance_;
class CCSUsrMsg_VoiceMask;
struct CCSUsrMsg_VoiceMaskDefaultTypeInternal;
extern CCSUsrMsg_VoiceMaskDefaultTypeInternal _CCSUsrMsg_VoiceMask_default_instance_;
class CCSUsrMsg_VoiceMask_PlayerMask;
struct CCSUsrMsg_VoiceMask_PlayerMaskDefaultTypeInternal;
extern CCSUsrMsg_VoiceMask_PlayerMaskDefaultTypeInternal _CCSUsrMsg_VoiceMask_PlayerMask_default_instance_;
class CCSUsrMsg_VoteFailed;
struct CCSUsrMsg_VoteFailedDefaultTypeInternal;
extern CCSUsrMsg_VoteFailedDefaultTypeInternal _CCSUsrMsg_VoteFailed_default_instance_;
class CCSUsrMsg_VotePass;
struct CCSUsrMsg_VotePassDefaultTypeInternal;
extern CCSUsrMsg_VotePassDefaultTypeInternal _CCSUsrMsg_VotePass_default_instance_;
class CCSUsrMsg_VoteSetup;
struct CCSUsrMsg_VoteSetupDefaultTypeInternal;
extern CCSUsrMsg_VoteSetupDefaultTypeInternal _CCSUsrMsg_VoteSetup_default_instance_;
class CCSUsrMsg_VoteStart;
struct CCSUsrMsg_VoteStartDefaultTypeInternal;
extern CCSUsrMsg_VoteStartDefaultTypeInternal _CCSUsrMsg_VoteStart_default_instance_;
class CCSUsrMsg_WarmupHasEnded;
struct CCSUsrMsg_WarmupHasEndedDefaultTypeInternal;
extern CCSUsrMsg_WarmupHasEndedDefaultTypeInternal _CCSUsrMsg_WarmupHasEnded_default_instance_;
class CCSUsrMsg_XRankGet;
struct CCSUsrMsg_XRankGetDefaultTypeInternal;
extern CCSUsrMsg_XRankGetDefaultTypeInternal _CCSUsrMsg_XRankGet_default_instance_;
class CCSUsrMsg_XRankUpd;
struct CCSUsrMsg_XRankUpdDefaultTypeInternal;
extern CCSUsrMsg_XRankUpdDefaultTypeInternal _CCSUsrMsg_XRankUpd_default_instance_;
class CCSUsrMsg_XpUpdate;
struct CCSUsrMsg_XpUpdateDefaultTypeInternal;
extern CCSUsrMsg_XpUpdateDefaultTypeInternal _CCSUsrMsg_XpUpdate_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CCSUsrMsg_AchievementEvent* Arena::CreateMaybeMessage<::CCSUsrMsg_AchievementEvent>(Arena*);
template<> ::CCSUsrMsg_AdjustMoney* Arena::CreateMaybeMessage<::CCSUsrMsg_AdjustMoney>(Arena*);
template<> ::CCSUsrMsg_AmmoDenied* Arena::CreateMaybeMessage<::CCSUsrMsg_AmmoDenied>(Arena*);
template<> ::CCSUsrMsg_BarTime* Arena::CreateMaybeMessage<::CCSUsrMsg_BarTime>(Arena*);
template<> ::CCSUsrMsg_CallVoteFailed* Arena::CreateMaybeMessage<::CCSUsrMsg_CallVoteFailed>(Arena*);
template<> ::CCSUsrMsg_ClientInfo* Arena::CreateMaybeMessage<::CCSUsrMsg_ClientInfo>(Arena*);
template<> ::CCSUsrMsg_CloseCaption* Arena::CreateMaybeMessage<::CCSUsrMsg_CloseCaption>(Arena*);
template<> ::CCSUsrMsg_CloseCaptionDirect* Arena::CreateMaybeMessage<::CCSUsrMsg_CloseCaptionDirect>(Arena*);
template<> ::CCSUsrMsg_CurrentTimescale* Arena::CreateMaybeMessage<::CCSUsrMsg_CurrentTimescale>(Arena*);
template<> ::CCSUsrMsg_Damage* Arena::CreateMaybeMessage<::CCSUsrMsg_Damage>(Arena*);
template<> ::CCSUsrMsg_DesiredTimescale* Arena::CreateMaybeMessage<::CCSUsrMsg_DesiredTimescale>(Arena*);
template<> ::CCSUsrMsg_DisconnectToLobby* Arena::CreateMaybeMessage<::CCSUsrMsg_DisconnectToLobby>(Arena*);
template<> ::CCSUsrMsg_DisplayInventory* Arena::CreateMaybeMessage<::CCSUsrMsg_DisplayInventory>(Arena*);
template<> ::CCSUsrMsg_Fade* Arena::CreateMaybeMessage<::CCSUsrMsg_Fade>(Arena*);
template<> ::CCSUsrMsg_GameTitle* Arena::CreateMaybeMessage<::CCSUsrMsg_GameTitle>(Arena*);
template<> ::CCSUsrMsg_Geiger* Arena::CreateMaybeMessage<::CCSUsrMsg_Geiger>(Arena*);
template<> ::CCSUsrMsg_GlowPropTurnOff* Arena::CreateMaybeMessage<::CCSUsrMsg_GlowPropTurnOff>(Arena*);
template<> ::CCSUsrMsg_HintText* Arena::CreateMaybeMessage<::CCSUsrMsg_HintText>(Arena*);
template<> ::CCSUsrMsg_HudMsg* Arena::CreateMaybeMessage<::CCSUsrMsg_HudMsg>(Arena*);
template<> ::CCSUsrMsg_HudText* Arena::CreateMaybeMessage<::CCSUsrMsg_HudText>(Arena*);
template<> ::CCSUsrMsg_ItemDrop* Arena::CreateMaybeMessage<::CCSUsrMsg_ItemDrop>(Arena*);
template<> ::CCSUsrMsg_ItemPickup* Arena::CreateMaybeMessage<::CCSUsrMsg_ItemPickup>(Arena*);
template<> ::CCSUsrMsg_KeyHintText* Arena::CreateMaybeMessage<::CCSUsrMsg_KeyHintText>(Arena*);
template<> ::CCSUsrMsg_KillCam* Arena::CreateMaybeMessage<::CCSUsrMsg_KillCam>(Arena*);
template<> ::CCSUsrMsg_MarkAchievement* Arena::CreateMaybeMessage<::CCSUsrMsg_MarkAchievement>(Arena*);
template<> ::CCSUsrMsg_MatchEndConditions* Arena::CreateMaybeMessage<::CCSUsrMsg_MatchEndConditions>(Arena*);
template<> ::CCSUsrMsg_MatchStatsUpdate* Arena::CreateMaybeMessage<::CCSUsrMsg_MatchStatsUpdate>(Arena*);
template<> ::CCSUsrMsg_PlayerDecalDigitalSignature* Arena::CreateMaybeMessage<::CCSUsrMsg_PlayerDecalDigitalSignature>(Arena*);
template<> ::CCSUsrMsg_PlayerStatsUpdate* Arena::CreateMaybeMessage<::CCSUsrMsg_PlayerStatsUpdate>(Arena*);
template<> ::CCSUsrMsg_PlayerStatsUpdate_Stat* Arena::CreateMaybeMessage<::CCSUsrMsg_PlayerStatsUpdate_Stat>(Arena*);
template<> ::CCSUsrMsg_ProcessSpottedEntityUpdate* Arena::CreateMaybeMessage<::CCSUsrMsg_ProcessSpottedEntityUpdate>(Arena*);
template<> ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* Arena::CreateMaybeMessage<::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate>(Arena*);
template<> ::CCSUsrMsg_QuestProgress* Arena::CreateMaybeMessage<::CCSUsrMsg_QuestProgress>(Arena*);
template<> ::CCSUsrMsg_RadioText* Arena::CreateMaybeMessage<::CCSUsrMsg_RadioText>(Arena*);
template<> ::CCSUsrMsg_RawAudio* Arena::CreateMaybeMessage<::CCSUsrMsg_RawAudio>(Arena*);
template<> ::CCSUsrMsg_ReloadEffect* Arena::CreateMaybeMessage<::CCSUsrMsg_ReloadEffect>(Arena*);
template<> ::CCSUsrMsg_ReportHit* Arena::CreateMaybeMessage<::CCSUsrMsg_ReportHit>(Arena*);
template<> ::CCSUsrMsg_RequestState* Arena::CreateMaybeMessage<::CCSUsrMsg_RequestState>(Arena*);
template<> ::CCSUsrMsg_ResetHud* Arena::CreateMaybeMessage<::CCSUsrMsg_ResetHud>(Arena*);
template<> ::CCSUsrMsg_RoundBackupFilenames* Arena::CreateMaybeMessage<::CCSUsrMsg_RoundBackupFilenames>(Arena*);
template<> ::CCSUsrMsg_Rumble* Arena::CreateMaybeMessage<::CCSUsrMsg_Rumble>(Arena*);
template<> ::CCSUsrMsg_SayText* Arena::CreateMaybeMessage<::CCSUsrMsg_SayText>(Arena*);
template<> ::CCSUsrMsg_SayText2* Arena::CreateMaybeMessage<::CCSUsrMsg_SayText2>(Arena*);
template<> ::CCSUsrMsg_ScoreLeaderboardData* Arena::CreateMaybeMessage<::CCSUsrMsg_ScoreLeaderboardData>(Arena*);
template<> ::CCSUsrMsg_SendAudio* Arena::CreateMaybeMessage<::CCSUsrMsg_SendAudio>(Arena*);
template<> ::CCSUsrMsg_SendLastKillerDamageToClient* Arena::CreateMaybeMessage<::CCSUsrMsg_SendLastKillerDamageToClient>(Arena*);
template<> ::CCSUsrMsg_SendPlayerItemDrops* Arena::CreateMaybeMessage<::CCSUsrMsg_SendPlayerItemDrops>(Arena*);
template<> ::CCSUsrMsg_SendPlayerItemFound* Arena::CreateMaybeMessage<::CCSUsrMsg_SendPlayerItemFound>(Arena*);
template<> ::CCSUsrMsg_ServerRankRevealAll* Arena::CreateMaybeMessage<::CCSUsrMsg_ServerRankRevealAll>(Arena*);
template<> ::CCSUsrMsg_ServerRankUpdate* Arena::CreateMaybeMessage<::CCSUsrMsg_ServerRankUpdate>(Arena*);
template<> ::CCSUsrMsg_ServerRankUpdate_RankUpdate* Arena::CreateMaybeMessage<::CCSUsrMsg_ServerRankUpdate_RankUpdate>(Arena*);
template<> ::CCSUsrMsg_Shake* Arena::CreateMaybeMessage<::CCSUsrMsg_Shake>(Arena*);
template<> ::CCSUsrMsg_ShowMenu* Arena::CreateMaybeMessage<::CCSUsrMsg_ShowMenu>(Arena*);
template<> ::CCSUsrMsg_StopSpectatorMode* Arena::CreateMaybeMessage<::CCSUsrMsg_StopSpectatorMode>(Arena*);
template<> ::CCSUsrMsg_TextMsg* Arena::CreateMaybeMessage<::CCSUsrMsg_TextMsg>(Arena*);
template<> ::CCSUsrMsg_Train* Arena::CreateMaybeMessage<::CCSUsrMsg_Train>(Arena*);
template<> ::CCSUsrMsg_VGUIMenu* Arena::CreateMaybeMessage<::CCSUsrMsg_VGUIMenu>(Arena*);
template<> ::CCSUsrMsg_VGUIMenu_Subkey* Arena::CreateMaybeMessage<::CCSUsrMsg_VGUIMenu_Subkey>(Arena*);
template<> ::CCSUsrMsg_VoiceMask* Arena::CreateMaybeMessage<::CCSUsrMsg_VoiceMask>(Arena*);
template<> ::CCSUsrMsg_VoiceMask_PlayerMask* Arena::CreateMaybeMessage<::CCSUsrMsg_VoiceMask_PlayerMask>(Arena*);
template<> ::CCSUsrMsg_VoteFailed* Arena::CreateMaybeMessage<::CCSUsrMsg_VoteFailed>(Arena*);
template<> ::CCSUsrMsg_VotePass* Arena::CreateMaybeMessage<::CCSUsrMsg_VotePass>(Arena*);
template<> ::CCSUsrMsg_VoteSetup* Arena::CreateMaybeMessage<::CCSUsrMsg_VoteSetup>(Arena*);
template<> ::CCSUsrMsg_VoteStart* Arena::CreateMaybeMessage<::CCSUsrMsg_VoteStart>(Arena*);
template<> ::CCSUsrMsg_WarmupHasEnded* Arena::CreateMaybeMessage<::CCSUsrMsg_WarmupHasEnded>(Arena*);
template<> ::CCSUsrMsg_XRankGet* Arena::CreateMaybeMessage<::CCSUsrMsg_XRankGet>(Arena*);
template<> ::CCSUsrMsg_XRankUpd* Arena::CreateMaybeMessage<::CCSUsrMsg_XRankUpd>(Arena*);
template<> ::CCSUsrMsg_XpUpdate* Arena::CreateMaybeMessage<::CCSUsrMsg_XpUpdate>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum ECstrike15UserMessages : int {
  CS_UM_VGUIMenu = 1,
  CS_UM_Geiger = 2,
  CS_UM_Train = 3,
  CS_UM_HudText = 4,
  CS_UM_SayText = 5,
  CS_UM_SayText2 = 6,
  CS_UM_TextMsg = 7,
  CS_UM_HudMsg = 8,
  CS_UM_ResetHud = 9,
  CS_UM_GameTitle = 10,
  CS_UM_Shake = 12,
  CS_UM_Fade = 13,
  CS_UM_Rumble = 14,
  CS_UM_CloseCaption = 15,
  CS_UM_CloseCaptionDirect = 16,
  CS_UM_SendAudio = 17,
  CS_UM_RawAudio = 18,
  CS_UM_VoiceMask = 19,
  CS_UM_RequestState = 20,
  CS_UM_Damage = 21,
  CS_UM_RadioText = 22,
  CS_UM_HintText = 23,
  CS_UM_KeyHintText = 24,
  CS_UM_ProcessSpottedEntityUpdate = 25,
  CS_UM_ReloadEffect = 26,
  CS_UM_AdjustMoney = 27,
  CS_UM_UpdateTeamMoney = 28,
  CS_UM_StopSpectatorMode = 29,
  CS_UM_KillCam = 30,
  CS_UM_DesiredTimescale = 31,
  CS_UM_CurrentTimescale = 32,
  CS_UM_AchievementEvent = 33,
  CS_UM_MatchEndConditions = 34,
  CS_UM_DisconnectToLobby = 35,
  CS_UM_PlayerStatsUpdate = 36,
  CS_UM_DisplayInventory = 37,
  CS_UM_WarmupHasEnded = 38,
  CS_UM_ClientInfo = 39,
  CS_UM_XRankGet = 40,
  CS_UM_XRankUpd = 41,
  CS_UM_CallVoteFailed = 45,
  CS_UM_VoteStart = 46,
  CS_UM_VotePass = 47,
  CS_UM_VoteFailed = 48,
  CS_UM_VoteSetup = 49,
  CS_UM_ServerRankRevealAll = 50,
  CS_UM_SendLastKillerDamageToClient = 51,
  CS_UM_ServerRankUpdate = 52,
  CS_UM_ItemPickup = 53,
  CS_UM_ShowMenu = 54,
  CS_UM_BarTime = 55,
  CS_UM_AmmoDenied = 56,
  CS_UM_MarkAchievement = 57,
  CS_UM_MatchStatsUpdate = 58,
  CS_UM_ItemDrop = 59,
  CS_UM_GlowPropTurnOff = 60,
  CS_UM_SendPlayerItemDrops = 61,
  CS_UM_RoundBackupFilenames = 62,
  CS_UM_SendPlayerItemFound = 63,
  CS_UM_ReportHit = 64,
  CS_UM_XpUpdate = 65,
  CS_UM_QuestProgress = 66,
  CS_UM_ScoreLeaderboardData = 67,
  CS_UM_PlayerDecalDigitalSignature = 68
};
bool ECstrike15UserMessages_IsValid(int value);
constexpr ECstrike15UserMessages ECstrike15UserMessages_MIN = CS_UM_VGUIMenu;
constexpr ECstrike15UserMessages ECstrike15UserMessages_MAX = CS_UM_PlayerDecalDigitalSignature;
constexpr int ECstrike15UserMessages_ARRAYSIZE = ECstrike15UserMessages_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECstrike15UserMessages_descriptor();
template<typename T>
inline const std::string& ECstrike15UserMessages_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ECstrike15UserMessages>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ECstrike15UserMessages_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ECstrike15UserMessages_descriptor(), enum_t_value);
}
inline bool ECstrike15UserMessages_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ECstrike15UserMessages* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ECstrike15UserMessages>(
    ECstrike15UserMessages_descriptor(), name, value);
}
// ===================================================================

class CCSUsrMsg_VGUIMenu_Subkey final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_VGUIMenu.Subkey) */ {
 public:
  inline CCSUsrMsg_VGUIMenu_Subkey() : CCSUsrMsg_VGUIMenu_Subkey(nullptr) {}
  ~CCSUsrMsg_VGUIMenu_Subkey() override;
  explicit constexpr CCSUsrMsg_VGUIMenu_Subkey(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_VGUIMenu_Subkey(const CCSUsrMsg_VGUIMenu_Subkey& from);
  CCSUsrMsg_VGUIMenu_Subkey(CCSUsrMsg_VGUIMenu_Subkey&& from) noexcept
    : CCSUsrMsg_VGUIMenu_Subkey() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_VGUIMenu_Subkey& operator=(const CCSUsrMsg_VGUIMenu_Subkey& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_VGUIMenu_Subkey& operator=(CCSUsrMsg_VGUIMenu_Subkey&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_VGUIMenu_Subkey& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_VGUIMenu_Subkey* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_VGUIMenu_Subkey*>(
               &_CCSUsrMsg_VGUIMenu_Subkey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CCSUsrMsg_VGUIMenu_Subkey& a, CCSUsrMsg_VGUIMenu_Subkey& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_VGUIMenu_Subkey* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_VGUIMenu_Subkey* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_VGUIMenu_Subkey* New() const final {
    return new CCSUsrMsg_VGUIMenu_Subkey();
  }

  CCSUsrMsg_VGUIMenu_Subkey* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_VGUIMenu_Subkey>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_VGUIMenu_Subkey& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_VGUIMenu_Subkey& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_VGUIMenu_Subkey* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_VGUIMenu.Subkey";
  }
  protected:
  explicit CCSUsrMsg_VGUIMenu_Subkey(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kStrFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_MUST_USE_RESULT std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string str = 2;
  bool has_str() const;
  private:
  bool _internal_has_str() const;
  public:
  void clear_str();
  const std::string& str() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_str(ArgT0&& arg0, ArgT... args);
  std::string* mutable_str();
  PROTOBUF_MUST_USE_RESULT std::string* release_str();
  void set_allocated_str(std::string* str);
  private:
  const std::string& _internal_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str(const std::string& value);
  std::string* _internal_mutable_str();
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VGUIMenu.Subkey)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr str_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VGUIMenu final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_VGUIMenu) */ {
 public:
  inline CCSUsrMsg_VGUIMenu() : CCSUsrMsg_VGUIMenu(nullptr) {}
  ~CCSUsrMsg_VGUIMenu() override;
  explicit constexpr CCSUsrMsg_VGUIMenu(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_VGUIMenu(const CCSUsrMsg_VGUIMenu& from);
  CCSUsrMsg_VGUIMenu(CCSUsrMsg_VGUIMenu&& from) noexcept
    : CCSUsrMsg_VGUIMenu() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_VGUIMenu& operator=(const CCSUsrMsg_VGUIMenu& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_VGUIMenu& operator=(CCSUsrMsg_VGUIMenu&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_VGUIMenu& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_VGUIMenu* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_VGUIMenu*>(
               &_CCSUsrMsg_VGUIMenu_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CCSUsrMsg_VGUIMenu& a, CCSUsrMsg_VGUIMenu& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_VGUIMenu* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_VGUIMenu* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_VGUIMenu* New() const final {
    return new CCSUsrMsg_VGUIMenu();
  }

  CCSUsrMsg_VGUIMenu* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_VGUIMenu>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_VGUIMenu& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_VGUIMenu& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_VGUIMenu* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_VGUIMenu";
  }
  protected:
  explicit CCSUsrMsg_VGUIMenu(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CCSUsrMsg_VGUIMenu_Subkey Subkey;

  // accessors -------------------------------------------------------

  enum : int {
    kSubkeysFieldNumber = 3,
    kNameFieldNumber = 1,
    kShowFieldNumber = 2,
  };
  // repeated .CCSUsrMsg_VGUIMenu.Subkey subkeys = 3;
  int subkeys_size() const;
  private:
  int _internal_subkeys_size() const;
  public:
  void clear_subkeys();
  ::CCSUsrMsg_VGUIMenu_Subkey* mutable_subkeys(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey >*
      mutable_subkeys();
  private:
  const ::CCSUsrMsg_VGUIMenu_Subkey& _internal_subkeys(int index) const;
  ::CCSUsrMsg_VGUIMenu_Subkey* _internal_add_subkeys();
  public:
  const ::CCSUsrMsg_VGUIMenu_Subkey& subkeys(int index) const;
  ::CCSUsrMsg_VGUIMenu_Subkey* add_subkeys();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey >&
      subkeys() const;

  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_MUST_USE_RESULT std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional bool show = 2;
  bool has_show() const;
  private:
  bool _internal_has_show() const;
  public:
  void clear_show();
  bool show() const;
  void set_show(bool value);
  private:
  bool _internal_show() const;
  void _internal_set_show(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VGUIMenu)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey > subkeys_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  bool show_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Geiger final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_Geiger) */ {
 public:
  inline CCSUsrMsg_Geiger() : CCSUsrMsg_Geiger(nullptr) {}
  ~CCSUsrMsg_Geiger() override;
  explicit constexpr CCSUsrMsg_Geiger(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_Geiger(const CCSUsrMsg_Geiger& from);
  CCSUsrMsg_Geiger(CCSUsrMsg_Geiger&& from) noexcept
    : CCSUsrMsg_Geiger() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_Geiger& operator=(const CCSUsrMsg_Geiger& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_Geiger& operator=(CCSUsrMsg_Geiger&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_Geiger& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_Geiger* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_Geiger*>(
               &_CCSUsrMsg_Geiger_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CCSUsrMsg_Geiger& a, CCSUsrMsg_Geiger& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_Geiger* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_Geiger* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_Geiger* New() const final {
    return new CCSUsrMsg_Geiger();
  }

  CCSUsrMsg_Geiger* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_Geiger>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_Geiger& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_Geiger& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_Geiger* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_Geiger";
  }
  protected:
  explicit CCSUsrMsg_Geiger(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRangeFieldNumber = 1,
  };
  // optional int32 range = 1;
  bool has_range() const;
  private:
  bool _internal_has_range() const;
  public:
  void clear_range();
  ::PROTOBUF_NAMESPACE_ID::int32 range() const;
  void set_range(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_range() const;
  void _internal_set_range(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Geiger)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 range_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Train final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_Train) */ {
 public:
  inline CCSUsrMsg_Train() : CCSUsrMsg_Train(nullptr) {}
  ~CCSUsrMsg_Train() override;
  explicit constexpr CCSUsrMsg_Train(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_Train(const CCSUsrMsg_Train& from);
  CCSUsrMsg_Train(CCSUsrMsg_Train&& from) noexcept
    : CCSUsrMsg_Train() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_Train& operator=(const CCSUsrMsg_Train& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_Train& operator=(CCSUsrMsg_Train&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_Train& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_Train* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_Train*>(
               &_CCSUsrMsg_Train_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CCSUsrMsg_Train& a, CCSUsrMsg_Train& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_Train* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_Train* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_Train* New() const final {
    return new CCSUsrMsg_Train();
  }

  CCSUsrMsg_Train* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_Train>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_Train& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_Train& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_Train* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_Train";
  }
  protected:
  explicit CCSUsrMsg_Train(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrainFieldNumber = 1,
  };
  // optional int32 train = 1;
  bool has_train() const;
  private:
  bool _internal_has_train() const;
  public:
  void clear_train();
  ::PROTOBUF_NAMESPACE_ID::int32 train() const;
  void set_train(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_train() const;
  void _internal_set_train(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Train)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 train_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_HudText final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_HudText) */ {
 public:
  inline CCSUsrMsg_HudText() : CCSUsrMsg_HudText(nullptr) {}
  ~CCSUsrMsg_HudText() override;
  explicit constexpr CCSUsrMsg_HudText(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_HudText(const CCSUsrMsg_HudText& from);
  CCSUsrMsg_HudText(CCSUsrMsg_HudText&& from) noexcept
    : CCSUsrMsg_HudText() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_HudText& operator=(const CCSUsrMsg_HudText& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_HudText& operator=(CCSUsrMsg_HudText&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_HudText& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_HudText* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_HudText*>(
               &_CCSUsrMsg_HudText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CCSUsrMsg_HudText& a, CCSUsrMsg_HudText& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_HudText* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_HudText* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_HudText* New() const final {
    return new CCSUsrMsg_HudText();
  }

  CCSUsrMsg_HudText* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_HudText>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_HudText& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_HudText& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_HudText* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_HudText";
  }
  protected:
  explicit CCSUsrMsg_HudText(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 1,
  };
  // optional string text = 1;
  bool has_text() const;
  private:
  bool _internal_has_text() const;
  public:
  void clear_text();
  const std::string& text() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_text(ArgT0&& arg0, ArgT... args);
  std::string* mutable_text();
  PROTOBUF_MUST_USE_RESULT std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_HudText)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SayText final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_SayText) */ {
 public:
  inline CCSUsrMsg_SayText() : CCSUsrMsg_SayText(nullptr) {}
  ~CCSUsrMsg_SayText() override;
  explicit constexpr CCSUsrMsg_SayText(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_SayText(const CCSUsrMsg_SayText& from);
  CCSUsrMsg_SayText(CCSUsrMsg_SayText&& from) noexcept
    : CCSUsrMsg_SayText() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_SayText& operator=(const CCSUsrMsg_SayText& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_SayText& operator=(CCSUsrMsg_SayText&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_SayText& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_SayText* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_SayText*>(
               &_CCSUsrMsg_SayText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CCSUsrMsg_SayText& a, CCSUsrMsg_SayText& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_SayText* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_SayText* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_SayText* New() const final {
    return new CCSUsrMsg_SayText();
  }

  CCSUsrMsg_SayText* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_SayText>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_SayText& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_SayText& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_SayText* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_SayText";
  }
  protected:
  explicit CCSUsrMsg_SayText(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 2,
    kEntIdxFieldNumber = 1,
    kChatFieldNumber = 3,
    kTextallchatFieldNumber = 4,
  };
  // optional string text = 2;
  bool has_text() const;
  private:
  bool _internal_has_text() const;
  public:
  void clear_text();
  const std::string& text() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_text(ArgT0&& arg0, ArgT... args);
  std::string* mutable_text();
  PROTOBUF_MUST_USE_RESULT std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // optional int32 ent_idx = 1;
  bool has_ent_idx() const;
  private:
  bool _internal_has_ent_idx() const;
  public:
  void clear_ent_idx();
  ::PROTOBUF_NAMESPACE_ID::int32 ent_idx() const;
  void set_ent_idx(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ent_idx() const;
  void _internal_set_ent_idx(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool chat = 3;
  bool has_chat() const;
  private:
  bool _internal_has_chat() const;
  public:
  void clear_chat();
  bool chat() const;
  void set_chat(bool value);
  private:
  bool _internal_chat() const;
  void _internal_set_chat(bool value);
  public:

  // optional bool textallchat = 4;
  bool has_textallchat() const;
  private:
  bool _internal_has_textallchat() const;
  public:
  void clear_textallchat();
  bool textallchat() const;
  void set_textallchat(bool value);
  private:
  bool _internal_textallchat() const;
  void _internal_set_textallchat(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SayText)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  ::PROTOBUF_NAMESPACE_ID::int32 ent_idx_;
  bool chat_;
  bool textallchat_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SayText2 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_SayText2) */ {
 public:
  inline CCSUsrMsg_SayText2() : CCSUsrMsg_SayText2(nullptr) {}
  ~CCSUsrMsg_SayText2() override;
  explicit constexpr CCSUsrMsg_SayText2(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_SayText2(const CCSUsrMsg_SayText2& from);
  CCSUsrMsg_SayText2(CCSUsrMsg_SayText2&& from) noexcept
    : CCSUsrMsg_SayText2() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_SayText2& operator=(const CCSUsrMsg_SayText2& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_SayText2& operator=(CCSUsrMsg_SayText2&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_SayText2& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_SayText2* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_SayText2*>(
               &_CCSUsrMsg_SayText2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CCSUsrMsg_SayText2& a, CCSUsrMsg_SayText2& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_SayText2* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_SayText2* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_SayText2* New() const final {
    return new CCSUsrMsg_SayText2();
  }

  CCSUsrMsg_SayText2* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_SayText2>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_SayText2& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_SayText2& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_SayText2* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_SayText2";
  }
  protected:
  explicit CCSUsrMsg_SayText2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParamsFieldNumber = 4,
    kMsgNameFieldNumber = 3,
    kEntIdxFieldNumber = 1,
    kChatFieldNumber = 2,
    kTextallchatFieldNumber = 5,
  };
  // repeated string params = 4;
  int params_size() const;
  private:
  int _internal_params_size() const;
  public:
  void clear_params();
  const std::string& params(int index) const;
  std::string* mutable_params(int index);
  void set_params(int index, const std::string& value);
  void set_params(int index, std::string&& value);
  void set_params(int index, const char* value);
  void set_params(int index, const char* value, size_t size);
  std::string* add_params();
  void add_params(const std::string& value);
  void add_params(std::string&& value);
  void add_params(const char* value);
  void add_params(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& params() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_params();
  private:
  const std::string& _internal_params(int index) const;
  std::string* _internal_add_params();
  public:

  // optional string msg_name = 3;
  bool has_msg_name() const;
  private:
  bool _internal_has_msg_name() const;
  public:
  void clear_msg_name();
  const std::string& msg_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_msg_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_msg_name();
  PROTOBUF_MUST_USE_RESULT std::string* release_msg_name();
  void set_allocated_msg_name(std::string* msg_name);
  private:
  const std::string& _internal_msg_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg_name(const std::string& value);
  std::string* _internal_mutable_msg_name();
  public:

  // optional int32 ent_idx = 1;
  bool has_ent_idx() const;
  private:
  bool _internal_has_ent_idx() const;
  public:
  void clear_ent_idx();
  ::PROTOBUF_NAMESPACE_ID::int32 ent_idx() const;
  void set_ent_idx(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ent_idx() const;
  void _internal_set_ent_idx(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool chat = 2;
  bool has_chat() const;
  private:
  bool _internal_has_chat() const;
  public:
  void clear_chat();
  bool chat() const;
  void set_chat(bool value);
  private:
  bool _internal_chat() const;
  void _internal_set_chat(bool value);
  public:

  // optional bool textallchat = 5;
  bool has_textallchat() const;
  private:
  bool _internal_has_textallchat() const;
  public:
  void clear_textallchat();
  bool textallchat() const;
  void set_textallchat(bool value);
  private:
  bool _internal_textallchat() const;
  void _internal_set_textallchat(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SayText2)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> params_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_name_;
  ::PROTOBUF_NAMESPACE_ID::int32 ent_idx_;
  bool chat_;
  bool textallchat_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_TextMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_TextMsg) */ {
 public:
  inline CCSUsrMsg_TextMsg() : CCSUsrMsg_TextMsg(nullptr) {}
  ~CCSUsrMsg_TextMsg() override;
  explicit constexpr CCSUsrMsg_TextMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_TextMsg(const CCSUsrMsg_TextMsg& from);
  CCSUsrMsg_TextMsg(CCSUsrMsg_TextMsg&& from) noexcept
    : CCSUsrMsg_TextMsg() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_TextMsg& operator=(const CCSUsrMsg_TextMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_TextMsg& operator=(CCSUsrMsg_TextMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_TextMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_TextMsg* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_TextMsg*>(
               &_CCSUsrMsg_TextMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CCSUsrMsg_TextMsg& a, CCSUsrMsg_TextMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_TextMsg* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_TextMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_TextMsg* New() const final {
    return new CCSUsrMsg_TextMsg();
  }

  CCSUsrMsg_TextMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_TextMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_TextMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_TextMsg& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_TextMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_TextMsg";
  }
  protected:
  explicit CCSUsrMsg_TextMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParamsFieldNumber = 3,
    kMsgDstFieldNumber = 1,
  };
  // repeated string params = 3;
  int params_size() const;
  private:
  int _internal_params_size() const;
  public:
  void clear_params();
  const std::string& params(int index) const;
  std::string* mutable_params(int index);
  void set_params(int index, const std::string& value);
  void set_params(int index, std::string&& value);
  void set_params(int index, const char* value);
  void set_params(int index, const char* value, size_t size);
  std::string* add_params();
  void add_params(const std::string& value);
  void add_params(std::string&& value);
  void add_params(const char* value);
  void add_params(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& params() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_params();
  private:
  const std::string& _internal_params(int index) const;
  std::string* _internal_add_params();
  public:

  // optional int32 msg_dst = 1;
  bool has_msg_dst() const;
  private:
  bool _internal_has_msg_dst() const;
  public:
  void clear_msg_dst();
  ::PROTOBUF_NAMESPACE_ID::int32 msg_dst() const;
  void set_msg_dst(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_msg_dst() const;
  void _internal_set_msg_dst(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_TextMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> params_;
  ::PROTOBUF_NAMESPACE_ID::int32 msg_dst_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_HudMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_HudMsg) */ {
 public:
  inline CCSUsrMsg_HudMsg() : CCSUsrMsg_HudMsg(nullptr) {}
  ~CCSUsrMsg_HudMsg() override;
  explicit constexpr CCSUsrMsg_HudMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_HudMsg(const CCSUsrMsg_HudMsg& from);
  CCSUsrMsg_HudMsg(CCSUsrMsg_HudMsg&& from) noexcept
    : CCSUsrMsg_HudMsg() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_HudMsg& operator=(const CCSUsrMsg_HudMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_HudMsg& operator=(CCSUsrMsg_HudMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_HudMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_HudMsg* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_HudMsg*>(
               &_CCSUsrMsg_HudMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CCSUsrMsg_HudMsg& a, CCSUsrMsg_HudMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_HudMsg* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_HudMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_HudMsg* New() const final {
    return new CCSUsrMsg_HudMsg();
  }

  CCSUsrMsg_HudMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_HudMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_HudMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_HudMsg& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_HudMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_HudMsg";
  }
  protected:
  explicit CCSUsrMsg_HudMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 11,
    kPosFieldNumber = 2,
    kClr1FieldNumber = 3,
    kClr2FieldNumber = 4,
    kChannelFieldNumber = 1,
    kEffectFieldNumber = 5,
    kFadeInTimeFieldNumber = 6,
    kFadeOutTimeFieldNumber = 7,
    kHoldTimeFieldNumber = 9,
    kFxTimeFieldNumber = 10,
  };
  // optional string text = 11;
  bool has_text() const;
  private:
  bool _internal_has_text() const;
  public:
  void clear_text();
  const std::string& text() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_text(ArgT0&& arg0, ArgT... args);
  std::string* mutable_text();
  PROTOBUF_MUST_USE_RESULT std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // optional .CMsgVector2D pos = 2;
  bool has_pos() const;
  private:
  bool _internal_has_pos() const;
  public:
  void clear_pos();
  const ::CMsgVector2D& pos() const;
  PROTOBUF_MUST_USE_RESULT ::CMsgVector2D* release_pos();
  ::CMsgVector2D* mutable_pos();
  void set_allocated_pos(::CMsgVector2D* pos);
  private:
  const ::CMsgVector2D& _internal_pos() const;
  ::CMsgVector2D* _internal_mutable_pos();
  public:
  void unsafe_arena_set_allocated_pos(
      ::CMsgVector2D* pos);
  ::CMsgVector2D* unsafe_arena_release_pos();

  // optional .CMsgRGBA clr1 = 3;
  bool has_clr1() const;
  private:
  bool _internal_has_clr1() const;
  public:
  void clear_clr1();
  const ::CMsgRGBA& clr1() const;
  PROTOBUF_MUST_USE_RESULT ::CMsgRGBA* release_clr1();
  ::CMsgRGBA* mutable_clr1();
  void set_allocated_clr1(::CMsgRGBA* clr1);
  private:
  const ::CMsgRGBA& _internal_clr1() const;
  ::CMsgRGBA* _internal_mutable_clr1();
  public:
  void unsafe_arena_set_allocated_clr1(
      ::CMsgRGBA* clr1);
  ::CMsgRGBA* unsafe_arena_release_clr1();

  // optional .CMsgRGBA clr2 = 4;
  bool has_clr2() const;
  private:
  bool _internal_has_clr2() const;
  public:
  void clear_clr2();
  const ::CMsgRGBA& clr2() const;
  PROTOBUF_MUST_USE_RESULT ::CMsgRGBA* release_clr2();
  ::CMsgRGBA* mutable_clr2();
  void set_allocated_clr2(::CMsgRGBA* clr2);
  private:
  const ::CMsgRGBA& _internal_clr2() const;
  ::CMsgRGBA* _internal_mutable_clr2();
  public:
  void unsafe_arena_set_allocated_clr2(
      ::CMsgRGBA* clr2);
  ::CMsgRGBA* unsafe_arena_release_clr2();

  // optional int32 channel = 1;
  bool has_channel() const;
  private:
  bool _internal_has_channel() const;
  public:
  void clear_channel();
  ::PROTOBUF_NAMESPACE_ID::int32 channel() const;
  void set_channel(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_channel() const;
  void _internal_set_channel(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 effect = 5;
  bool has_effect() const;
  private:
  bool _internal_has_effect() const;
  public:
  void clear_effect();
  ::PROTOBUF_NAMESPACE_ID::int32 effect() const;
  void set_effect(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_effect() const;
  void _internal_set_effect(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float fade_in_time = 6;
  bool has_fade_in_time() const;
  private:
  bool _internal_has_fade_in_time() const;
  public:
  void clear_fade_in_time();
  float fade_in_time() const;
  void set_fade_in_time(float value);
  private:
  float _internal_fade_in_time() const;
  void _internal_set_fade_in_time(float value);
  public:

  // optional float fade_out_time = 7;
  bool has_fade_out_time() const;
  private:
  bool _internal_has_fade_out_time() const;
  public:
  void clear_fade_out_time();
  float fade_out_time() const;
  void set_fade_out_time(float value);
  private:
  float _internal_fade_out_time() const;
  void _internal_set_fade_out_time(float value);
  public:

  // optional float hold_time = 9;
  bool has_hold_time() const;
  private:
  bool _internal_has_hold_time() const;
  public:
  void clear_hold_time();
  float hold_time() const;
  void set_hold_time(float value);
  private:
  float _internal_hold_time() const;
  void _internal_set_hold_time(float value);
  public:

  // optional float fx_time = 10;
  bool has_fx_time() const;
  private:
  bool _internal_has_fx_time() const;
  public:
  void clear_fx_time();
  float fx_time() const;
  void set_fx_time(float value);
  private:
  float _internal_fx_time() const;
  void _internal_set_fx_time(float value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_HudMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  ::CMsgVector2D* pos_;
  ::CMsgRGBA* clr1_;
  ::CMsgRGBA* clr2_;
  ::PROTOBUF_NAMESPACE_ID::int32 channel_;
  ::PROTOBUF_NAMESPACE_ID::int32 effect_;
  float fade_in_time_;
  float fade_out_time_;
  float hold_time_;
  float fx_time_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Shake final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_Shake) */ {
 public:
  inline CCSUsrMsg_Shake() : CCSUsrMsg_Shake(nullptr) {}
  ~CCSUsrMsg_Shake() override;
  explicit constexpr CCSUsrMsg_Shake(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_Shake(const CCSUsrMsg_Shake& from);
  CCSUsrMsg_Shake(CCSUsrMsg_Shake&& from) noexcept
    : CCSUsrMsg_Shake() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_Shake& operator=(const CCSUsrMsg_Shake& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_Shake& operator=(CCSUsrMsg_Shake&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_Shake& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_Shake* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_Shake*>(
               &_CCSUsrMsg_Shake_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CCSUsrMsg_Shake& a, CCSUsrMsg_Shake& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_Shake* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_Shake* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_Shake* New() const final {
    return new CCSUsrMsg_Shake();
  }

  CCSUsrMsg_Shake* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_Shake>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_Shake& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_Shake& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_Shake* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_Shake";
  }
  protected:
  explicit CCSUsrMsg_Shake(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommandFieldNumber = 1,
    kLocalAmplitudeFieldNumber = 2,
    kFrequencyFieldNumber = 3,
    kDurationFieldNumber = 4,
  };
  // optional int32 command = 1;
  bool has_command() const;
  private:
  bool _internal_has_command() const;
  public:
  void clear_command();
  ::PROTOBUF_NAMESPACE_ID::int32 command() const;
  void set_command(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_command() const;
  void _internal_set_command(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float local_amplitude = 2;
  bool has_local_amplitude() const;
  private:
  bool _internal_has_local_amplitude() const;
  public:
  void clear_local_amplitude();
  float local_amplitude() const;
  void set_local_amplitude(float value);
  private:
  float _internal_local_amplitude() const;
  void _internal_set_local_amplitude(float value);
  public:

  // optional float frequency = 3;
  bool has_frequency() const;
  private:
  bool _internal_has_frequency() const;
  public:
  void clear_frequency();
  float frequency() const;
  void set_frequency(float value);
  private:
  float _internal_frequency() const;
  void _internal_set_frequency(float value);
  public:

  // optional float duration = 4;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  float duration() const;
  void set_duration(float value);
  private:
  float _internal_duration() const;
  void _internal_set_duration(float value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Shake)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 command_;
  float local_amplitude_;
  float frequency_;
  float duration_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Fade final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_Fade) */ {
 public:
  inline CCSUsrMsg_Fade() : CCSUsrMsg_Fade(nullptr) {}
  ~CCSUsrMsg_Fade() override;
  explicit constexpr CCSUsrMsg_Fade(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_Fade(const CCSUsrMsg_Fade& from);
  CCSUsrMsg_Fade(CCSUsrMsg_Fade&& from) noexcept
    : CCSUsrMsg_Fade() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_Fade& operator=(const CCSUsrMsg_Fade& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_Fade& operator=(CCSUsrMsg_Fade&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_Fade& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_Fade* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_Fade*>(
               &_CCSUsrMsg_Fade_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CCSUsrMsg_Fade& a, CCSUsrMsg_Fade& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_Fade* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_Fade* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_Fade* New() const final {
    return new CCSUsrMsg_Fade();
  }

  CCSUsrMsg_Fade* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_Fade>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_Fade& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_Fade& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_Fade* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_Fade";
  }
  protected:
  explicit CCSUsrMsg_Fade(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClrFieldNumber = 4,
    kDurationFieldNumber = 1,
    kHoldTimeFieldNumber = 2,
    kFlagsFieldNumber = 3,
  };
  // optional .CMsgRGBA clr = 4;
  bool has_clr() const;
  private:
  bool _internal_has_clr() const;
  public:
  void clear_clr();
  const ::CMsgRGBA& clr() const;
  PROTOBUF_MUST_USE_RESULT ::CMsgRGBA* release_clr();
  ::CMsgRGBA* mutable_clr();
  void set_allocated_clr(::CMsgRGBA* clr);
  private:
  const ::CMsgRGBA& _internal_clr() const;
  ::CMsgRGBA* _internal_mutable_clr();
  public:
  void unsafe_arena_set_allocated_clr(
      ::CMsgRGBA* clr);
  ::CMsgRGBA* unsafe_arena_release_clr();

  // optional int32 duration = 1;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  ::PROTOBUF_NAMESPACE_ID::int32 duration() const;
  void set_duration(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_duration() const;
  void _internal_set_duration(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 hold_time = 2;
  bool has_hold_time() const;
  private:
  bool _internal_has_hold_time() const;
  public:
  void clear_hold_time();
  ::PROTOBUF_NAMESPACE_ID::int32 hold_time() const;
  void set_hold_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_hold_time() const;
  void _internal_set_hold_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 flags = 3;
  bool has_flags() const;
  private:
  bool _internal_has_flags() const;
  public:
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::int32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_flags() const;
  void _internal_set_flags(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Fade)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgRGBA* clr_;
  ::PROTOBUF_NAMESPACE_ID::int32 duration_;
  ::PROTOBUF_NAMESPACE_ID::int32 hold_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 flags_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Rumble final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_Rumble) */ {
 public:
  inline CCSUsrMsg_Rumble() : CCSUsrMsg_Rumble(nullptr) {}
  ~CCSUsrMsg_Rumble() override;
  explicit constexpr CCSUsrMsg_Rumble(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_Rumble(const CCSUsrMsg_Rumble& from);
  CCSUsrMsg_Rumble(CCSUsrMsg_Rumble&& from) noexcept
    : CCSUsrMsg_Rumble() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_Rumble& operator=(const CCSUsrMsg_Rumble& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_Rumble& operator=(CCSUsrMsg_Rumble&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_Rumble& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_Rumble* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_Rumble*>(
               &_CCSUsrMsg_Rumble_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CCSUsrMsg_Rumble& a, CCSUsrMsg_Rumble& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_Rumble* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_Rumble* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_Rumble* New() const final {
    return new CCSUsrMsg_Rumble();
  }

  CCSUsrMsg_Rumble* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_Rumble>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_Rumble& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_Rumble& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_Rumble* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_Rumble";
  }
  protected:
  explicit CCSUsrMsg_Rumble(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
    kDataFieldNumber = 2,
    kFlagsFieldNumber = 3,
  };
  // optional int32 index = 1;
  bool has_index() const;
  private:
  bool _internal_has_index() const;
  public:
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 data = 2;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  ::PROTOBUF_NAMESPACE_ID::int32 data() const;
  void set_data(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_data() const;
  void _internal_set_data(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 flags = 3;
  bool has_flags() const;
  private:
  bool _internal_has_flags() const;
  public:
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::int32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_flags() const;
  void _internal_set_flags(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Rumble)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  ::PROTOBUF_NAMESPACE_ID::int32 data_;
  ::PROTOBUF_NAMESPACE_ID::int32 flags_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_CloseCaption final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_CloseCaption) */ {
 public:
  inline CCSUsrMsg_CloseCaption() : CCSUsrMsg_CloseCaption(nullptr) {}
  ~CCSUsrMsg_CloseCaption() override;
  explicit constexpr CCSUsrMsg_CloseCaption(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_CloseCaption(const CCSUsrMsg_CloseCaption& from);
  CCSUsrMsg_CloseCaption(CCSUsrMsg_CloseCaption&& from) noexcept
    : CCSUsrMsg_CloseCaption() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_CloseCaption& operator=(const CCSUsrMsg_CloseCaption& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_CloseCaption& operator=(CCSUsrMsg_CloseCaption&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_CloseCaption& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_CloseCaption* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_CloseCaption*>(
               &_CCSUsrMsg_CloseCaption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CCSUsrMsg_CloseCaption& a, CCSUsrMsg_CloseCaption& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_CloseCaption* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_CloseCaption* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_CloseCaption* New() const final {
    return new CCSUsrMsg_CloseCaption();
  }

  CCSUsrMsg_CloseCaption* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_CloseCaption>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_CloseCaption& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_CloseCaption& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_CloseCaption* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_CloseCaption";
  }
  protected:
  explicit CCSUsrMsg_CloseCaption(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHashFieldNumber = 1,
    kDurationFieldNumber = 2,
    kFromPlayerFieldNumber = 3,
  };
  // optional uint32 hash = 1;
  bool has_hash() const;
  private:
  bool _internal_has_hash() const;
  public:
  void clear_hash();
  ::PROTOBUF_NAMESPACE_ID::uint32 hash() const;
  void set_hash(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hash() const;
  void _internal_set_hash(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 duration = 2;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  ::PROTOBUF_NAMESPACE_ID::int32 duration() const;
  void set_duration(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_duration() const;
  void _internal_set_duration(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool from_player = 3;
  bool has_from_player() const;
  private:
  bool _internal_has_from_player() const;
  public:
  void clear_from_player();
  bool from_player() const;
  void set_from_player(bool value);
  private:
  bool _internal_from_player() const;
  void _internal_set_from_player(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_CloseCaption)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hash_;
  ::PROTOBUF_NAMESPACE_ID::int32 duration_;
  bool from_player_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_CloseCaptionDirect final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_CloseCaptionDirect) */ {
 public:
  inline CCSUsrMsg_CloseCaptionDirect() : CCSUsrMsg_CloseCaptionDirect(nullptr) {}
  ~CCSUsrMsg_CloseCaptionDirect() override;
  explicit constexpr CCSUsrMsg_CloseCaptionDirect(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_CloseCaptionDirect(const CCSUsrMsg_CloseCaptionDirect& from);
  CCSUsrMsg_CloseCaptionDirect(CCSUsrMsg_CloseCaptionDirect&& from) noexcept
    : CCSUsrMsg_CloseCaptionDirect() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_CloseCaptionDirect& operator=(const CCSUsrMsg_CloseCaptionDirect& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_CloseCaptionDirect& operator=(CCSUsrMsg_CloseCaptionDirect&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_CloseCaptionDirect& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_CloseCaptionDirect* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_CloseCaptionDirect*>(
               &_CCSUsrMsg_CloseCaptionDirect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CCSUsrMsg_CloseCaptionDirect& a, CCSUsrMsg_CloseCaptionDirect& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_CloseCaptionDirect* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_CloseCaptionDirect* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_CloseCaptionDirect* New() const final {
    return new CCSUsrMsg_CloseCaptionDirect();
  }

  CCSUsrMsg_CloseCaptionDirect* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_CloseCaptionDirect>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_CloseCaptionDirect& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_CloseCaptionDirect& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_CloseCaptionDirect* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_CloseCaptionDirect";
  }
  protected:
  explicit CCSUsrMsg_CloseCaptionDirect(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHashFieldNumber = 1,
    kDurationFieldNumber = 2,
    kFromPlayerFieldNumber = 3,
  };
  // optional uint32 hash = 1;
  bool has_hash() const;
  private:
  bool _internal_has_hash() const;
  public:
  void clear_hash();
  ::PROTOBUF_NAMESPACE_ID::uint32 hash() const;
  void set_hash(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hash() const;
  void _internal_set_hash(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 duration = 2;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  ::PROTOBUF_NAMESPACE_ID::int32 duration() const;
  void set_duration(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_duration() const;
  void _internal_set_duration(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool from_player = 3;
  bool has_from_player() const;
  private:
  bool _internal_has_from_player() const;
  public:
  void clear_from_player();
  bool from_player() const;
  void set_from_player(bool value);
  private:
  bool _internal_from_player() const;
  void _internal_set_from_player(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_CloseCaptionDirect)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hash_;
  ::PROTOBUF_NAMESPACE_ID::int32 duration_;
  bool from_player_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SendAudio final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_SendAudio) */ {
 public:
  inline CCSUsrMsg_SendAudio() : CCSUsrMsg_SendAudio(nullptr) {}
  ~CCSUsrMsg_SendAudio() override;
  explicit constexpr CCSUsrMsg_SendAudio(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_SendAudio(const CCSUsrMsg_SendAudio& from);
  CCSUsrMsg_SendAudio(CCSUsrMsg_SendAudio&& from) noexcept
    : CCSUsrMsg_SendAudio() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_SendAudio& operator=(const CCSUsrMsg_SendAudio& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_SendAudio& operator=(CCSUsrMsg_SendAudio&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_SendAudio& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_SendAudio* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_SendAudio*>(
               &_CCSUsrMsg_SendAudio_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CCSUsrMsg_SendAudio& a, CCSUsrMsg_SendAudio& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_SendAudio* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_SendAudio* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_SendAudio* New() const final {
    return new CCSUsrMsg_SendAudio();
  }

  CCSUsrMsg_SendAudio* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_SendAudio>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_SendAudio& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_SendAudio& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_SendAudio* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_SendAudio";
  }
  protected:
  explicit CCSUsrMsg_SendAudio(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRadioSoundFieldNumber = 1,
  };
  // optional string radio_sound = 1;
  bool has_radio_sound() const;
  private:
  bool _internal_has_radio_sound() const;
  public:
  void clear_radio_sound();
  const std::string& radio_sound() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_radio_sound(ArgT0&& arg0, ArgT... args);
  std::string* mutable_radio_sound();
  PROTOBUF_MUST_USE_RESULT std::string* release_radio_sound();
  void set_allocated_radio_sound(std::string* radio_sound);
  private:
  const std::string& _internal_radio_sound() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_radio_sound(const std::string& value);
  std::string* _internal_mutable_radio_sound();
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SendAudio)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr radio_sound_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_RawAudio final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_RawAudio) */ {
 public:
  inline CCSUsrMsg_RawAudio() : CCSUsrMsg_RawAudio(nullptr) {}
  ~CCSUsrMsg_RawAudio() override;
  explicit constexpr CCSUsrMsg_RawAudio(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_RawAudio(const CCSUsrMsg_RawAudio& from);
  CCSUsrMsg_RawAudio(CCSUsrMsg_RawAudio&& from) noexcept
    : CCSUsrMsg_RawAudio() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_RawAudio& operator=(const CCSUsrMsg_RawAudio& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_RawAudio& operator=(CCSUsrMsg_RawAudio&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_RawAudio& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_RawAudio* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_RawAudio*>(
               &_CCSUsrMsg_RawAudio_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CCSUsrMsg_RawAudio& a, CCSUsrMsg_RawAudio& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_RawAudio* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_RawAudio* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_RawAudio* New() const final {
    return new CCSUsrMsg_RawAudio();
  }

  CCSUsrMsg_RawAudio* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_RawAudio>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_RawAudio& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_RawAudio& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_RawAudio* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_RawAudio";
  }
  protected:
  explicit CCSUsrMsg_RawAudio(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVoiceFilenameFieldNumber = 4,
    kPitchFieldNumber = 1,
    kEntidxFieldNumber = 2,
    kDurationFieldNumber = 3,
  };
  // optional string voice_filename = 4;
  bool has_voice_filename() const;
  private:
  bool _internal_has_voice_filename() const;
  public:
  void clear_voice_filename();
  const std::string& voice_filename() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_voice_filename(ArgT0&& arg0, ArgT... args);
  std::string* mutable_voice_filename();
  PROTOBUF_MUST_USE_RESULT std::string* release_voice_filename();
  void set_allocated_voice_filename(std::string* voice_filename);
  private:
  const std::string& _internal_voice_filename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_voice_filename(const std::string& value);
  std::string* _internal_mutable_voice_filename();
  public:

  // optional int32 pitch = 1;
  bool has_pitch() const;
  private:
  bool _internal_has_pitch() const;
  public:
  void clear_pitch();
  ::PROTOBUF_NAMESPACE_ID::int32 pitch() const;
  void set_pitch(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_pitch() const;
  void _internal_set_pitch(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 entidx = 2;
  bool has_entidx() const;
  private:
  bool _internal_has_entidx() const;
  public:
  void clear_entidx();
  ::PROTOBUF_NAMESPACE_ID::int32 entidx() const;
  void set_entidx(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entidx() const;
  void _internal_set_entidx(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float duration = 3;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  float duration() const;
  void set_duration(float value);
  private:
  float _internal_duration() const;
  void _internal_set_duration(float value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_RawAudio)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr voice_filename_;
  ::PROTOBUF_NAMESPACE_ID::int32 pitch_;
  ::PROTOBUF_NAMESPACE_ID::int32 entidx_;
  float duration_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoiceMask_PlayerMask final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_VoiceMask.PlayerMask) */ {
 public:
  inline CCSUsrMsg_VoiceMask_PlayerMask() : CCSUsrMsg_VoiceMask_PlayerMask(nullptr) {}
  ~CCSUsrMsg_VoiceMask_PlayerMask() override;
  explicit constexpr CCSUsrMsg_VoiceMask_PlayerMask(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_VoiceMask_PlayerMask(const CCSUsrMsg_VoiceMask_PlayerMask& from);
  CCSUsrMsg_VoiceMask_PlayerMask(CCSUsrMsg_VoiceMask_PlayerMask&& from) noexcept
    : CCSUsrMsg_VoiceMask_PlayerMask() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_VoiceMask_PlayerMask& operator=(const CCSUsrMsg_VoiceMask_PlayerMask& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_VoiceMask_PlayerMask& operator=(CCSUsrMsg_VoiceMask_PlayerMask&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_VoiceMask_PlayerMask& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_VoiceMask_PlayerMask* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_VoiceMask_PlayerMask*>(
               &_CCSUsrMsg_VoiceMask_PlayerMask_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CCSUsrMsg_VoiceMask_PlayerMask& a, CCSUsrMsg_VoiceMask_PlayerMask& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_VoiceMask_PlayerMask* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_VoiceMask_PlayerMask* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_VoiceMask_PlayerMask* New() const final {
    return new CCSUsrMsg_VoiceMask_PlayerMask();
  }

  CCSUsrMsg_VoiceMask_PlayerMask* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_VoiceMask_PlayerMask>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_VoiceMask_PlayerMask& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_VoiceMask_PlayerMask& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_VoiceMask_PlayerMask* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_VoiceMask.PlayerMask";
  }
  protected:
  explicit CCSUsrMsg_VoiceMask_PlayerMask(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGameRulesMaskFieldNumber = 1,
    kBanMasksFieldNumber = 2,
  };
  // optional int32 game_rules_mask = 1;
  bool has_game_rules_mask() const;
  private:
  bool _internal_has_game_rules_mask() const;
  public:
  void clear_game_rules_mask();
  ::PROTOBUF_NAMESPACE_ID::int32 game_rules_mask() const;
  void set_game_rules_mask(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_game_rules_mask() const;
  void _internal_set_game_rules_mask(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 ban_masks = 2;
  bool has_ban_masks() const;
  private:
  bool _internal_has_ban_masks() const;
  public:
  void clear_ban_masks();
  ::PROTOBUF_NAMESPACE_ID::int32 ban_masks() const;
  void set_ban_masks(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ban_masks() const;
  void _internal_set_ban_masks(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoiceMask.PlayerMask)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 game_rules_mask_;
  ::PROTOBUF_NAMESPACE_ID::int32 ban_masks_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoiceMask final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_VoiceMask) */ {
 public:
  inline CCSUsrMsg_VoiceMask() : CCSUsrMsg_VoiceMask(nullptr) {}
  ~CCSUsrMsg_VoiceMask() override;
  explicit constexpr CCSUsrMsg_VoiceMask(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_VoiceMask(const CCSUsrMsg_VoiceMask& from);
  CCSUsrMsg_VoiceMask(CCSUsrMsg_VoiceMask&& from) noexcept
    : CCSUsrMsg_VoiceMask() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_VoiceMask& operator=(const CCSUsrMsg_VoiceMask& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_VoiceMask& operator=(CCSUsrMsg_VoiceMask&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_VoiceMask& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_VoiceMask* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_VoiceMask*>(
               &_CCSUsrMsg_VoiceMask_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CCSUsrMsg_VoiceMask& a, CCSUsrMsg_VoiceMask& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_VoiceMask* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_VoiceMask* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_VoiceMask* New() const final {
    return new CCSUsrMsg_VoiceMask();
  }

  CCSUsrMsg_VoiceMask* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_VoiceMask>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_VoiceMask& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_VoiceMask& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_VoiceMask* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_VoiceMask";
  }
  protected:
  explicit CCSUsrMsg_VoiceMask(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CCSUsrMsg_VoiceMask_PlayerMask PlayerMask;

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerMasksFieldNumber = 1,
    kPlayerModEnableFieldNumber = 2,
  };
  // repeated .CCSUsrMsg_VoiceMask.PlayerMask player_masks = 1;
  int player_masks_size() const;
  private:
  int _internal_player_masks_size() const;
  public:
  void clear_player_masks();
  ::CCSUsrMsg_VoiceMask_PlayerMask* mutable_player_masks(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask >*
      mutable_player_masks();
  private:
  const ::CCSUsrMsg_VoiceMask_PlayerMask& _internal_player_masks(int index) const;
  ::CCSUsrMsg_VoiceMask_PlayerMask* _internal_add_player_masks();
  public:
  const ::CCSUsrMsg_VoiceMask_PlayerMask& player_masks(int index) const;
  ::CCSUsrMsg_VoiceMask_PlayerMask* add_player_masks();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask >&
      player_masks() const;

  // optional bool player_mod_enable = 2;
  bool has_player_mod_enable() const;
  private:
  bool _internal_has_player_mod_enable() const;
  public:
  void clear_player_mod_enable();
  bool player_mod_enable() const;
  void set_player_mod_enable(bool value);
  private:
  bool _internal_player_mod_enable() const;
  void _internal_set_player_mod_enable(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoiceMask)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask > player_masks_;
  bool player_mod_enable_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Damage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_Damage) */ {
 public:
  inline CCSUsrMsg_Damage() : CCSUsrMsg_Damage(nullptr) {}
  ~CCSUsrMsg_Damage() override;
  explicit constexpr CCSUsrMsg_Damage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_Damage(const CCSUsrMsg_Damage& from);
  CCSUsrMsg_Damage(CCSUsrMsg_Damage&& from) noexcept
    : CCSUsrMsg_Damage() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_Damage& operator=(const CCSUsrMsg_Damage& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_Damage& operator=(CCSUsrMsg_Damage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_Damage& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_Damage* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_Damage*>(
               &_CCSUsrMsg_Damage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CCSUsrMsg_Damage& a, CCSUsrMsg_Damage& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_Damage* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_Damage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_Damage* New() const final {
    return new CCSUsrMsg_Damage();
  }

  CCSUsrMsg_Damage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_Damage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_Damage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_Damage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_Damage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_Damage";
  }
  protected:
  explicit CCSUsrMsg_Damage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInflictorWorldPosFieldNumber = 2,
    kAmountFieldNumber = 1,
    kVictimEntindexFieldNumber = 3,
  };
  // optional .CMsgVector inflictor_world_pos = 2;
  bool has_inflictor_world_pos() const;
  private:
  bool _internal_has_inflictor_world_pos() const;
  public:
  void clear_inflictor_world_pos();
  const ::CMsgVector& inflictor_world_pos() const;
  PROTOBUF_MUST_USE_RESULT ::CMsgVector* release_inflictor_world_pos();
  ::CMsgVector* mutable_inflictor_world_pos();
  void set_allocated_inflictor_world_pos(::CMsgVector* inflictor_world_pos);
  private:
  const ::CMsgVector& _internal_inflictor_world_pos() const;
  ::CMsgVector* _internal_mutable_inflictor_world_pos();
  public:
  void unsafe_arena_set_allocated_inflictor_world_pos(
      ::CMsgVector* inflictor_world_pos);
  ::CMsgVector* unsafe_arena_release_inflictor_world_pos();

  // optional int32 amount = 1;
  bool has_amount() const;
  private:
  bool _internal_has_amount() const;
  public:
  void clear_amount();
  ::PROTOBUF_NAMESPACE_ID::int32 amount() const;
  void set_amount(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_amount() const;
  void _internal_set_amount(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 victim_entindex = 3;
  bool has_victim_entindex() const;
  private:
  bool _internal_has_victim_entindex() const;
  public:
  void clear_victim_entindex();
  ::PROTOBUF_NAMESPACE_ID::int32 victim_entindex() const;
  void set_victim_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_victim_entindex() const;
  void _internal_set_victim_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Damage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgVector* inflictor_world_pos_;
  ::PROTOBUF_NAMESPACE_ID::int32 amount_;
  ::PROTOBUF_NAMESPACE_ID::int32 victim_entindex_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_RadioText final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_RadioText) */ {
 public:
  inline CCSUsrMsg_RadioText() : CCSUsrMsg_RadioText(nullptr) {}
  ~CCSUsrMsg_RadioText() override;
  explicit constexpr CCSUsrMsg_RadioText(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_RadioText(const CCSUsrMsg_RadioText& from);
  CCSUsrMsg_RadioText(CCSUsrMsg_RadioText&& from) noexcept
    : CCSUsrMsg_RadioText() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_RadioText& operator=(const CCSUsrMsg_RadioText& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_RadioText& operator=(CCSUsrMsg_RadioText&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_RadioText& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_RadioText* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_RadioText*>(
               &_CCSUsrMsg_RadioText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CCSUsrMsg_RadioText& a, CCSUsrMsg_RadioText& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_RadioText* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_RadioText* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_RadioText* New() const final {
    return new CCSUsrMsg_RadioText();
  }

  CCSUsrMsg_RadioText* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_RadioText>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_RadioText& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_RadioText& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_RadioText* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_RadioText";
  }
  protected:
  explicit CCSUsrMsg_RadioText(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParamsFieldNumber = 4,
    kMsgNameFieldNumber = 3,
    kMsgDstFieldNumber = 1,
    kClientFieldNumber = 2,
  };
  // repeated string params = 4;
  int params_size() const;
  private:
  int _internal_params_size() const;
  public:
  void clear_params();
  const std::string& params(int index) const;
  std::string* mutable_params(int index);
  void set_params(int index, const std::string& value);
  void set_params(int index, std::string&& value);
  void set_params(int index, const char* value);
  void set_params(int index, const char* value, size_t size);
  std::string* add_params();
  void add_params(const std::string& value);
  void add_params(std::string&& value);
  void add_params(const char* value);
  void add_params(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& params() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_params();
  private:
  const std::string& _internal_params(int index) const;
  std::string* _internal_add_params();
  public:

  // optional string msg_name = 3;
  bool has_msg_name() const;
  private:
  bool _internal_has_msg_name() const;
  public:
  void clear_msg_name();
  const std::string& msg_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_msg_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_msg_name();
  PROTOBUF_MUST_USE_RESULT std::string* release_msg_name();
  void set_allocated_msg_name(std::string* msg_name);
  private:
  const std::string& _internal_msg_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg_name(const std::string& value);
  std::string* _internal_mutable_msg_name();
  public:

  // optional int32 msg_dst = 1;
  bool has_msg_dst() const;
  private:
  bool _internal_has_msg_dst() const;
  public:
  void clear_msg_dst();
  ::PROTOBUF_NAMESPACE_ID::int32 msg_dst() const;
  void set_msg_dst(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_msg_dst() const;
  void _internal_set_msg_dst(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 client = 2;
  bool has_client() const;
  private:
  bool _internal_has_client() const;
  public:
  void clear_client();
  ::PROTOBUF_NAMESPACE_ID::int32 client() const;
  void set_client(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_client() const;
  void _internal_set_client(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_RadioText)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> params_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_name_;
  ::PROTOBUF_NAMESPACE_ID::int32 msg_dst_;
  ::PROTOBUF_NAMESPACE_ID::int32 client_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_HintText final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_HintText) */ {
 public:
  inline CCSUsrMsg_HintText() : CCSUsrMsg_HintText(nullptr) {}
  ~CCSUsrMsg_HintText() override;
  explicit constexpr CCSUsrMsg_HintText(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_HintText(const CCSUsrMsg_HintText& from);
  CCSUsrMsg_HintText(CCSUsrMsg_HintText&& from) noexcept
    : CCSUsrMsg_HintText() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_HintText& operator=(const CCSUsrMsg_HintText& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_HintText& operator=(CCSUsrMsg_HintText&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_HintText& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_HintText* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_HintText*>(
               &_CCSUsrMsg_HintText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CCSUsrMsg_HintText& a, CCSUsrMsg_HintText& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_HintText* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_HintText* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_HintText* New() const final {
    return new CCSUsrMsg_HintText();
  }

  CCSUsrMsg_HintText* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_HintText>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_HintText& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_HintText& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_HintText* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_HintText";
  }
  protected:
  explicit CCSUsrMsg_HintText(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 1,
  };
  // optional string text = 1;
  bool has_text() const;
  private:
  bool _internal_has_text() const;
  public:
  void clear_text();
  const std::string& text() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_text(ArgT0&& arg0, ArgT... args);
  std::string* mutable_text();
  PROTOBUF_MUST_USE_RESULT std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_HintText)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_KeyHintText final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_KeyHintText) */ {
 public:
  inline CCSUsrMsg_KeyHintText() : CCSUsrMsg_KeyHintText(nullptr) {}
  ~CCSUsrMsg_KeyHintText() override;
  explicit constexpr CCSUsrMsg_KeyHintText(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_KeyHintText(const CCSUsrMsg_KeyHintText& from);
  CCSUsrMsg_KeyHintText(CCSUsrMsg_KeyHintText&& from) noexcept
    : CCSUsrMsg_KeyHintText() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_KeyHintText& operator=(const CCSUsrMsg_KeyHintText& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_KeyHintText& operator=(CCSUsrMsg_KeyHintText&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_KeyHintText& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_KeyHintText* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_KeyHintText*>(
               &_CCSUsrMsg_KeyHintText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CCSUsrMsg_KeyHintText& a, CCSUsrMsg_KeyHintText& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_KeyHintText* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_KeyHintText* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_KeyHintText* New() const final {
    return new CCSUsrMsg_KeyHintText();
  }

  CCSUsrMsg_KeyHintText* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_KeyHintText>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_KeyHintText& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_KeyHintText& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_KeyHintText* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_KeyHintText";
  }
  protected:
  explicit CCSUsrMsg_KeyHintText(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHintsFieldNumber = 1,
  };
  // repeated string hints = 1;
  int hints_size() const;
  private:
  int _internal_hints_size() const;
  public:
  void clear_hints();
  const std::string& hints(int index) const;
  std::string* mutable_hints(int index);
  void set_hints(int index, const std::string& value);
  void set_hints(int index, std::string&& value);
  void set_hints(int index, const char* value);
  void set_hints(int index, const char* value, size_t size);
  std::string* add_hints();
  void add_hints(const std::string& value);
  void add_hints(std::string&& value);
  void add_hints(const char* value);
  void add_hints(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& hints() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_hints();
  private:
  const std::string& _internal_hints(int index) const;
  std::string* _internal_add_hints();
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_KeyHintText)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> hints_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate) */ {
 public:
  inline CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate() : CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate(nullptr) {}
  ~CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate() override;
  explicit constexpr CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from);
  CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate&& from) noexcept
    : CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& operator=(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& operator=(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate*>(
               &_CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& a, CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* New() const final {
    return new CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate();
  }

  CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate";
  }
  protected:
  explicit CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityIdxFieldNumber = 1,
    kClassIdFieldNumber = 2,
    kOriginXFieldNumber = 3,
    kOriginYFieldNumber = 4,
    kOriginZFieldNumber = 5,
    kAngleYFieldNumber = 6,
    kDefuserFieldNumber = 7,
    kPlayerHasDefuserFieldNumber = 8,
    kPlayerHasC4FieldNumber = 9,
  };
  // optional int32 entity_idx = 1;
  bool has_entity_idx() const;
  private:
  bool _internal_has_entity_idx() const;
  public:
  void clear_entity_idx();
  ::PROTOBUF_NAMESPACE_ID::int32 entity_idx() const;
  void set_entity_idx(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entity_idx() const;
  void _internal_set_entity_idx(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 class_id = 2;
  bool has_class_id() const;
  private:
  bool _internal_has_class_id() const;
  public:
  void clear_class_id();
  ::PROTOBUF_NAMESPACE_ID::int32 class_id() const;
  void set_class_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_class_id() const;
  void _internal_set_class_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 origin_x = 3;
  bool has_origin_x() const;
  private:
  bool _internal_has_origin_x() const;
  public:
  void clear_origin_x();
  ::PROTOBUF_NAMESPACE_ID::int32 origin_x() const;
  void set_origin_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_origin_x() const;
  void _internal_set_origin_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 origin_y = 4;
  bool has_origin_y() const;
  private:
  bool _internal_has_origin_y() const;
  public:
  void clear_origin_y();
  ::PROTOBUF_NAMESPACE_ID::int32 origin_y() const;
  void set_origin_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_origin_y() const;
  void _internal_set_origin_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 origin_z = 5;
  bool has_origin_z() const;
  private:
  bool _internal_has_origin_z() const;
  public:
  void clear_origin_z();
  ::PROTOBUF_NAMESPACE_ID::int32 origin_z() const;
  void set_origin_z(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_origin_z() const;
  void _internal_set_origin_z(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 angle_y = 6;
  bool has_angle_y() const;
  private:
  bool _internal_has_angle_y() const;
  public:
  void clear_angle_y();
  ::PROTOBUF_NAMESPACE_ID::int32 angle_y() const;
  void set_angle_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_angle_y() const;
  void _internal_set_angle_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool defuser = 7;
  bool has_defuser() const;
  private:
  bool _internal_has_defuser() const;
  public:
  void clear_defuser();
  bool defuser() const;
  void set_defuser(bool value);
  private:
  bool _internal_defuser() const;
  void _internal_set_defuser(bool value);
  public:

  // optional bool player_has_defuser = 8;
  bool has_player_has_defuser() const;
  private:
  bool _internal_has_player_has_defuser() const;
  public:
  void clear_player_has_defuser();
  bool player_has_defuser() const;
  void set_player_has_defuser(bool value);
  private:
  bool _internal_player_has_defuser() const;
  void _internal_set_player_has_defuser(bool value);
  public:

  // optional bool player_has_c4 = 9;
  bool has_player_has_c4() const;
  private:
  bool _internal_has_player_has_c4() const;
  public:
  void clear_player_has_c4();
  bool player_has_c4() const;
  void set_player_has_c4(bool value);
  private:
  bool _internal_player_has_c4() const;
  void _internal_set_player_has_c4(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 entity_idx_;
  ::PROTOBUF_NAMESPACE_ID::int32 class_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 origin_x_;
  ::PROTOBUF_NAMESPACE_ID::int32 origin_y_;
  ::PROTOBUF_NAMESPACE_ID::int32 origin_z_;
  ::PROTOBUF_NAMESPACE_ID::int32 angle_y_;
  bool defuser_;
  bool player_has_defuser_;
  bool player_has_c4_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ProcessSpottedEntityUpdate final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ProcessSpottedEntityUpdate) */ {
 public:
  inline CCSUsrMsg_ProcessSpottedEntityUpdate() : CCSUsrMsg_ProcessSpottedEntityUpdate(nullptr) {}
  ~CCSUsrMsg_ProcessSpottedEntityUpdate() override;
  explicit constexpr CCSUsrMsg_ProcessSpottedEntityUpdate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_ProcessSpottedEntityUpdate(const CCSUsrMsg_ProcessSpottedEntityUpdate& from);
  CCSUsrMsg_ProcessSpottedEntityUpdate(CCSUsrMsg_ProcessSpottedEntityUpdate&& from) noexcept
    : CCSUsrMsg_ProcessSpottedEntityUpdate() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ProcessSpottedEntityUpdate& operator=(const CCSUsrMsg_ProcessSpottedEntityUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_ProcessSpottedEntityUpdate& operator=(CCSUsrMsg_ProcessSpottedEntityUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_ProcessSpottedEntityUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_ProcessSpottedEntityUpdate* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ProcessSpottedEntityUpdate*>(
               &_CCSUsrMsg_ProcessSpottedEntityUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CCSUsrMsg_ProcessSpottedEntityUpdate& a, CCSUsrMsg_ProcessSpottedEntityUpdate& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_ProcessSpottedEntityUpdate* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_ProcessSpottedEntityUpdate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ProcessSpottedEntityUpdate* New() const final {
    return new CCSUsrMsg_ProcessSpottedEntityUpdate();
  }

  CCSUsrMsg_ProcessSpottedEntityUpdate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ProcessSpottedEntityUpdate>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ProcessSpottedEntityUpdate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_ProcessSpottedEntityUpdate";
  }
  protected:
  explicit CCSUsrMsg_ProcessSpottedEntityUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate SpottedEntityUpdate;

  // accessors -------------------------------------------------------

  enum : int {
    kEntityUpdatesFieldNumber = 2,
    kNewUpdateFieldNumber = 1,
  };
  // repeated .CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate entity_updates = 2;
  int entity_updates_size() const;
  private:
  int _internal_entity_updates_size() const;
  public:
  void clear_entity_updates();
  ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* mutable_entity_updates(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate >*
      mutable_entity_updates();
  private:
  const ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& _internal_entity_updates(int index) const;
  ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* _internal_add_entity_updates();
  public:
  const ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& entity_updates(int index) const;
  ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* add_entity_updates();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate >&
      entity_updates() const;

  // optional bool new_update = 1;
  bool has_new_update() const;
  private:
  bool _internal_has_new_update() const;
  public:
  void clear_new_update();
  bool new_update() const;
  void set_new_update(bool value);
  private:
  bool _internal_new_update() const;
  void _internal_set_new_update(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ProcessSpottedEntityUpdate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate > entity_updates_;
  bool new_update_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SendPlayerItemDrops final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_SendPlayerItemDrops) */ {
 public:
  inline CCSUsrMsg_SendPlayerItemDrops() : CCSUsrMsg_SendPlayerItemDrops(nullptr) {}
  ~CCSUsrMsg_SendPlayerItemDrops() override;
  explicit constexpr CCSUsrMsg_SendPlayerItemDrops(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_SendPlayerItemDrops(const CCSUsrMsg_SendPlayerItemDrops& from);
  CCSUsrMsg_SendPlayerItemDrops(CCSUsrMsg_SendPlayerItemDrops&& from) noexcept
    : CCSUsrMsg_SendPlayerItemDrops() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_SendPlayerItemDrops& operator=(const CCSUsrMsg_SendPlayerItemDrops& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_SendPlayerItemDrops& operator=(CCSUsrMsg_SendPlayerItemDrops&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_SendPlayerItemDrops& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_SendPlayerItemDrops* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_SendPlayerItemDrops*>(
               &_CCSUsrMsg_SendPlayerItemDrops_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CCSUsrMsg_SendPlayerItemDrops& a, CCSUsrMsg_SendPlayerItemDrops& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_SendPlayerItemDrops* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_SendPlayerItemDrops* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_SendPlayerItemDrops* New() const final {
    return new CCSUsrMsg_SendPlayerItemDrops();
  }

  CCSUsrMsg_SendPlayerItemDrops* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_SendPlayerItemDrops>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_SendPlayerItemDrops& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_SendPlayerItemDrops& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_SendPlayerItemDrops* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_SendPlayerItemDrops";
  }
  protected:
  explicit CCSUsrMsg_SendPlayerItemDrops(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityUpdatesFieldNumber = 1,
  };
  // repeated .CEconItemPreviewDataBlock entity_updates = 1;
  int entity_updates_size() const;
  private:
  int _internal_entity_updates_size() const;
  public:
  void clear_entity_updates();
  ::CEconItemPreviewDataBlock* mutable_entity_updates(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CEconItemPreviewDataBlock >*
      mutable_entity_updates();
  private:
  const ::CEconItemPreviewDataBlock& _internal_entity_updates(int index) const;
  ::CEconItemPreviewDataBlock* _internal_add_entity_updates();
  public:
  const ::CEconItemPreviewDataBlock& entity_updates(int index) const;
  ::CEconItemPreviewDataBlock* add_entity_updates();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CEconItemPreviewDataBlock >&
      entity_updates() const;

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SendPlayerItemDrops)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CEconItemPreviewDataBlock > entity_updates_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SendPlayerItemFound final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_SendPlayerItemFound) */ {
 public:
  inline CCSUsrMsg_SendPlayerItemFound() : CCSUsrMsg_SendPlayerItemFound(nullptr) {}
  ~CCSUsrMsg_SendPlayerItemFound() override;
  explicit constexpr CCSUsrMsg_SendPlayerItemFound(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_SendPlayerItemFound(const CCSUsrMsg_SendPlayerItemFound& from);
  CCSUsrMsg_SendPlayerItemFound(CCSUsrMsg_SendPlayerItemFound&& from) noexcept
    : CCSUsrMsg_SendPlayerItemFound() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_SendPlayerItemFound& operator=(const CCSUsrMsg_SendPlayerItemFound& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_SendPlayerItemFound& operator=(CCSUsrMsg_SendPlayerItemFound&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_SendPlayerItemFound& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_SendPlayerItemFound* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_SendPlayerItemFound*>(
               &_CCSUsrMsg_SendPlayerItemFound_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CCSUsrMsg_SendPlayerItemFound& a, CCSUsrMsg_SendPlayerItemFound& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_SendPlayerItemFound* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_SendPlayerItemFound* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_SendPlayerItemFound* New() const final {
    return new CCSUsrMsg_SendPlayerItemFound();
  }

  CCSUsrMsg_SendPlayerItemFound* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_SendPlayerItemFound>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_SendPlayerItemFound& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_SendPlayerItemFound& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_SendPlayerItemFound* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_SendPlayerItemFound";
  }
  protected:
  explicit CCSUsrMsg_SendPlayerItemFound(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIteminfoFieldNumber = 1,
    kEntindexFieldNumber = 2,
  };
  // optional .CEconItemPreviewDataBlock iteminfo = 1;
  bool has_iteminfo() const;
  private:
  bool _internal_has_iteminfo() const;
  public:
  void clear_iteminfo();
  const ::CEconItemPreviewDataBlock& iteminfo() const;
  PROTOBUF_MUST_USE_RESULT ::CEconItemPreviewDataBlock* release_iteminfo();
  ::CEconItemPreviewDataBlock* mutable_iteminfo();
  void set_allocated_iteminfo(::CEconItemPreviewDataBlock* iteminfo);
  private:
  const ::CEconItemPreviewDataBlock& _internal_iteminfo() const;
  ::CEconItemPreviewDataBlock* _internal_mutable_iteminfo();
  public:
  void unsafe_arena_set_allocated_iteminfo(
      ::CEconItemPreviewDataBlock* iteminfo);
  ::CEconItemPreviewDataBlock* unsafe_arena_release_iteminfo();

  // optional int32 entindex = 2;
  bool has_entindex() const;
  private:
  bool _internal_has_entindex() const;
  public:
  void clear_entindex();
  ::PROTOBUF_NAMESPACE_ID::int32 entindex() const;
  void set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entindex() const;
  void _internal_set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SendPlayerItemFound)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CEconItemPreviewDataBlock* iteminfo_;
  ::PROTOBUF_NAMESPACE_ID::int32 entindex_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ReloadEffect final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ReloadEffect) */ {
 public:
  inline CCSUsrMsg_ReloadEffect() : CCSUsrMsg_ReloadEffect(nullptr) {}
  ~CCSUsrMsg_ReloadEffect() override;
  explicit constexpr CCSUsrMsg_ReloadEffect(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_ReloadEffect(const CCSUsrMsg_ReloadEffect& from);
  CCSUsrMsg_ReloadEffect(CCSUsrMsg_ReloadEffect&& from) noexcept
    : CCSUsrMsg_ReloadEffect() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ReloadEffect& operator=(const CCSUsrMsg_ReloadEffect& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_ReloadEffect& operator=(CCSUsrMsg_ReloadEffect&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_ReloadEffect& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_ReloadEffect* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ReloadEffect*>(
               &_CCSUsrMsg_ReloadEffect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CCSUsrMsg_ReloadEffect& a, CCSUsrMsg_ReloadEffect& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_ReloadEffect* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_ReloadEffect* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ReloadEffect* New() const final {
    return new CCSUsrMsg_ReloadEffect();
  }

  CCSUsrMsg_ReloadEffect* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ReloadEffect>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_ReloadEffect& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_ReloadEffect& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ReloadEffect* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_ReloadEffect";
  }
  protected:
  explicit CCSUsrMsg_ReloadEffect(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntidxFieldNumber = 1,
    kActanimFieldNumber = 2,
    kOriginXFieldNumber = 3,
    kOriginYFieldNumber = 4,
    kOriginZFieldNumber = 5,
  };
  // optional int32 entidx = 1;
  bool has_entidx() const;
  private:
  bool _internal_has_entidx() const;
  public:
  void clear_entidx();
  ::PROTOBUF_NAMESPACE_ID::int32 entidx() const;
  void set_entidx(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entidx() const;
  void _internal_set_entidx(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 actanim = 2;
  bool has_actanim() const;
  private:
  bool _internal_has_actanim() const;
  public:
  void clear_actanim();
  ::PROTOBUF_NAMESPACE_ID::int32 actanim() const;
  void set_actanim(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_actanim() const;
  void _internal_set_actanim(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float origin_x = 3;
  bool has_origin_x() const;
  private:
  bool _internal_has_origin_x() const;
  public:
  void clear_origin_x();
  float origin_x() const;
  void set_origin_x(float value);
  private:
  float _internal_origin_x() const;
  void _internal_set_origin_x(float value);
  public:

  // optional float origin_y = 4;
  bool has_origin_y() const;
  private:
  bool _internal_has_origin_y() const;
  public:
  void clear_origin_y();
  float origin_y() const;
  void set_origin_y(float value);
  private:
  float _internal_origin_y() const;
  void _internal_set_origin_y(float value);
  public:

  // optional float origin_z = 5;
  bool has_origin_z() const;
  private:
  bool _internal_has_origin_z() const;
  public:
  void clear_origin_z();
  float origin_z() const;
  void set_origin_z(float value);
  private:
  float _internal_origin_z() const;
  void _internal_set_origin_z(float value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ReloadEffect)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 entidx_;
  ::PROTOBUF_NAMESPACE_ID::int32 actanim_;
  float origin_x_;
  float origin_y_;
  float origin_z_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_AdjustMoney final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_AdjustMoney) */ {
 public:
  inline CCSUsrMsg_AdjustMoney() : CCSUsrMsg_AdjustMoney(nullptr) {}
  ~CCSUsrMsg_AdjustMoney() override;
  explicit constexpr CCSUsrMsg_AdjustMoney(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_AdjustMoney(const CCSUsrMsg_AdjustMoney& from);
  CCSUsrMsg_AdjustMoney(CCSUsrMsg_AdjustMoney&& from) noexcept
    : CCSUsrMsg_AdjustMoney() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_AdjustMoney& operator=(const CCSUsrMsg_AdjustMoney& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_AdjustMoney& operator=(CCSUsrMsg_AdjustMoney&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_AdjustMoney& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_AdjustMoney* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_AdjustMoney*>(
               &_CCSUsrMsg_AdjustMoney_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(CCSUsrMsg_AdjustMoney& a, CCSUsrMsg_AdjustMoney& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_AdjustMoney* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_AdjustMoney* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_AdjustMoney* New() const final {
    return new CCSUsrMsg_AdjustMoney();
  }

  CCSUsrMsg_AdjustMoney* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_AdjustMoney>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_AdjustMoney& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_AdjustMoney& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_AdjustMoney* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_AdjustMoney";
  }
  protected:
  explicit CCSUsrMsg_AdjustMoney(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAmountFieldNumber = 1,
  };
  // optional int32 amount = 1;
  bool has_amount() const;
  private:
  bool _internal_has_amount() const;
  public:
  void clear_amount();
  ::PROTOBUF_NAMESPACE_ID::int32 amount() const;
  void set_amount(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_amount() const;
  void _internal_set_amount(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_AdjustMoney)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 amount_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ReportHit final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ReportHit) */ {
 public:
  inline CCSUsrMsg_ReportHit() : CCSUsrMsg_ReportHit(nullptr) {}
  ~CCSUsrMsg_ReportHit() override;
  explicit constexpr CCSUsrMsg_ReportHit(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_ReportHit(const CCSUsrMsg_ReportHit& from);
  CCSUsrMsg_ReportHit(CCSUsrMsg_ReportHit&& from) noexcept
    : CCSUsrMsg_ReportHit() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ReportHit& operator=(const CCSUsrMsg_ReportHit& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_ReportHit& operator=(CCSUsrMsg_ReportHit&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_ReportHit& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_ReportHit* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ReportHit*>(
               &_CCSUsrMsg_ReportHit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CCSUsrMsg_ReportHit& a, CCSUsrMsg_ReportHit& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_ReportHit* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_ReportHit* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ReportHit* New() const final {
    return new CCSUsrMsg_ReportHit();
  }

  CCSUsrMsg_ReportHit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ReportHit>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_ReportHit& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_ReportHit& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ReportHit* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_ReportHit";
  }
  protected:
  explicit CCSUsrMsg_ReportHit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPosXFieldNumber = 1,
    kPosYFieldNumber = 2,
    kPosZFieldNumber = 3,
    kTimestampFieldNumber = 4,
  };
  // optional float pos_x = 1;
  bool has_pos_x() const;
  private:
  bool _internal_has_pos_x() const;
  public:
  void clear_pos_x();
  float pos_x() const;
  void set_pos_x(float value);
  private:
  float _internal_pos_x() const;
  void _internal_set_pos_x(float value);
  public:

  // optional float pos_y = 2;
  bool has_pos_y() const;
  private:
  bool _internal_has_pos_y() const;
  public:
  void clear_pos_y();
  float pos_y() const;
  void set_pos_y(float value);
  private:
  float _internal_pos_y() const;
  void _internal_set_pos_y(float value);
  public:

  // optional float pos_z = 3;
  bool has_pos_z() const;
  private:
  bool _internal_has_pos_z() const;
  public:
  void clear_pos_z();
  float pos_z() const;
  void set_pos_z(float value);
  private:
  float _internal_pos_z() const;
  void _internal_set_pos_z(float value);
  public:

  // optional float timestamp = 4;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  float timestamp() const;
  void set_timestamp(float value);
  private:
  float _internal_timestamp() const;
  void _internal_set_timestamp(float value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ReportHit)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  float timestamp_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_KillCam final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_KillCam) */ {
 public:
  inline CCSUsrMsg_KillCam() : CCSUsrMsg_KillCam(nullptr) {}
  ~CCSUsrMsg_KillCam() override;
  explicit constexpr CCSUsrMsg_KillCam(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_KillCam(const CCSUsrMsg_KillCam& from);
  CCSUsrMsg_KillCam(CCSUsrMsg_KillCam&& from) noexcept
    : CCSUsrMsg_KillCam() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_KillCam& operator=(const CCSUsrMsg_KillCam& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_KillCam& operator=(CCSUsrMsg_KillCam&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_KillCam& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_KillCam* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_KillCam*>(
               &_CCSUsrMsg_KillCam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CCSUsrMsg_KillCam& a, CCSUsrMsg_KillCam& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_KillCam* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_KillCam* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_KillCam* New() const final {
    return new CCSUsrMsg_KillCam();
  }

  CCSUsrMsg_KillCam* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_KillCam>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_KillCam& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_KillCam& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_KillCam* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_KillCam";
  }
  protected:
  explicit CCSUsrMsg_KillCam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObsModeFieldNumber = 1,
    kFirstTargetFieldNumber = 2,
    kSecondTargetFieldNumber = 3,
  };
  // optional int32 obs_mode = 1;
  bool has_obs_mode() const;
  private:
  bool _internal_has_obs_mode() const;
  public:
  void clear_obs_mode();
  ::PROTOBUF_NAMESPACE_ID::int32 obs_mode() const;
  void set_obs_mode(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_obs_mode() const;
  void _internal_set_obs_mode(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 first_target = 2;
  bool has_first_target() const;
  private:
  bool _internal_has_first_target() const;
  public:
  void clear_first_target();
  ::PROTOBUF_NAMESPACE_ID::int32 first_target() const;
  void set_first_target(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_first_target() const;
  void _internal_set_first_target(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 second_target = 3;
  bool has_second_target() const;
  private:
  bool _internal_has_second_target() const;
  public:
  void clear_second_target();
  ::PROTOBUF_NAMESPACE_ID::int32 second_target() const;
  void set_second_target(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_second_target() const;
  void _internal_set_second_target(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_KillCam)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 obs_mode_;
  ::PROTOBUF_NAMESPACE_ID::int32 first_target_;
  ::PROTOBUF_NAMESPACE_ID::int32 second_target_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_DesiredTimescale final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_DesiredTimescale) */ {
 public:
  inline CCSUsrMsg_DesiredTimescale() : CCSUsrMsg_DesiredTimescale(nullptr) {}
  ~CCSUsrMsg_DesiredTimescale() override;
  explicit constexpr CCSUsrMsg_DesiredTimescale(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_DesiredTimescale(const CCSUsrMsg_DesiredTimescale& from);
  CCSUsrMsg_DesiredTimescale(CCSUsrMsg_DesiredTimescale&& from) noexcept
    : CCSUsrMsg_DesiredTimescale() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_DesiredTimescale& operator=(const CCSUsrMsg_DesiredTimescale& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_DesiredTimescale& operator=(CCSUsrMsg_DesiredTimescale&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_DesiredTimescale& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_DesiredTimescale* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_DesiredTimescale*>(
               &_CCSUsrMsg_DesiredTimescale_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(CCSUsrMsg_DesiredTimescale& a, CCSUsrMsg_DesiredTimescale& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_DesiredTimescale* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_DesiredTimescale* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_DesiredTimescale* New() const final {
    return new CCSUsrMsg_DesiredTimescale();
  }

  CCSUsrMsg_DesiredTimescale* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_DesiredTimescale>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_DesiredTimescale& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_DesiredTimescale& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_DesiredTimescale* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_DesiredTimescale";
  }
  protected:
  explicit CCSUsrMsg_DesiredTimescale(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDesiredTimescaleFieldNumber = 1,
    kDurationRealtimeSecFieldNumber = 2,
    kInterpolatorTypeFieldNumber = 3,
    kStartBlendTimeFieldNumber = 4,
  };
  // optional float desired_timescale = 1;
  bool has_desired_timescale() const;
  private:
  bool _internal_has_desired_timescale() const;
  public:
  void clear_desired_timescale();
  float desired_timescale() const;
  void set_desired_timescale(float value);
  private:
  float _internal_desired_timescale() const;
  void _internal_set_desired_timescale(float value);
  public:

  // optional float duration_realtime_sec = 2;
  bool has_duration_realtime_sec() const;
  private:
  bool _internal_has_duration_realtime_sec() const;
  public:
  void clear_duration_realtime_sec();
  float duration_realtime_sec() const;
  void set_duration_realtime_sec(float value);
  private:
  float _internal_duration_realtime_sec() const;
  void _internal_set_duration_realtime_sec(float value);
  public:

  // optional int32 interpolator_type = 3;
  bool has_interpolator_type() const;
  private:
  bool _internal_has_interpolator_type() const;
  public:
  void clear_interpolator_type();
  ::PROTOBUF_NAMESPACE_ID::int32 interpolator_type() const;
  void set_interpolator_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_interpolator_type() const;
  void _internal_set_interpolator_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float start_blend_time = 4;
  bool has_start_blend_time() const;
  private:
  bool _internal_has_start_blend_time() const;
  public:
  void clear_start_blend_time();
  float start_blend_time() const;
  void set_start_blend_time(float value);
  private:
  float _internal_start_blend_time() const;
  void _internal_set_start_blend_time(float value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_DesiredTimescale)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float desired_timescale_;
  float duration_realtime_sec_;
  ::PROTOBUF_NAMESPACE_ID::int32 interpolator_type_;
  float start_blend_time_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_CurrentTimescale final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_CurrentTimescale) */ {
 public:
  inline CCSUsrMsg_CurrentTimescale() : CCSUsrMsg_CurrentTimescale(nullptr) {}
  ~CCSUsrMsg_CurrentTimescale() override;
  explicit constexpr CCSUsrMsg_CurrentTimescale(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_CurrentTimescale(const CCSUsrMsg_CurrentTimescale& from);
  CCSUsrMsg_CurrentTimescale(CCSUsrMsg_CurrentTimescale&& from) noexcept
    : CCSUsrMsg_CurrentTimescale() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_CurrentTimescale& operator=(const CCSUsrMsg_CurrentTimescale& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_CurrentTimescale& operator=(CCSUsrMsg_CurrentTimescale&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_CurrentTimescale& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_CurrentTimescale* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_CurrentTimescale*>(
               &_CCSUsrMsg_CurrentTimescale_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(CCSUsrMsg_CurrentTimescale& a, CCSUsrMsg_CurrentTimescale& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_CurrentTimescale* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_CurrentTimescale* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_CurrentTimescale* New() const final {
    return new CCSUsrMsg_CurrentTimescale();
  }

  CCSUsrMsg_CurrentTimescale* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_CurrentTimescale>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_CurrentTimescale& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_CurrentTimescale& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_CurrentTimescale* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_CurrentTimescale";
  }
  protected:
  explicit CCSUsrMsg_CurrentTimescale(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurTimescaleFieldNumber = 1,
  };
  // optional float cur_timescale = 1;
  bool has_cur_timescale() const;
  private:
  bool _internal_has_cur_timescale() const;
  public:
  void clear_cur_timescale();
  float cur_timescale() const;
  void set_cur_timescale(float value);
  private:
  float _internal_cur_timescale() const;
  void _internal_set_cur_timescale(float value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_CurrentTimescale)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float cur_timescale_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_AchievementEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_AchievementEvent) */ {
 public:
  inline CCSUsrMsg_AchievementEvent() : CCSUsrMsg_AchievementEvent(nullptr) {}
  ~CCSUsrMsg_AchievementEvent() override;
  explicit constexpr CCSUsrMsg_AchievementEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_AchievementEvent(const CCSUsrMsg_AchievementEvent& from);
  CCSUsrMsg_AchievementEvent(CCSUsrMsg_AchievementEvent&& from) noexcept
    : CCSUsrMsg_AchievementEvent() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_AchievementEvent& operator=(const CCSUsrMsg_AchievementEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_AchievementEvent& operator=(CCSUsrMsg_AchievementEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_AchievementEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_AchievementEvent* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_AchievementEvent*>(
               &_CCSUsrMsg_AchievementEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CCSUsrMsg_AchievementEvent& a, CCSUsrMsg_AchievementEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_AchievementEvent* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_AchievementEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_AchievementEvent* New() const final {
    return new CCSUsrMsg_AchievementEvent();
  }

  CCSUsrMsg_AchievementEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_AchievementEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_AchievementEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_AchievementEvent& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_AchievementEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_AchievementEvent";
  }
  protected:
  explicit CCSUsrMsg_AchievementEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAchievementFieldNumber = 1,
    kCountFieldNumber = 2,
    kUserIdFieldNumber = 3,
  };
  // optional int32 achievement = 1;
  bool has_achievement() const;
  private:
  bool _internal_has_achievement() const;
  public:
  void clear_achievement();
  ::PROTOBUF_NAMESPACE_ID::int32 achievement() const;
  void set_achievement(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_achievement() const;
  void _internal_set_achievement(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 count = 2;
  bool has_count() const;
  private:
  bool _internal_has_count() const;
  public:
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 user_id = 3;
  bool has_user_id() const;
  private:
  bool _internal_has_user_id() const;
  public:
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_AchievementEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 achievement_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_MatchEndConditions final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_MatchEndConditions) */ {
 public:
  inline CCSUsrMsg_MatchEndConditions() : CCSUsrMsg_MatchEndConditions(nullptr) {}
  ~CCSUsrMsg_MatchEndConditions() override;
  explicit constexpr CCSUsrMsg_MatchEndConditions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_MatchEndConditions(const CCSUsrMsg_MatchEndConditions& from);
  CCSUsrMsg_MatchEndConditions(CCSUsrMsg_MatchEndConditions&& from) noexcept
    : CCSUsrMsg_MatchEndConditions() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_MatchEndConditions& operator=(const CCSUsrMsg_MatchEndConditions& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_MatchEndConditions& operator=(CCSUsrMsg_MatchEndConditions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_MatchEndConditions& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_MatchEndConditions* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_MatchEndConditions*>(
               &_CCSUsrMsg_MatchEndConditions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(CCSUsrMsg_MatchEndConditions& a, CCSUsrMsg_MatchEndConditions& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_MatchEndConditions* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_MatchEndConditions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_MatchEndConditions* New() const final {
    return new CCSUsrMsg_MatchEndConditions();
  }

  CCSUsrMsg_MatchEndConditions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_MatchEndConditions>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_MatchEndConditions& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_MatchEndConditions& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_MatchEndConditions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_MatchEndConditions";
  }
  protected:
  explicit CCSUsrMsg_MatchEndConditions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFraglimitFieldNumber = 1,
    kMpMaxroundsFieldNumber = 2,
    kMpWinlimitFieldNumber = 3,
    kMpTimelimitFieldNumber = 4,
  };
  // optional int32 fraglimit = 1;
  bool has_fraglimit() const;
  private:
  bool _internal_has_fraglimit() const;
  public:
  void clear_fraglimit();
  ::PROTOBUF_NAMESPACE_ID::int32 fraglimit() const;
  void set_fraglimit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_fraglimit() const;
  void _internal_set_fraglimit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 mp_maxrounds = 2;
  bool has_mp_maxrounds() const;
  private:
  bool _internal_has_mp_maxrounds() const;
  public:
  void clear_mp_maxrounds();
  ::PROTOBUF_NAMESPACE_ID::int32 mp_maxrounds() const;
  void set_mp_maxrounds(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mp_maxrounds() const;
  void _internal_set_mp_maxrounds(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 mp_winlimit = 3;
  bool has_mp_winlimit() const;
  private:
  bool _internal_has_mp_winlimit() const;
  public:
  void clear_mp_winlimit();
  ::PROTOBUF_NAMESPACE_ID::int32 mp_winlimit() const;
  void set_mp_winlimit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mp_winlimit() const;
  void _internal_set_mp_winlimit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 mp_timelimit = 4;
  bool has_mp_timelimit() const;
  private:
  bool _internal_has_mp_timelimit() const;
  public:
  void clear_mp_timelimit();
  ::PROTOBUF_NAMESPACE_ID::int32 mp_timelimit() const;
  void set_mp_timelimit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mp_timelimit() const;
  void _internal_set_mp_timelimit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_MatchEndConditions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 fraglimit_;
  ::PROTOBUF_NAMESPACE_ID::int32 mp_maxrounds_;
  ::PROTOBUF_NAMESPACE_ID::int32 mp_winlimit_;
  ::PROTOBUF_NAMESPACE_ID::int32 mp_timelimit_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_PlayerStatsUpdate_Stat final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_PlayerStatsUpdate.Stat) */ {
 public:
  inline CCSUsrMsg_PlayerStatsUpdate_Stat() : CCSUsrMsg_PlayerStatsUpdate_Stat(nullptr) {}
  ~CCSUsrMsg_PlayerStatsUpdate_Stat() override;
  explicit constexpr CCSUsrMsg_PlayerStatsUpdate_Stat(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_PlayerStatsUpdate_Stat(const CCSUsrMsg_PlayerStatsUpdate_Stat& from);
  CCSUsrMsg_PlayerStatsUpdate_Stat(CCSUsrMsg_PlayerStatsUpdate_Stat&& from) noexcept
    : CCSUsrMsg_PlayerStatsUpdate_Stat() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_PlayerStatsUpdate_Stat& operator=(const CCSUsrMsg_PlayerStatsUpdate_Stat& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_PlayerStatsUpdate_Stat& operator=(CCSUsrMsg_PlayerStatsUpdate_Stat&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_PlayerStatsUpdate_Stat& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_PlayerStatsUpdate_Stat* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_PlayerStatsUpdate_Stat*>(
               &_CCSUsrMsg_PlayerStatsUpdate_Stat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(CCSUsrMsg_PlayerStatsUpdate_Stat& a, CCSUsrMsg_PlayerStatsUpdate_Stat& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_PlayerStatsUpdate_Stat* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_PlayerStatsUpdate_Stat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_PlayerStatsUpdate_Stat* New() const final {
    return new CCSUsrMsg_PlayerStatsUpdate_Stat();
  }

  CCSUsrMsg_PlayerStatsUpdate_Stat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_PlayerStatsUpdate_Stat>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_PlayerStatsUpdate_Stat& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_PlayerStatsUpdate_Stat& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_PlayerStatsUpdate_Stat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_PlayerStatsUpdate.Stat";
  }
  protected:
  explicit CCSUsrMsg_PlayerStatsUpdate_Stat(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdxFieldNumber = 1,
    kDeltaFieldNumber = 2,
  };
  // optional int32 idx = 1;
  bool has_idx() const;
  private:
  bool _internal_has_idx() const;
  public:
  void clear_idx();
  ::PROTOBUF_NAMESPACE_ID::int32 idx() const;
  void set_idx(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_idx() const;
  void _internal_set_idx(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 delta = 2;
  bool has_delta() const;
  private:
  bool _internal_has_delta() const;
  public:
  void clear_delta();
  ::PROTOBUF_NAMESPACE_ID::int32 delta() const;
  void set_delta(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_delta() const;
  void _internal_set_delta(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_PlayerStatsUpdate.Stat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 idx_;
  ::PROTOBUF_NAMESPACE_ID::int32 delta_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_PlayerStatsUpdate final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_PlayerStatsUpdate) */ {
 public:
  inline CCSUsrMsg_PlayerStatsUpdate() : CCSUsrMsg_PlayerStatsUpdate(nullptr) {}
  ~CCSUsrMsg_PlayerStatsUpdate() override;
  explicit constexpr CCSUsrMsg_PlayerStatsUpdate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_PlayerStatsUpdate(const CCSUsrMsg_PlayerStatsUpdate& from);
  CCSUsrMsg_PlayerStatsUpdate(CCSUsrMsg_PlayerStatsUpdate&& from) noexcept
    : CCSUsrMsg_PlayerStatsUpdate() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_PlayerStatsUpdate& operator=(const CCSUsrMsg_PlayerStatsUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_PlayerStatsUpdate& operator=(CCSUsrMsg_PlayerStatsUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_PlayerStatsUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_PlayerStatsUpdate* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_PlayerStatsUpdate*>(
               &_CCSUsrMsg_PlayerStatsUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(CCSUsrMsg_PlayerStatsUpdate& a, CCSUsrMsg_PlayerStatsUpdate& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_PlayerStatsUpdate* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_PlayerStatsUpdate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_PlayerStatsUpdate* New() const final {
    return new CCSUsrMsg_PlayerStatsUpdate();
  }

  CCSUsrMsg_PlayerStatsUpdate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_PlayerStatsUpdate>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_PlayerStatsUpdate& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_PlayerStatsUpdate& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_PlayerStatsUpdate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_PlayerStatsUpdate";
  }
  protected:
  explicit CCSUsrMsg_PlayerStatsUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CCSUsrMsg_PlayerStatsUpdate_Stat Stat;

  // accessors -------------------------------------------------------

  enum : int {
    kStatsFieldNumber = 4,
    kVersionFieldNumber = 1,
    kUserIdFieldNumber = 5,
    kCrcFieldNumber = 6,
  };
  // repeated .CCSUsrMsg_PlayerStatsUpdate.Stat stats = 4;
  int stats_size() const;
  private:
  int _internal_stats_size() const;
  public:
  void clear_stats();
  ::CCSUsrMsg_PlayerStatsUpdate_Stat* mutable_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_PlayerStatsUpdate_Stat >*
      mutable_stats();
  private:
  const ::CCSUsrMsg_PlayerStatsUpdate_Stat& _internal_stats(int index) const;
  ::CCSUsrMsg_PlayerStatsUpdate_Stat* _internal_add_stats();
  public:
  const ::CCSUsrMsg_PlayerStatsUpdate_Stat& stats(int index) const;
  ::CCSUsrMsg_PlayerStatsUpdate_Stat* add_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_PlayerStatsUpdate_Stat >&
      stats() const;

  // optional int32 version = 1;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::int32 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 user_id = 5;
  bool has_user_id() const;
  private:
  bool _internal_has_user_id() const;
  public:
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 crc = 6;
  bool has_crc() const;
  private:
  bool _internal_has_crc() const;
  public:
  void clear_crc();
  ::PROTOBUF_NAMESPACE_ID::int32 crc() const;
  void set_crc(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_crc() const;
  void _internal_set_crc(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_PlayerStatsUpdate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_PlayerStatsUpdate_Stat > stats_;
  ::PROTOBUF_NAMESPACE_ID::int32 version_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 crc_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_DisplayInventory final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_DisplayInventory) */ {
 public:
  inline CCSUsrMsg_DisplayInventory() : CCSUsrMsg_DisplayInventory(nullptr) {}
  ~CCSUsrMsg_DisplayInventory() override;
  explicit constexpr CCSUsrMsg_DisplayInventory(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_DisplayInventory(const CCSUsrMsg_DisplayInventory& from);
  CCSUsrMsg_DisplayInventory(CCSUsrMsg_DisplayInventory&& from) noexcept
    : CCSUsrMsg_DisplayInventory() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_DisplayInventory& operator=(const CCSUsrMsg_DisplayInventory& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_DisplayInventory& operator=(CCSUsrMsg_DisplayInventory&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_DisplayInventory& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_DisplayInventory* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_DisplayInventory*>(
               &_CCSUsrMsg_DisplayInventory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(CCSUsrMsg_DisplayInventory& a, CCSUsrMsg_DisplayInventory& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_DisplayInventory* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_DisplayInventory* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_DisplayInventory* New() const final {
    return new CCSUsrMsg_DisplayInventory();
  }

  CCSUsrMsg_DisplayInventory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_DisplayInventory>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_DisplayInventory& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_DisplayInventory& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_DisplayInventory* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_DisplayInventory";
  }
  protected:
  explicit CCSUsrMsg_DisplayInventory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDisplayFieldNumber = 1,
    kUserIdFieldNumber = 2,
  };
  // optional bool display = 1;
  bool has_display() const;
  private:
  bool _internal_has_display() const;
  public:
  void clear_display();
  bool display() const;
  void set_display(bool value);
  private:
  bool _internal_display() const;
  void _internal_set_display(bool value);
  public:

  // optional int32 user_id = 2;
  bool has_user_id() const;
  private:
  bool _internal_has_user_id() const;
  public:
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_DisplayInventory)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool display_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_QuestProgress final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_QuestProgress) */ {
 public:
  inline CCSUsrMsg_QuestProgress() : CCSUsrMsg_QuestProgress(nullptr) {}
  ~CCSUsrMsg_QuestProgress() override;
  explicit constexpr CCSUsrMsg_QuestProgress(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_QuestProgress(const CCSUsrMsg_QuestProgress& from);
  CCSUsrMsg_QuestProgress(CCSUsrMsg_QuestProgress&& from) noexcept
    : CCSUsrMsg_QuestProgress() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_QuestProgress& operator=(const CCSUsrMsg_QuestProgress& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_QuestProgress& operator=(CCSUsrMsg_QuestProgress&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_QuestProgress& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_QuestProgress* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_QuestProgress*>(
               &_CCSUsrMsg_QuestProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(CCSUsrMsg_QuestProgress& a, CCSUsrMsg_QuestProgress& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_QuestProgress* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_QuestProgress* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_QuestProgress* New() const final {
    return new CCSUsrMsg_QuestProgress();
  }

  CCSUsrMsg_QuestProgress* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_QuestProgress>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_QuestProgress& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_QuestProgress& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_QuestProgress* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_QuestProgress";
  }
  protected:
  explicit CCSUsrMsg_QuestProgress(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuestIdFieldNumber = 1,
    kNormalPointsFieldNumber = 2,
    kBonusPointsFieldNumber = 3,
    kIsEventQuestFieldNumber = 4,
  };
  // optional uint32 quest_id = 1;
  bool has_quest_id() const;
  private:
  bool _internal_has_quest_id() const;
  public:
  void clear_quest_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 quest_id() const;
  void set_quest_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_quest_id() const;
  void _internal_set_quest_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 normal_points = 2;
  bool has_normal_points() const;
  private:
  bool _internal_has_normal_points() const;
  public:
  void clear_normal_points();
  ::PROTOBUF_NAMESPACE_ID::uint32 normal_points() const;
  void set_normal_points(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_normal_points() const;
  void _internal_set_normal_points(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 bonus_points = 3;
  bool has_bonus_points() const;
  private:
  bool _internal_has_bonus_points() const;
  public:
  void clear_bonus_points();
  ::PROTOBUF_NAMESPACE_ID::uint32 bonus_points() const;
  void set_bonus_points(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bonus_points() const;
  void _internal_set_bonus_points(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool is_event_quest = 4;
  bool has_is_event_quest() const;
  private:
  bool _internal_has_is_event_quest() const;
  public:
  void clear_is_event_quest();
  bool is_event_quest() const;
  void set_is_event_quest(bool value);
  private:
  bool _internal_is_event_quest() const;
  void _internal_set_is_event_quest(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_QuestProgress)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 quest_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 normal_points_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bonus_points_;
  bool is_event_quest_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ScoreLeaderboardData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ScoreLeaderboardData) */ {
 public:
  inline CCSUsrMsg_ScoreLeaderboardData() : CCSUsrMsg_ScoreLeaderboardData(nullptr) {}
  ~CCSUsrMsg_ScoreLeaderboardData() override;
  explicit constexpr CCSUsrMsg_ScoreLeaderboardData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_ScoreLeaderboardData(const CCSUsrMsg_ScoreLeaderboardData& from);
  CCSUsrMsg_ScoreLeaderboardData(CCSUsrMsg_ScoreLeaderboardData&& from) noexcept
    : CCSUsrMsg_ScoreLeaderboardData() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ScoreLeaderboardData& operator=(const CCSUsrMsg_ScoreLeaderboardData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_ScoreLeaderboardData& operator=(CCSUsrMsg_ScoreLeaderboardData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_ScoreLeaderboardData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_ScoreLeaderboardData* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ScoreLeaderboardData*>(
               &_CCSUsrMsg_ScoreLeaderboardData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(CCSUsrMsg_ScoreLeaderboardData& a, CCSUsrMsg_ScoreLeaderboardData& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_ScoreLeaderboardData* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_ScoreLeaderboardData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ScoreLeaderboardData* New() const final {
    return new CCSUsrMsg_ScoreLeaderboardData();
  }

  CCSUsrMsg_ScoreLeaderboardData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ScoreLeaderboardData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_ScoreLeaderboardData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_ScoreLeaderboardData& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ScoreLeaderboardData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_ScoreLeaderboardData";
  }
  protected:
  explicit CCSUsrMsg_ScoreLeaderboardData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // optional .ScoreLeaderboardData data = 1;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::ScoreLeaderboardData& data() const;
  PROTOBUF_MUST_USE_RESULT ::ScoreLeaderboardData* release_data();
  ::ScoreLeaderboardData* mutable_data();
  void set_allocated_data(::ScoreLeaderboardData* data);
  private:
  const ::ScoreLeaderboardData& _internal_data() const;
  ::ScoreLeaderboardData* _internal_mutable_data();
  public:
  void unsafe_arena_set_allocated_data(
      ::ScoreLeaderboardData* data);
  ::ScoreLeaderboardData* unsafe_arena_release_data();

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ScoreLeaderboardData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::ScoreLeaderboardData* data_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_PlayerDecalDigitalSignature final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_PlayerDecalDigitalSignature) */ {
 public:
  inline CCSUsrMsg_PlayerDecalDigitalSignature() : CCSUsrMsg_PlayerDecalDigitalSignature(nullptr) {}
  ~CCSUsrMsg_PlayerDecalDigitalSignature() override;
  explicit constexpr CCSUsrMsg_PlayerDecalDigitalSignature(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_PlayerDecalDigitalSignature(const CCSUsrMsg_PlayerDecalDigitalSignature& from);
  CCSUsrMsg_PlayerDecalDigitalSignature(CCSUsrMsg_PlayerDecalDigitalSignature&& from) noexcept
    : CCSUsrMsg_PlayerDecalDigitalSignature() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_PlayerDecalDigitalSignature& operator=(const CCSUsrMsg_PlayerDecalDigitalSignature& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_PlayerDecalDigitalSignature& operator=(CCSUsrMsg_PlayerDecalDigitalSignature&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_PlayerDecalDigitalSignature& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_PlayerDecalDigitalSignature* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_PlayerDecalDigitalSignature*>(
               &_CCSUsrMsg_PlayerDecalDigitalSignature_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(CCSUsrMsg_PlayerDecalDigitalSignature& a, CCSUsrMsg_PlayerDecalDigitalSignature& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_PlayerDecalDigitalSignature* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_PlayerDecalDigitalSignature* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_PlayerDecalDigitalSignature* New() const final {
    return new CCSUsrMsg_PlayerDecalDigitalSignature();
  }

  CCSUsrMsg_PlayerDecalDigitalSignature* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_PlayerDecalDigitalSignature>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_PlayerDecalDigitalSignature& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_PlayerDecalDigitalSignature& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_PlayerDecalDigitalSignature* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_PlayerDecalDigitalSignature";
  }
  protected:
  explicit CCSUsrMsg_PlayerDecalDigitalSignature(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // optional .PlayerDecalDigitalSignature data = 1;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::PlayerDecalDigitalSignature& data() const;
  PROTOBUF_MUST_USE_RESULT ::PlayerDecalDigitalSignature* release_data();
  ::PlayerDecalDigitalSignature* mutable_data();
  void set_allocated_data(::PlayerDecalDigitalSignature* data);
  private:
  const ::PlayerDecalDigitalSignature& _internal_data() const;
  ::PlayerDecalDigitalSignature* _internal_mutable_data();
  public:
  void unsafe_arena_set_allocated_data(
      ::PlayerDecalDigitalSignature* data);
  ::PlayerDecalDigitalSignature* unsafe_arena_release_data();

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_PlayerDecalDigitalSignature)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PlayerDecalDigitalSignature* data_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_XRankGet final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_XRankGet) */ {
 public:
  inline CCSUsrMsg_XRankGet() : CCSUsrMsg_XRankGet(nullptr) {}
  ~CCSUsrMsg_XRankGet() override;
  explicit constexpr CCSUsrMsg_XRankGet(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_XRankGet(const CCSUsrMsg_XRankGet& from);
  CCSUsrMsg_XRankGet(CCSUsrMsg_XRankGet&& from) noexcept
    : CCSUsrMsg_XRankGet() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_XRankGet& operator=(const CCSUsrMsg_XRankGet& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_XRankGet& operator=(CCSUsrMsg_XRankGet&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_XRankGet& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_XRankGet* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_XRankGet*>(
               &_CCSUsrMsg_XRankGet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(CCSUsrMsg_XRankGet& a, CCSUsrMsg_XRankGet& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_XRankGet* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_XRankGet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_XRankGet* New() const final {
    return new CCSUsrMsg_XRankGet();
  }

  CCSUsrMsg_XRankGet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_XRankGet>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_XRankGet& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_XRankGet& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_XRankGet* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_XRankGet";
  }
  protected:
  explicit CCSUsrMsg_XRankGet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModeIdxFieldNumber = 1,
    kControllerFieldNumber = 2,
  };
  // optional int32 mode_idx = 1;
  bool has_mode_idx() const;
  private:
  bool _internal_has_mode_idx() const;
  public:
  void clear_mode_idx();
  ::PROTOBUF_NAMESPACE_ID::int32 mode_idx() const;
  void set_mode_idx(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mode_idx() const;
  void _internal_set_mode_idx(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 controller = 2;
  bool has_controller() const;
  private:
  bool _internal_has_controller() const;
  public:
  void clear_controller();
  ::PROTOBUF_NAMESPACE_ID::int32 controller() const;
  void set_controller(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_controller() const;
  void _internal_set_controller(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_XRankGet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 mode_idx_;
  ::PROTOBUF_NAMESPACE_ID::int32 controller_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_XRankUpd final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_XRankUpd) */ {
 public:
  inline CCSUsrMsg_XRankUpd() : CCSUsrMsg_XRankUpd(nullptr) {}
  ~CCSUsrMsg_XRankUpd() override;
  explicit constexpr CCSUsrMsg_XRankUpd(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_XRankUpd(const CCSUsrMsg_XRankUpd& from);
  CCSUsrMsg_XRankUpd(CCSUsrMsg_XRankUpd&& from) noexcept
    : CCSUsrMsg_XRankUpd() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_XRankUpd& operator=(const CCSUsrMsg_XRankUpd& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_XRankUpd& operator=(CCSUsrMsg_XRankUpd&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_XRankUpd& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_XRankUpd* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_XRankUpd*>(
               &_CCSUsrMsg_XRankUpd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(CCSUsrMsg_XRankUpd& a, CCSUsrMsg_XRankUpd& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_XRankUpd* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_XRankUpd* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_XRankUpd* New() const final {
    return new CCSUsrMsg_XRankUpd();
  }

  CCSUsrMsg_XRankUpd* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_XRankUpd>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_XRankUpd& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_XRankUpd& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_XRankUpd* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_XRankUpd";
  }
  protected:
  explicit CCSUsrMsg_XRankUpd(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModeIdxFieldNumber = 1,
    kControllerFieldNumber = 2,
    kRankingFieldNumber = 3,
  };
  // optional int32 mode_idx = 1;
  bool has_mode_idx() const;
  private:
  bool _internal_has_mode_idx() const;
  public:
  void clear_mode_idx();
  ::PROTOBUF_NAMESPACE_ID::int32 mode_idx() const;
  void set_mode_idx(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mode_idx() const;
  void _internal_set_mode_idx(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 controller = 2;
  bool has_controller() const;
  private:
  bool _internal_has_controller() const;
  public:
  void clear_controller();
  ::PROTOBUF_NAMESPACE_ID::int32 controller() const;
  void set_controller(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_controller() const;
  void _internal_set_controller(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 ranking = 3;
  bool has_ranking() const;
  private:
  bool _internal_has_ranking() const;
  public:
  void clear_ranking();
  ::PROTOBUF_NAMESPACE_ID::int32 ranking() const;
  void set_ranking(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ranking() const;
  void _internal_set_ranking(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_XRankUpd)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 mode_idx_;
  ::PROTOBUF_NAMESPACE_ID::int32 controller_;
  ::PROTOBUF_NAMESPACE_ID::int32 ranking_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_CallVoteFailed final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_CallVoteFailed) */ {
 public:
  inline CCSUsrMsg_CallVoteFailed() : CCSUsrMsg_CallVoteFailed(nullptr) {}
  ~CCSUsrMsg_CallVoteFailed() override;
  explicit constexpr CCSUsrMsg_CallVoteFailed(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_CallVoteFailed(const CCSUsrMsg_CallVoteFailed& from);
  CCSUsrMsg_CallVoteFailed(CCSUsrMsg_CallVoteFailed&& from) noexcept
    : CCSUsrMsg_CallVoteFailed() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_CallVoteFailed& operator=(const CCSUsrMsg_CallVoteFailed& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_CallVoteFailed& operator=(CCSUsrMsg_CallVoteFailed&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_CallVoteFailed& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_CallVoteFailed* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_CallVoteFailed*>(
               &_CCSUsrMsg_CallVoteFailed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(CCSUsrMsg_CallVoteFailed& a, CCSUsrMsg_CallVoteFailed& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_CallVoteFailed* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_CallVoteFailed* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_CallVoteFailed* New() const final {
    return new CCSUsrMsg_CallVoteFailed();
  }

  CCSUsrMsg_CallVoteFailed* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_CallVoteFailed>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_CallVoteFailed& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_CallVoteFailed& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_CallVoteFailed* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_CallVoteFailed";
  }
  protected:
  explicit CCSUsrMsg_CallVoteFailed(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReasonFieldNumber = 1,
    kTimeFieldNumber = 2,
  };
  // optional int32 reason = 1;
  bool has_reason() const;
  private:
  bool _internal_has_reason() const;
  public:
  void clear_reason();
  ::PROTOBUF_NAMESPACE_ID::int32 reason() const;
  void set_reason(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_reason() const;
  void _internal_set_reason(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 time = 2;
  bool has_time() const;
  private:
  bool _internal_has_time() const;
  public:
  void clear_time();
  ::PROTOBUF_NAMESPACE_ID::int32 time() const;
  void set_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_time() const;
  void _internal_set_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_CallVoteFailed)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 reason_;
  ::PROTOBUF_NAMESPACE_ID::int32 time_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoteStart final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_VoteStart) */ {
 public:
  inline CCSUsrMsg_VoteStart() : CCSUsrMsg_VoteStart(nullptr) {}
  ~CCSUsrMsg_VoteStart() override;
  explicit constexpr CCSUsrMsg_VoteStart(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_VoteStart(const CCSUsrMsg_VoteStart& from);
  CCSUsrMsg_VoteStart(CCSUsrMsg_VoteStart&& from) noexcept
    : CCSUsrMsg_VoteStart() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_VoteStart& operator=(const CCSUsrMsg_VoteStart& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_VoteStart& operator=(CCSUsrMsg_VoteStart&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_VoteStart& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_VoteStart* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_VoteStart*>(
               &_CCSUsrMsg_VoteStart_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(CCSUsrMsg_VoteStart& a, CCSUsrMsg_VoteStart& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_VoteStart* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_VoteStart* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_VoteStart* New() const final {
    return new CCSUsrMsg_VoteStart();
  }

  CCSUsrMsg_VoteStart* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_VoteStart>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_VoteStart& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_VoteStart& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_VoteStart* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_VoteStart";
  }
  protected:
  explicit CCSUsrMsg_VoteStart(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDispStrFieldNumber = 4,
    kDetailsStrFieldNumber = 5,
    kOtherTeamStrFieldNumber = 6,
    kTeamFieldNumber = 1,
    kEntIdxFieldNumber = 2,
    kVoteTypeFieldNumber = 3,
    kIsYesNoVoteFieldNumber = 7,
  };
  // optional string disp_str = 4;
  bool has_disp_str() const;
  private:
  bool _internal_has_disp_str() const;
  public:
  void clear_disp_str();
  const std::string& disp_str() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_disp_str(ArgT0&& arg0, ArgT... args);
  std::string* mutable_disp_str();
  PROTOBUF_MUST_USE_RESULT std::string* release_disp_str();
  void set_allocated_disp_str(std::string* disp_str);
  private:
  const std::string& _internal_disp_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_disp_str(const std::string& value);
  std::string* _internal_mutable_disp_str();
  public:

  // optional string details_str = 5;
  bool has_details_str() const;
  private:
  bool _internal_has_details_str() const;
  public:
  void clear_details_str();
  const std::string& details_str() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_details_str(ArgT0&& arg0, ArgT... args);
  std::string* mutable_details_str();
  PROTOBUF_MUST_USE_RESULT std::string* release_details_str();
  void set_allocated_details_str(std::string* details_str);
  private:
  const std::string& _internal_details_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_details_str(const std::string& value);
  std::string* _internal_mutable_details_str();
  public:

  // optional string other_team_str = 6;
  bool has_other_team_str() const;
  private:
  bool _internal_has_other_team_str() const;
  public:
  void clear_other_team_str();
  const std::string& other_team_str() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_other_team_str(ArgT0&& arg0, ArgT... args);
  std::string* mutable_other_team_str();
  PROTOBUF_MUST_USE_RESULT std::string* release_other_team_str();
  void set_allocated_other_team_str(std::string* other_team_str);
  private:
  const std::string& _internal_other_team_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_other_team_str(const std::string& value);
  std::string* _internal_mutable_other_team_str();
  public:

  // optional int32 team = 1;
  bool has_team() const;
  private:
  bool _internal_has_team() const;
  public:
  void clear_team();
  ::PROTOBUF_NAMESPACE_ID::int32 team() const;
  void set_team(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_team() const;
  void _internal_set_team(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 ent_idx = 2;
  bool has_ent_idx() const;
  private:
  bool _internal_has_ent_idx() const;
  public:
  void clear_ent_idx();
  ::PROTOBUF_NAMESPACE_ID::int32 ent_idx() const;
  void set_ent_idx(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ent_idx() const;
  void _internal_set_ent_idx(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 vote_type = 3;
  bool has_vote_type() const;
  private:
  bool _internal_has_vote_type() const;
  public:
  void clear_vote_type();
  ::PROTOBUF_NAMESPACE_ID::int32 vote_type() const;
  void set_vote_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vote_type() const;
  void _internal_set_vote_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool is_yes_no_vote = 7;
  bool has_is_yes_no_vote() const;
  private:
  bool _internal_has_is_yes_no_vote() const;
  public:
  void clear_is_yes_no_vote();
  bool is_yes_no_vote() const;
  void set_is_yes_no_vote(bool value);
  private:
  bool _internal_is_yes_no_vote() const;
  void _internal_set_is_yes_no_vote(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoteStart)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr disp_str_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr details_str_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr other_team_str_;
  ::PROTOBUF_NAMESPACE_ID::int32 team_;
  ::PROTOBUF_NAMESPACE_ID::int32 ent_idx_;
  ::PROTOBUF_NAMESPACE_ID::int32 vote_type_;
  bool is_yes_no_vote_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VotePass final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_VotePass) */ {
 public:
  inline CCSUsrMsg_VotePass() : CCSUsrMsg_VotePass(nullptr) {}
  ~CCSUsrMsg_VotePass() override;
  explicit constexpr CCSUsrMsg_VotePass(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_VotePass(const CCSUsrMsg_VotePass& from);
  CCSUsrMsg_VotePass(CCSUsrMsg_VotePass&& from) noexcept
    : CCSUsrMsg_VotePass() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_VotePass& operator=(const CCSUsrMsg_VotePass& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_VotePass& operator=(CCSUsrMsg_VotePass&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_VotePass& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_VotePass* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_VotePass*>(
               &_CCSUsrMsg_VotePass_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(CCSUsrMsg_VotePass& a, CCSUsrMsg_VotePass& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_VotePass* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_VotePass* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_VotePass* New() const final {
    return new CCSUsrMsg_VotePass();
  }

  CCSUsrMsg_VotePass* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_VotePass>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_VotePass& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_VotePass& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_VotePass* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_VotePass";
  }
  protected:
  explicit CCSUsrMsg_VotePass(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDispStrFieldNumber = 3,
    kDetailsStrFieldNumber = 4,
    kTeamFieldNumber = 1,
    kVoteTypeFieldNumber = 2,
  };
  // optional string disp_str = 3;
  bool has_disp_str() const;
  private:
  bool _internal_has_disp_str() const;
  public:
  void clear_disp_str();
  const std::string& disp_str() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_disp_str(ArgT0&& arg0, ArgT... args);
  std::string* mutable_disp_str();
  PROTOBUF_MUST_USE_RESULT std::string* release_disp_str();
  void set_allocated_disp_str(std::string* disp_str);
  private:
  const std::string& _internal_disp_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_disp_str(const std::string& value);
  std::string* _internal_mutable_disp_str();
  public:

  // optional string details_str = 4;
  bool has_details_str() const;
  private:
  bool _internal_has_details_str() const;
  public:
  void clear_details_str();
  const std::string& details_str() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_details_str(ArgT0&& arg0, ArgT... args);
  std::string* mutable_details_str();
  PROTOBUF_MUST_USE_RESULT std::string* release_details_str();
  void set_allocated_details_str(std::string* details_str);
  private:
  const std::string& _internal_details_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_details_str(const std::string& value);
  std::string* _internal_mutable_details_str();
  public:

  // optional int32 team = 1;
  bool has_team() const;
  private:
  bool _internal_has_team() const;
  public:
  void clear_team();
  ::PROTOBUF_NAMESPACE_ID::int32 team() const;
  void set_team(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_team() const;
  void _internal_set_team(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 vote_type = 2;
  bool has_vote_type() const;
  private:
  bool _internal_has_vote_type() const;
  public:
  void clear_vote_type();
  ::PROTOBUF_NAMESPACE_ID::int32 vote_type() const;
  void set_vote_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vote_type() const;
  void _internal_set_vote_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VotePass)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr disp_str_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr details_str_;
  ::PROTOBUF_NAMESPACE_ID::int32 team_;
  ::PROTOBUF_NAMESPACE_ID::int32 vote_type_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoteFailed final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_VoteFailed) */ {
 public:
  inline CCSUsrMsg_VoteFailed() : CCSUsrMsg_VoteFailed(nullptr) {}
  ~CCSUsrMsg_VoteFailed() override;
  explicit constexpr CCSUsrMsg_VoteFailed(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_VoteFailed(const CCSUsrMsg_VoteFailed& from);
  CCSUsrMsg_VoteFailed(CCSUsrMsg_VoteFailed&& from) noexcept
    : CCSUsrMsg_VoteFailed() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_VoteFailed& operator=(const CCSUsrMsg_VoteFailed& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_VoteFailed& operator=(CCSUsrMsg_VoteFailed&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_VoteFailed& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_VoteFailed* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_VoteFailed*>(
               &_CCSUsrMsg_VoteFailed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(CCSUsrMsg_VoteFailed& a, CCSUsrMsg_VoteFailed& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_VoteFailed* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_VoteFailed* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_VoteFailed* New() const final {
    return new CCSUsrMsg_VoteFailed();
  }

  CCSUsrMsg_VoteFailed* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_VoteFailed>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_VoteFailed& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_VoteFailed& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_VoteFailed* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_VoteFailed";
  }
  protected:
  explicit CCSUsrMsg_VoteFailed(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamFieldNumber = 1,
    kReasonFieldNumber = 2,
  };
  // optional int32 team = 1;
  bool has_team() const;
  private:
  bool _internal_has_team() const;
  public:
  void clear_team();
  ::PROTOBUF_NAMESPACE_ID::int32 team() const;
  void set_team(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_team() const;
  void _internal_set_team(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 reason = 2;
  bool has_reason() const;
  private:
  bool _internal_has_reason() const;
  public:
  void clear_reason();
  ::PROTOBUF_NAMESPACE_ID::int32 reason() const;
  void set_reason(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_reason() const;
  void _internal_set_reason(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoteFailed)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 team_;
  ::PROTOBUF_NAMESPACE_ID::int32 reason_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoteSetup final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_VoteSetup) */ {
 public:
  inline CCSUsrMsg_VoteSetup() : CCSUsrMsg_VoteSetup(nullptr) {}
  ~CCSUsrMsg_VoteSetup() override;
  explicit constexpr CCSUsrMsg_VoteSetup(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_VoteSetup(const CCSUsrMsg_VoteSetup& from);
  CCSUsrMsg_VoteSetup(CCSUsrMsg_VoteSetup&& from) noexcept
    : CCSUsrMsg_VoteSetup() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_VoteSetup& operator=(const CCSUsrMsg_VoteSetup& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_VoteSetup& operator=(CCSUsrMsg_VoteSetup&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_VoteSetup& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_VoteSetup* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_VoteSetup*>(
               &_CCSUsrMsg_VoteSetup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(CCSUsrMsg_VoteSetup& a, CCSUsrMsg_VoteSetup& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_VoteSetup* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_VoteSetup* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_VoteSetup* New() const final {
    return new CCSUsrMsg_VoteSetup();
  }

  CCSUsrMsg_VoteSetup* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_VoteSetup>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_VoteSetup& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_VoteSetup& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_VoteSetup* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_VoteSetup";
  }
  protected:
  explicit CCSUsrMsg_VoteSetup(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPotentialIssuesFieldNumber = 1,
  };
  // repeated string potential_issues = 1;
  int potential_issues_size() const;
  private:
  int _internal_potential_issues_size() const;
  public:
  void clear_potential_issues();
  const std::string& potential_issues(int index) const;
  std::string* mutable_potential_issues(int index);
  void set_potential_issues(int index, const std::string& value);
  void set_potential_issues(int index, std::string&& value);
  void set_potential_issues(int index, const char* value);
  void set_potential_issues(int index, const char* value, size_t size);
  std::string* add_potential_issues();
  void add_potential_issues(const std::string& value);
  void add_potential_issues(std::string&& value);
  void add_potential_issues(const char* value);
  void add_potential_issues(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& potential_issues() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_potential_issues();
  private:
  const std::string& _internal_potential_issues(int index) const;
  std::string* _internal_add_potential_issues();
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoteSetup)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> potential_issues_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SendLastKillerDamageToClient final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_SendLastKillerDamageToClient) */ {
 public:
  inline CCSUsrMsg_SendLastKillerDamageToClient() : CCSUsrMsg_SendLastKillerDamageToClient(nullptr) {}
  ~CCSUsrMsg_SendLastKillerDamageToClient() override;
  explicit constexpr CCSUsrMsg_SendLastKillerDamageToClient(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_SendLastKillerDamageToClient(const CCSUsrMsg_SendLastKillerDamageToClient& from);
  CCSUsrMsg_SendLastKillerDamageToClient(CCSUsrMsg_SendLastKillerDamageToClient&& from) noexcept
    : CCSUsrMsg_SendLastKillerDamageToClient() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_SendLastKillerDamageToClient& operator=(const CCSUsrMsg_SendLastKillerDamageToClient& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_SendLastKillerDamageToClient& operator=(CCSUsrMsg_SendLastKillerDamageToClient&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_SendLastKillerDamageToClient& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_SendLastKillerDamageToClient* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_SendLastKillerDamageToClient*>(
               &_CCSUsrMsg_SendLastKillerDamageToClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(CCSUsrMsg_SendLastKillerDamageToClient& a, CCSUsrMsg_SendLastKillerDamageToClient& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_SendLastKillerDamageToClient* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_SendLastKillerDamageToClient* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_SendLastKillerDamageToClient* New() const final {
    return new CCSUsrMsg_SendLastKillerDamageToClient();
  }

  CCSUsrMsg_SendLastKillerDamageToClient* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_SendLastKillerDamageToClient>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_SendLastKillerDamageToClient& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_SendLastKillerDamageToClient& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_SendLastKillerDamageToClient* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_SendLastKillerDamageToClient";
  }
  protected:
  explicit CCSUsrMsg_SendLastKillerDamageToClient(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumHitsGivenFieldNumber = 1,
    kDamageGivenFieldNumber = 2,
    kNumHitsTakenFieldNumber = 3,
    kDamageTakenFieldNumber = 4,
  };
  // optional int32 num_hits_given = 1;
  bool has_num_hits_given() const;
  private:
  bool _internal_has_num_hits_given() const;
  public:
  void clear_num_hits_given();
  ::PROTOBUF_NAMESPACE_ID::int32 num_hits_given() const;
  void set_num_hits_given(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_num_hits_given() const;
  void _internal_set_num_hits_given(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 damage_given = 2;
  bool has_damage_given() const;
  private:
  bool _internal_has_damage_given() const;
  public:
  void clear_damage_given();
  ::PROTOBUF_NAMESPACE_ID::int32 damage_given() const;
  void set_damage_given(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_damage_given() const;
  void _internal_set_damage_given(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 num_hits_taken = 3;
  bool has_num_hits_taken() const;
  private:
  bool _internal_has_num_hits_taken() const;
  public:
  void clear_num_hits_taken();
  ::PROTOBUF_NAMESPACE_ID::int32 num_hits_taken() const;
  void set_num_hits_taken(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_num_hits_taken() const;
  void _internal_set_num_hits_taken(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 damage_taken = 4;
  bool has_damage_taken() const;
  private:
  bool _internal_has_damage_taken() const;
  public:
  void clear_damage_taken();
  ::PROTOBUF_NAMESPACE_ID::int32 damage_taken() const;
  void set_damage_taken(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_damage_taken() const;
  void _internal_set_damage_taken(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SendLastKillerDamageToClient)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_hits_given_;
  ::PROTOBUF_NAMESPACE_ID::int32 damage_given_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_hits_taken_;
  ::PROTOBUF_NAMESPACE_ID::int32 damage_taken_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ServerRankUpdate_RankUpdate final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ServerRankUpdate.RankUpdate) */ {
 public:
  inline CCSUsrMsg_ServerRankUpdate_RankUpdate() : CCSUsrMsg_ServerRankUpdate_RankUpdate(nullptr) {}
  ~CCSUsrMsg_ServerRankUpdate_RankUpdate() override;
  explicit constexpr CCSUsrMsg_ServerRankUpdate_RankUpdate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_ServerRankUpdate_RankUpdate(const CCSUsrMsg_ServerRankUpdate_RankUpdate& from);
  CCSUsrMsg_ServerRankUpdate_RankUpdate(CCSUsrMsg_ServerRankUpdate_RankUpdate&& from) noexcept
    : CCSUsrMsg_ServerRankUpdate_RankUpdate() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ServerRankUpdate_RankUpdate& operator=(const CCSUsrMsg_ServerRankUpdate_RankUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_ServerRankUpdate_RankUpdate& operator=(CCSUsrMsg_ServerRankUpdate_RankUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_ServerRankUpdate_RankUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_ServerRankUpdate_RankUpdate* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ServerRankUpdate_RankUpdate*>(
               &_CCSUsrMsg_ServerRankUpdate_RankUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(CCSUsrMsg_ServerRankUpdate_RankUpdate& a, CCSUsrMsg_ServerRankUpdate_RankUpdate& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_ServerRankUpdate_RankUpdate* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_ServerRankUpdate_RankUpdate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ServerRankUpdate_RankUpdate* New() const final {
    return new CCSUsrMsg_ServerRankUpdate_RankUpdate();
  }

  CCSUsrMsg_ServerRankUpdate_RankUpdate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ServerRankUpdate_RankUpdate>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_ServerRankUpdate_RankUpdate& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_ServerRankUpdate_RankUpdate& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ServerRankUpdate_RankUpdate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_ServerRankUpdate.RankUpdate";
  }
  protected:
  explicit CCSUsrMsg_ServerRankUpdate_RankUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kRankOldFieldNumber = 2,
    kRankNewFieldNumber = 3,
    kNumWinsFieldNumber = 4,
    kRankChangeFieldNumber = 5,
  };
  // optional int32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  ::PROTOBUF_NAMESPACE_ID::int32 account_id() const;
  void set_account_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_account_id() const;
  void _internal_set_account_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 rank_old = 2;
  bool has_rank_old() const;
  private:
  bool _internal_has_rank_old() const;
  public:
  void clear_rank_old();
  ::PROTOBUF_NAMESPACE_ID::int32 rank_old() const;
  void set_rank_old(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_rank_old() const;
  void _internal_set_rank_old(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 rank_new = 3;
  bool has_rank_new() const;
  private:
  bool _internal_has_rank_new() const;
  public:
  void clear_rank_new();
  ::PROTOBUF_NAMESPACE_ID::int32 rank_new() const;
  void set_rank_new(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_rank_new() const;
  void _internal_set_rank_new(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 num_wins = 4;
  bool has_num_wins() const;
  private:
  bool _internal_has_num_wins() const;
  public:
  void clear_num_wins();
  ::PROTOBUF_NAMESPACE_ID::int32 num_wins() const;
  void set_num_wins(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_num_wins() const;
  void _internal_set_num_wins(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float rank_change = 5;
  bool has_rank_change() const;
  private:
  bool _internal_has_rank_change() const;
  public:
  void clear_rank_change();
  float rank_change() const;
  void set_rank_change(float value);
  private:
  float _internal_rank_change() const;
  void _internal_set_rank_change(float value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ServerRankUpdate.RankUpdate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 account_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 rank_old_;
  ::PROTOBUF_NAMESPACE_ID::int32 rank_new_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_wins_;
  float rank_change_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ServerRankUpdate final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ServerRankUpdate) */ {
 public:
  inline CCSUsrMsg_ServerRankUpdate() : CCSUsrMsg_ServerRankUpdate(nullptr) {}
  ~CCSUsrMsg_ServerRankUpdate() override;
  explicit constexpr CCSUsrMsg_ServerRankUpdate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_ServerRankUpdate(const CCSUsrMsg_ServerRankUpdate& from);
  CCSUsrMsg_ServerRankUpdate(CCSUsrMsg_ServerRankUpdate&& from) noexcept
    : CCSUsrMsg_ServerRankUpdate() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ServerRankUpdate& operator=(const CCSUsrMsg_ServerRankUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_ServerRankUpdate& operator=(CCSUsrMsg_ServerRankUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_ServerRankUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_ServerRankUpdate* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ServerRankUpdate*>(
               &_CCSUsrMsg_ServerRankUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(CCSUsrMsg_ServerRankUpdate& a, CCSUsrMsg_ServerRankUpdate& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_ServerRankUpdate* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_ServerRankUpdate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ServerRankUpdate* New() const final {
    return new CCSUsrMsg_ServerRankUpdate();
  }

  CCSUsrMsg_ServerRankUpdate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ServerRankUpdate>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_ServerRankUpdate& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_ServerRankUpdate& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ServerRankUpdate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_ServerRankUpdate";
  }
  protected:
  explicit CCSUsrMsg_ServerRankUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CCSUsrMsg_ServerRankUpdate_RankUpdate RankUpdate;

  // accessors -------------------------------------------------------

  enum : int {
    kRankUpdateFieldNumber = 1,
  };
  // repeated .CCSUsrMsg_ServerRankUpdate.RankUpdate rank_update = 1;
  int rank_update_size() const;
  private:
  int _internal_rank_update_size() const;
  public:
  void clear_rank_update();
  ::CCSUsrMsg_ServerRankUpdate_RankUpdate* mutable_rank_update(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_ServerRankUpdate_RankUpdate >*
      mutable_rank_update();
  private:
  const ::CCSUsrMsg_ServerRankUpdate_RankUpdate& _internal_rank_update(int index) const;
  ::CCSUsrMsg_ServerRankUpdate_RankUpdate* _internal_add_rank_update();
  public:
  const ::CCSUsrMsg_ServerRankUpdate_RankUpdate& rank_update(int index) const;
  ::CCSUsrMsg_ServerRankUpdate_RankUpdate* add_rank_update();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_ServerRankUpdate_RankUpdate >&
      rank_update() const;

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ServerRankUpdate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_ServerRankUpdate_RankUpdate > rank_update_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_XpUpdate final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_XpUpdate) */ {
 public:
  inline CCSUsrMsg_XpUpdate() : CCSUsrMsg_XpUpdate(nullptr) {}
  ~CCSUsrMsg_XpUpdate() override;
  explicit constexpr CCSUsrMsg_XpUpdate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_XpUpdate(const CCSUsrMsg_XpUpdate& from);
  CCSUsrMsg_XpUpdate(CCSUsrMsg_XpUpdate&& from) noexcept
    : CCSUsrMsg_XpUpdate() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_XpUpdate& operator=(const CCSUsrMsg_XpUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_XpUpdate& operator=(CCSUsrMsg_XpUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_XpUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_XpUpdate* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_XpUpdate*>(
               &_CCSUsrMsg_XpUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(CCSUsrMsg_XpUpdate& a, CCSUsrMsg_XpUpdate& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_XpUpdate* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_XpUpdate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_XpUpdate* New() const final {
    return new CCSUsrMsg_XpUpdate();
  }

  CCSUsrMsg_XpUpdate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_XpUpdate>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_XpUpdate& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_XpUpdate& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_XpUpdate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_XpUpdate";
  }
  protected:
  explicit CCSUsrMsg_XpUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // optional .CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded data = 1;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& data() const;
  PROTOBUF_MUST_USE_RESULT ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* release_data();
  ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* mutable_data();
  void set_allocated_data(::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* data);
  private:
  const ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& _internal_data() const;
  ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* _internal_mutable_data();
  public:
  void unsafe_arena_set_allocated_data(
      ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* data);
  ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* unsafe_arena_release_data();

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_XpUpdate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* data_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ItemPickup final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ItemPickup) */ {
 public:
  inline CCSUsrMsg_ItemPickup() : CCSUsrMsg_ItemPickup(nullptr) {}
  ~CCSUsrMsg_ItemPickup() override;
  explicit constexpr CCSUsrMsg_ItemPickup(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_ItemPickup(const CCSUsrMsg_ItemPickup& from);
  CCSUsrMsg_ItemPickup(CCSUsrMsg_ItemPickup&& from) noexcept
    : CCSUsrMsg_ItemPickup() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ItemPickup& operator=(const CCSUsrMsg_ItemPickup& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_ItemPickup& operator=(CCSUsrMsg_ItemPickup&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_ItemPickup& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_ItemPickup* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ItemPickup*>(
               &_CCSUsrMsg_ItemPickup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(CCSUsrMsg_ItemPickup& a, CCSUsrMsg_ItemPickup& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_ItemPickup* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_ItemPickup* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ItemPickup* New() const final {
    return new CCSUsrMsg_ItemPickup();
  }

  CCSUsrMsg_ItemPickup* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ItemPickup>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_ItemPickup& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_ItemPickup& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ItemPickup* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_ItemPickup";
  }
  protected:
  explicit CCSUsrMsg_ItemPickup(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemFieldNumber = 1,
  };
  // optional string item = 1;
  bool has_item() const;
  private:
  bool _internal_has_item() const;
  public:
  void clear_item();
  const std::string& item() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_item(ArgT0&& arg0, ArgT... args);
  std::string* mutable_item();
  PROTOBUF_MUST_USE_RESULT std::string* release_item();
  void set_allocated_item(std::string* item);
  private:
  const std::string& _internal_item() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_item(const std::string& value);
  std::string* _internal_mutable_item();
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ItemPickup)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr item_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ShowMenu final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ShowMenu) */ {
 public:
  inline CCSUsrMsg_ShowMenu() : CCSUsrMsg_ShowMenu(nullptr) {}
  ~CCSUsrMsg_ShowMenu() override;
  explicit constexpr CCSUsrMsg_ShowMenu(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_ShowMenu(const CCSUsrMsg_ShowMenu& from);
  CCSUsrMsg_ShowMenu(CCSUsrMsg_ShowMenu&& from) noexcept
    : CCSUsrMsg_ShowMenu() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ShowMenu& operator=(const CCSUsrMsg_ShowMenu& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_ShowMenu& operator=(CCSUsrMsg_ShowMenu&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_ShowMenu& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_ShowMenu* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ShowMenu*>(
               &_CCSUsrMsg_ShowMenu_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(CCSUsrMsg_ShowMenu& a, CCSUsrMsg_ShowMenu& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_ShowMenu* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_ShowMenu* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ShowMenu* New() const final {
    return new CCSUsrMsg_ShowMenu();
  }

  CCSUsrMsg_ShowMenu* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ShowMenu>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_ShowMenu& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_ShowMenu& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ShowMenu* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_ShowMenu";
  }
  protected:
  explicit CCSUsrMsg_ShowMenu(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMenuStringFieldNumber = 3,
    kBitsValidSlotsFieldNumber = 1,
    kDisplayTimeFieldNumber = 2,
  };
  // optional string menu_string = 3;
  bool has_menu_string() const;
  private:
  bool _internal_has_menu_string() const;
  public:
  void clear_menu_string();
  const std::string& menu_string() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_menu_string(ArgT0&& arg0, ArgT... args);
  std::string* mutable_menu_string();
  PROTOBUF_MUST_USE_RESULT std::string* release_menu_string();
  void set_allocated_menu_string(std::string* menu_string);
  private:
  const std::string& _internal_menu_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_menu_string(const std::string& value);
  std::string* _internal_mutable_menu_string();
  public:

  // optional int32 bits_valid_slots = 1;
  bool has_bits_valid_slots() const;
  private:
  bool _internal_has_bits_valid_slots() const;
  public:
  void clear_bits_valid_slots();
  ::PROTOBUF_NAMESPACE_ID::int32 bits_valid_slots() const;
  void set_bits_valid_slots(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bits_valid_slots() const;
  void _internal_set_bits_valid_slots(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 display_time = 2;
  bool has_display_time() const;
  private:
  bool _internal_has_display_time() const;
  public:
  void clear_display_time();
  ::PROTOBUF_NAMESPACE_ID::int32 display_time() const;
  void set_display_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_display_time() const;
  void _internal_set_display_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ShowMenu)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr menu_string_;
  ::PROTOBUF_NAMESPACE_ID::int32 bits_valid_slots_;
  ::PROTOBUF_NAMESPACE_ID::int32 display_time_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_BarTime final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_BarTime) */ {
 public:
  inline CCSUsrMsg_BarTime() : CCSUsrMsg_BarTime(nullptr) {}
  ~CCSUsrMsg_BarTime() override;
  explicit constexpr CCSUsrMsg_BarTime(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_BarTime(const CCSUsrMsg_BarTime& from);
  CCSUsrMsg_BarTime(CCSUsrMsg_BarTime&& from) noexcept
    : CCSUsrMsg_BarTime() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_BarTime& operator=(const CCSUsrMsg_BarTime& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_BarTime& operator=(CCSUsrMsg_BarTime&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_BarTime& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_BarTime* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_BarTime*>(
               &_CCSUsrMsg_BarTime_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(CCSUsrMsg_BarTime& a, CCSUsrMsg_BarTime& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_BarTime* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_BarTime* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_BarTime* New() const final {
    return new CCSUsrMsg_BarTime();
  }

  CCSUsrMsg_BarTime* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_BarTime>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_BarTime& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_BarTime& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_BarTime* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_BarTime";
  }
  protected:
  explicit CCSUsrMsg_BarTime(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimeFieldNumber = 1,
  };
  // optional string time = 1;
  bool has_time() const;
  private:
  bool _internal_has_time() const;
  public:
  void clear_time();
  const std::string& time() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_time(ArgT0&& arg0, ArgT... args);
  std::string* mutable_time();
  PROTOBUF_MUST_USE_RESULT std::string* release_time();
  void set_allocated_time(std::string* time);
  private:
  const std::string& _internal_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_time(const std::string& value);
  std::string* _internal_mutable_time();
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_BarTime)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr time_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_AmmoDenied final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_AmmoDenied) */ {
 public:
  inline CCSUsrMsg_AmmoDenied() : CCSUsrMsg_AmmoDenied(nullptr) {}
  ~CCSUsrMsg_AmmoDenied() override;
  explicit constexpr CCSUsrMsg_AmmoDenied(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_AmmoDenied(const CCSUsrMsg_AmmoDenied& from);
  CCSUsrMsg_AmmoDenied(CCSUsrMsg_AmmoDenied&& from) noexcept
    : CCSUsrMsg_AmmoDenied() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_AmmoDenied& operator=(const CCSUsrMsg_AmmoDenied& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_AmmoDenied& operator=(CCSUsrMsg_AmmoDenied&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_AmmoDenied& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_AmmoDenied* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_AmmoDenied*>(
               &_CCSUsrMsg_AmmoDenied_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(CCSUsrMsg_AmmoDenied& a, CCSUsrMsg_AmmoDenied& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_AmmoDenied* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_AmmoDenied* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_AmmoDenied* New() const final {
    return new CCSUsrMsg_AmmoDenied();
  }

  CCSUsrMsg_AmmoDenied* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_AmmoDenied>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_AmmoDenied& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_AmmoDenied& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_AmmoDenied* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_AmmoDenied";
  }
  protected:
  explicit CCSUsrMsg_AmmoDenied(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAmmoIdxFieldNumber = 1,
  };
  // optional int32 ammoIdx = 1;
  bool has_ammoidx() const;
  private:
  bool _internal_has_ammoidx() const;
  public:
  void clear_ammoidx();
  ::PROTOBUF_NAMESPACE_ID::int32 ammoidx() const;
  void set_ammoidx(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ammoidx() const;
  void _internal_set_ammoidx(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_AmmoDenied)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 ammoidx_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_MarkAchievement final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_MarkAchievement) */ {
 public:
  inline CCSUsrMsg_MarkAchievement() : CCSUsrMsg_MarkAchievement(nullptr) {}
  ~CCSUsrMsg_MarkAchievement() override;
  explicit constexpr CCSUsrMsg_MarkAchievement(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_MarkAchievement(const CCSUsrMsg_MarkAchievement& from);
  CCSUsrMsg_MarkAchievement(CCSUsrMsg_MarkAchievement&& from) noexcept
    : CCSUsrMsg_MarkAchievement() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_MarkAchievement& operator=(const CCSUsrMsg_MarkAchievement& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_MarkAchievement& operator=(CCSUsrMsg_MarkAchievement&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_MarkAchievement& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_MarkAchievement* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_MarkAchievement*>(
               &_CCSUsrMsg_MarkAchievement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(CCSUsrMsg_MarkAchievement& a, CCSUsrMsg_MarkAchievement& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_MarkAchievement* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_MarkAchievement* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_MarkAchievement* New() const final {
    return new CCSUsrMsg_MarkAchievement();
  }

  CCSUsrMsg_MarkAchievement* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_MarkAchievement>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_MarkAchievement& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_MarkAchievement& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_MarkAchievement* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_MarkAchievement";
  }
  protected:
  explicit CCSUsrMsg_MarkAchievement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAchievementFieldNumber = 1,
  };
  // optional string achievement = 1;
  bool has_achievement() const;
  private:
  bool _internal_has_achievement() const;
  public:
  void clear_achievement();
  const std::string& achievement() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_achievement(ArgT0&& arg0, ArgT... args);
  std::string* mutable_achievement();
  PROTOBUF_MUST_USE_RESULT std::string* release_achievement();
  void set_allocated_achievement(std::string* achievement);
  private:
  const std::string& _internal_achievement() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_achievement(const std::string& value);
  std::string* _internal_mutable_achievement();
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_MarkAchievement)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr achievement_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_MatchStatsUpdate final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_MatchStatsUpdate) */ {
 public:
  inline CCSUsrMsg_MatchStatsUpdate() : CCSUsrMsg_MatchStatsUpdate(nullptr) {}
  ~CCSUsrMsg_MatchStatsUpdate() override;
  explicit constexpr CCSUsrMsg_MatchStatsUpdate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_MatchStatsUpdate(const CCSUsrMsg_MatchStatsUpdate& from);
  CCSUsrMsg_MatchStatsUpdate(CCSUsrMsg_MatchStatsUpdate&& from) noexcept
    : CCSUsrMsg_MatchStatsUpdate() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_MatchStatsUpdate& operator=(const CCSUsrMsg_MatchStatsUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_MatchStatsUpdate& operator=(CCSUsrMsg_MatchStatsUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_MatchStatsUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_MatchStatsUpdate* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_MatchStatsUpdate*>(
               &_CCSUsrMsg_MatchStatsUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(CCSUsrMsg_MatchStatsUpdate& a, CCSUsrMsg_MatchStatsUpdate& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_MatchStatsUpdate* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_MatchStatsUpdate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_MatchStatsUpdate* New() const final {
    return new CCSUsrMsg_MatchStatsUpdate();
  }

  CCSUsrMsg_MatchStatsUpdate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_MatchStatsUpdate>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_MatchStatsUpdate& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_MatchStatsUpdate& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_MatchStatsUpdate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_MatchStatsUpdate";
  }
  protected:
  explicit CCSUsrMsg_MatchStatsUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUpdateFieldNumber = 1,
  };
  // optional string update = 1;
  bool has_update() const;
  private:
  bool _internal_has_update() const;
  public:
  void clear_update();
  const std::string& update() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_update(ArgT0&& arg0, ArgT... args);
  std::string* mutable_update();
  PROTOBUF_MUST_USE_RESULT std::string* release_update();
  void set_allocated_update(std::string* update);
  private:
  const std::string& _internal_update() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_update(const std::string& value);
  std::string* _internal_mutable_update();
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_MatchStatsUpdate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr update_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ItemDrop final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ItemDrop) */ {
 public:
  inline CCSUsrMsg_ItemDrop() : CCSUsrMsg_ItemDrop(nullptr) {}
  ~CCSUsrMsg_ItemDrop() override;
  explicit constexpr CCSUsrMsg_ItemDrop(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_ItemDrop(const CCSUsrMsg_ItemDrop& from);
  CCSUsrMsg_ItemDrop(CCSUsrMsg_ItemDrop&& from) noexcept
    : CCSUsrMsg_ItemDrop() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ItemDrop& operator=(const CCSUsrMsg_ItemDrop& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_ItemDrop& operator=(CCSUsrMsg_ItemDrop&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_ItemDrop& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_ItemDrop* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ItemDrop*>(
               &_CCSUsrMsg_ItemDrop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(CCSUsrMsg_ItemDrop& a, CCSUsrMsg_ItemDrop& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_ItemDrop* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_ItemDrop* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ItemDrop* New() const final {
    return new CCSUsrMsg_ItemDrop();
  }

  CCSUsrMsg_ItemDrop* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ItemDrop>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_ItemDrop& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_ItemDrop& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ItemDrop* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_ItemDrop";
  }
  protected:
  explicit CCSUsrMsg_ItemDrop(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemidFieldNumber = 1,
    kDeathFieldNumber = 2,
  };
  // optional int64 itemid = 1;
  bool has_itemid() const;
  private:
  bool _internal_has_itemid() const;
  public:
  void clear_itemid();
  ::PROTOBUF_NAMESPACE_ID::int64 itemid() const;
  void set_itemid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_itemid() const;
  void _internal_set_itemid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional bool death = 2;
  bool has_death() const;
  private:
  bool _internal_has_death() const;
  public:
  void clear_death();
  bool death() const;
  void set_death(bool value);
  private:
  bool _internal_death() const;
  void _internal_set_death(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ItemDrop)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 itemid_;
  bool death_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_GlowPropTurnOff final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_GlowPropTurnOff) */ {
 public:
  inline CCSUsrMsg_GlowPropTurnOff() : CCSUsrMsg_GlowPropTurnOff(nullptr) {}
  ~CCSUsrMsg_GlowPropTurnOff() override;
  explicit constexpr CCSUsrMsg_GlowPropTurnOff(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_GlowPropTurnOff(const CCSUsrMsg_GlowPropTurnOff& from);
  CCSUsrMsg_GlowPropTurnOff(CCSUsrMsg_GlowPropTurnOff&& from) noexcept
    : CCSUsrMsg_GlowPropTurnOff() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_GlowPropTurnOff& operator=(const CCSUsrMsg_GlowPropTurnOff& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_GlowPropTurnOff& operator=(CCSUsrMsg_GlowPropTurnOff&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_GlowPropTurnOff& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_GlowPropTurnOff* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_GlowPropTurnOff*>(
               &_CCSUsrMsg_GlowPropTurnOff_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(CCSUsrMsg_GlowPropTurnOff& a, CCSUsrMsg_GlowPropTurnOff& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_GlowPropTurnOff* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_GlowPropTurnOff* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_GlowPropTurnOff* New() const final {
    return new CCSUsrMsg_GlowPropTurnOff();
  }

  CCSUsrMsg_GlowPropTurnOff* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_GlowPropTurnOff>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_GlowPropTurnOff& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_GlowPropTurnOff& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_GlowPropTurnOff* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_GlowPropTurnOff";
  }
  protected:
  explicit CCSUsrMsg_GlowPropTurnOff(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntidxFieldNumber = 1,
  };
  // optional int32 entidx = 1;
  bool has_entidx() const;
  private:
  bool _internal_has_entidx() const;
  public:
  void clear_entidx();
  ::PROTOBUF_NAMESPACE_ID::int32 entidx() const;
  void set_entidx(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entidx() const;
  void _internal_set_entidx(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_GlowPropTurnOff)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 entidx_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_RoundBackupFilenames final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_RoundBackupFilenames) */ {
 public:
  inline CCSUsrMsg_RoundBackupFilenames() : CCSUsrMsg_RoundBackupFilenames(nullptr) {}
  ~CCSUsrMsg_RoundBackupFilenames() override;
  explicit constexpr CCSUsrMsg_RoundBackupFilenames(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_RoundBackupFilenames(const CCSUsrMsg_RoundBackupFilenames& from);
  CCSUsrMsg_RoundBackupFilenames(CCSUsrMsg_RoundBackupFilenames&& from) noexcept
    : CCSUsrMsg_RoundBackupFilenames() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_RoundBackupFilenames& operator=(const CCSUsrMsg_RoundBackupFilenames& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_RoundBackupFilenames& operator=(CCSUsrMsg_RoundBackupFilenames&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_RoundBackupFilenames& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_RoundBackupFilenames* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_RoundBackupFilenames*>(
               &_CCSUsrMsg_RoundBackupFilenames_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(CCSUsrMsg_RoundBackupFilenames& a, CCSUsrMsg_RoundBackupFilenames& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_RoundBackupFilenames* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_RoundBackupFilenames* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_RoundBackupFilenames* New() const final {
    return new CCSUsrMsg_RoundBackupFilenames();
  }

  CCSUsrMsg_RoundBackupFilenames* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_RoundBackupFilenames>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_RoundBackupFilenames& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_RoundBackupFilenames& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_RoundBackupFilenames* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_RoundBackupFilenames";
  }
  protected:
  explicit CCSUsrMsg_RoundBackupFilenames(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilenameFieldNumber = 3,
    kNicenameFieldNumber = 4,
    kCountFieldNumber = 1,
    kIndexFieldNumber = 2,
  };
  // optional string filename = 3;
  bool has_filename() const;
  private:
  bool _internal_has_filename() const;
  public:
  void clear_filename();
  const std::string& filename() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_filename(ArgT0&& arg0, ArgT... args);
  std::string* mutable_filename();
  PROTOBUF_MUST_USE_RESULT std::string* release_filename();
  void set_allocated_filename(std::string* filename);
  private:
  const std::string& _internal_filename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_filename(const std::string& value);
  std::string* _internal_mutable_filename();
  public:

  // optional string nicename = 4;
  bool has_nicename() const;
  private:
  bool _internal_has_nicename() const;
  public:
  void clear_nicename();
  const std::string& nicename() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_nicename(ArgT0&& arg0, ArgT... args);
  std::string* mutable_nicename();
  PROTOBUF_MUST_USE_RESULT std::string* release_nicename();
  void set_allocated_nicename(std::string* nicename);
  private:
  const std::string& _internal_nicename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nicename(const std::string& value);
  std::string* _internal_mutable_nicename();
  public:

  // optional int32 count = 1;
  bool has_count() const;
  private:
  bool _internal_has_count() const;
  public:
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 index = 2;
  bool has_index() const;
  private:
  bool _internal_has_index() const;
  public:
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_RoundBackupFilenames)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filename_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nicename_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ResetHud final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ResetHud) */ {
 public:
  inline CCSUsrMsg_ResetHud() : CCSUsrMsg_ResetHud(nullptr) {}
  ~CCSUsrMsg_ResetHud() override;
  explicit constexpr CCSUsrMsg_ResetHud(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_ResetHud(const CCSUsrMsg_ResetHud& from);
  CCSUsrMsg_ResetHud(CCSUsrMsg_ResetHud&& from) noexcept
    : CCSUsrMsg_ResetHud() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ResetHud& operator=(const CCSUsrMsg_ResetHud& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_ResetHud& operator=(CCSUsrMsg_ResetHud&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_ResetHud& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_ResetHud* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ResetHud*>(
               &_CCSUsrMsg_ResetHud_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(CCSUsrMsg_ResetHud& a, CCSUsrMsg_ResetHud& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_ResetHud* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_ResetHud* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ResetHud* New() const final {
    return new CCSUsrMsg_ResetHud();
  }

  CCSUsrMsg_ResetHud* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ResetHud>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_ResetHud& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_ResetHud& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ResetHud* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_ResetHud";
  }
  protected:
  explicit CCSUsrMsg_ResetHud(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResetFieldNumber = 1,
  };
  // optional bool reset = 1;
  bool has_reset() const;
  private:
  bool _internal_has_reset() const;
  public:
  void clear_reset();
  bool reset() const;
  void set_reset(bool value);
  private:
  bool _internal_reset() const;
  void _internal_set_reset(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ResetHud)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool reset_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_GameTitle final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_GameTitle) */ {
 public:
  inline CCSUsrMsg_GameTitle() : CCSUsrMsg_GameTitle(nullptr) {}
  ~CCSUsrMsg_GameTitle() override;
  explicit constexpr CCSUsrMsg_GameTitle(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_GameTitle(const CCSUsrMsg_GameTitle& from);
  CCSUsrMsg_GameTitle(CCSUsrMsg_GameTitle&& from) noexcept
    : CCSUsrMsg_GameTitle() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_GameTitle& operator=(const CCSUsrMsg_GameTitle& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_GameTitle& operator=(CCSUsrMsg_GameTitle&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_GameTitle& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_GameTitle* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_GameTitle*>(
               &_CCSUsrMsg_GameTitle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(CCSUsrMsg_GameTitle& a, CCSUsrMsg_GameTitle& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_GameTitle* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_GameTitle* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_GameTitle* New() const final {
    return new CCSUsrMsg_GameTitle();
  }

  CCSUsrMsg_GameTitle* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_GameTitle>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_GameTitle& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_GameTitle& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_GameTitle* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_GameTitle";
  }
  protected:
  explicit CCSUsrMsg_GameTitle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDummyFieldNumber = 1,
  };
  // optional int32 dummy = 1;
  bool has_dummy() const;
  private:
  bool _internal_has_dummy() const;
  public:
  void clear_dummy();
  ::PROTOBUF_NAMESPACE_ID::int32 dummy() const;
  void set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dummy() const;
  void _internal_set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_GameTitle)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 dummy_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_RequestState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_RequestState) */ {
 public:
  inline CCSUsrMsg_RequestState() : CCSUsrMsg_RequestState(nullptr) {}
  ~CCSUsrMsg_RequestState() override;
  explicit constexpr CCSUsrMsg_RequestState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_RequestState(const CCSUsrMsg_RequestState& from);
  CCSUsrMsg_RequestState(CCSUsrMsg_RequestState&& from) noexcept
    : CCSUsrMsg_RequestState() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_RequestState& operator=(const CCSUsrMsg_RequestState& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_RequestState& operator=(CCSUsrMsg_RequestState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_RequestState& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_RequestState* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_RequestState*>(
               &_CCSUsrMsg_RequestState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(CCSUsrMsg_RequestState& a, CCSUsrMsg_RequestState& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_RequestState* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_RequestState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_RequestState* New() const final {
    return new CCSUsrMsg_RequestState();
  }

  CCSUsrMsg_RequestState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_RequestState>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_RequestState& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_RequestState& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_RequestState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_RequestState";
  }
  protected:
  explicit CCSUsrMsg_RequestState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDummyFieldNumber = 1,
  };
  // optional int32 dummy = 1;
  bool has_dummy() const;
  private:
  bool _internal_has_dummy() const;
  public:
  void clear_dummy();
  ::PROTOBUF_NAMESPACE_ID::int32 dummy() const;
  void set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dummy() const;
  void _internal_set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_RequestState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 dummy_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_StopSpectatorMode final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_StopSpectatorMode) */ {
 public:
  inline CCSUsrMsg_StopSpectatorMode() : CCSUsrMsg_StopSpectatorMode(nullptr) {}
  ~CCSUsrMsg_StopSpectatorMode() override;
  explicit constexpr CCSUsrMsg_StopSpectatorMode(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_StopSpectatorMode(const CCSUsrMsg_StopSpectatorMode& from);
  CCSUsrMsg_StopSpectatorMode(CCSUsrMsg_StopSpectatorMode&& from) noexcept
    : CCSUsrMsg_StopSpectatorMode() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_StopSpectatorMode& operator=(const CCSUsrMsg_StopSpectatorMode& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_StopSpectatorMode& operator=(CCSUsrMsg_StopSpectatorMode&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_StopSpectatorMode& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_StopSpectatorMode* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_StopSpectatorMode*>(
               &_CCSUsrMsg_StopSpectatorMode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(CCSUsrMsg_StopSpectatorMode& a, CCSUsrMsg_StopSpectatorMode& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_StopSpectatorMode* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_StopSpectatorMode* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_StopSpectatorMode* New() const final {
    return new CCSUsrMsg_StopSpectatorMode();
  }

  CCSUsrMsg_StopSpectatorMode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_StopSpectatorMode>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_StopSpectatorMode& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_StopSpectatorMode& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_StopSpectatorMode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_StopSpectatorMode";
  }
  protected:
  explicit CCSUsrMsg_StopSpectatorMode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDummyFieldNumber = 1,
  };
  // optional int32 dummy = 1;
  bool has_dummy() const;
  private:
  bool _internal_has_dummy() const;
  public:
  void clear_dummy();
  ::PROTOBUF_NAMESPACE_ID::int32 dummy() const;
  void set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dummy() const;
  void _internal_set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_StopSpectatorMode)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 dummy_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_DisconnectToLobby final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_DisconnectToLobby) */ {
 public:
  inline CCSUsrMsg_DisconnectToLobby() : CCSUsrMsg_DisconnectToLobby(nullptr) {}
  ~CCSUsrMsg_DisconnectToLobby() override;
  explicit constexpr CCSUsrMsg_DisconnectToLobby(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_DisconnectToLobby(const CCSUsrMsg_DisconnectToLobby& from);
  CCSUsrMsg_DisconnectToLobby(CCSUsrMsg_DisconnectToLobby&& from) noexcept
    : CCSUsrMsg_DisconnectToLobby() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_DisconnectToLobby& operator=(const CCSUsrMsg_DisconnectToLobby& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_DisconnectToLobby& operator=(CCSUsrMsg_DisconnectToLobby&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_DisconnectToLobby& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_DisconnectToLobby* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_DisconnectToLobby*>(
               &_CCSUsrMsg_DisconnectToLobby_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(CCSUsrMsg_DisconnectToLobby& a, CCSUsrMsg_DisconnectToLobby& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_DisconnectToLobby* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_DisconnectToLobby* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_DisconnectToLobby* New() const final {
    return new CCSUsrMsg_DisconnectToLobby();
  }

  CCSUsrMsg_DisconnectToLobby* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_DisconnectToLobby>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_DisconnectToLobby& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_DisconnectToLobby& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_DisconnectToLobby* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_DisconnectToLobby";
  }
  protected:
  explicit CCSUsrMsg_DisconnectToLobby(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDummyFieldNumber = 1,
  };
  // optional int32 dummy = 1;
  bool has_dummy() const;
  private:
  bool _internal_has_dummy() const;
  public:
  void clear_dummy();
  ::PROTOBUF_NAMESPACE_ID::int32 dummy() const;
  void set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dummy() const;
  void _internal_set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_DisconnectToLobby)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 dummy_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_WarmupHasEnded final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_WarmupHasEnded) */ {
 public:
  inline CCSUsrMsg_WarmupHasEnded() : CCSUsrMsg_WarmupHasEnded(nullptr) {}
  ~CCSUsrMsg_WarmupHasEnded() override;
  explicit constexpr CCSUsrMsg_WarmupHasEnded(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_WarmupHasEnded(const CCSUsrMsg_WarmupHasEnded& from);
  CCSUsrMsg_WarmupHasEnded(CCSUsrMsg_WarmupHasEnded&& from) noexcept
    : CCSUsrMsg_WarmupHasEnded() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_WarmupHasEnded& operator=(const CCSUsrMsg_WarmupHasEnded& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_WarmupHasEnded& operator=(CCSUsrMsg_WarmupHasEnded&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_WarmupHasEnded& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_WarmupHasEnded* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_WarmupHasEnded*>(
               &_CCSUsrMsg_WarmupHasEnded_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(CCSUsrMsg_WarmupHasEnded& a, CCSUsrMsg_WarmupHasEnded& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_WarmupHasEnded* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_WarmupHasEnded* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_WarmupHasEnded* New() const final {
    return new CCSUsrMsg_WarmupHasEnded();
  }

  CCSUsrMsg_WarmupHasEnded* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_WarmupHasEnded>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_WarmupHasEnded& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_WarmupHasEnded& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_WarmupHasEnded* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_WarmupHasEnded";
  }
  protected:
  explicit CCSUsrMsg_WarmupHasEnded(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDummyFieldNumber = 1,
  };
  // optional int32 dummy = 1;
  bool has_dummy() const;
  private:
  bool _internal_has_dummy() const;
  public:
  void clear_dummy();
  ::PROTOBUF_NAMESPACE_ID::int32 dummy() const;
  void set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dummy() const;
  void _internal_set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_WarmupHasEnded)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 dummy_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ClientInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ClientInfo) */ {
 public:
  inline CCSUsrMsg_ClientInfo() : CCSUsrMsg_ClientInfo(nullptr) {}
  ~CCSUsrMsg_ClientInfo() override;
  explicit constexpr CCSUsrMsg_ClientInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_ClientInfo(const CCSUsrMsg_ClientInfo& from);
  CCSUsrMsg_ClientInfo(CCSUsrMsg_ClientInfo&& from) noexcept
    : CCSUsrMsg_ClientInfo() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ClientInfo& operator=(const CCSUsrMsg_ClientInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_ClientInfo& operator=(CCSUsrMsg_ClientInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_ClientInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_ClientInfo* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ClientInfo*>(
               &_CCSUsrMsg_ClientInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(CCSUsrMsg_ClientInfo& a, CCSUsrMsg_ClientInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_ClientInfo* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_ClientInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ClientInfo* New() const final {
    return new CCSUsrMsg_ClientInfo();
  }

  CCSUsrMsg_ClientInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ClientInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_ClientInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_ClientInfo& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ClientInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_ClientInfo";
  }
  protected:
  explicit CCSUsrMsg_ClientInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDummyFieldNumber = 1,
  };
  // optional int32 dummy = 1;
  bool has_dummy() const;
  private:
  bool _internal_has_dummy() const;
  public:
  void clear_dummy();
  ::PROTOBUF_NAMESPACE_ID::int32 dummy() const;
  void set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dummy() const;
  void _internal_set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ClientInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 dummy_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ServerRankRevealAll final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ServerRankRevealAll) */ {
 public:
  inline CCSUsrMsg_ServerRankRevealAll() : CCSUsrMsg_ServerRankRevealAll(nullptr) {}
  ~CCSUsrMsg_ServerRankRevealAll() override;
  explicit constexpr CCSUsrMsg_ServerRankRevealAll(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCSUsrMsg_ServerRankRevealAll(const CCSUsrMsg_ServerRankRevealAll& from);
  CCSUsrMsg_ServerRankRevealAll(CCSUsrMsg_ServerRankRevealAll&& from) noexcept
    : CCSUsrMsg_ServerRankRevealAll() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ServerRankRevealAll& operator=(const CCSUsrMsg_ServerRankRevealAll& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCSUsrMsg_ServerRankRevealAll& operator=(CCSUsrMsg_ServerRankRevealAll&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCSUsrMsg_ServerRankRevealAll& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCSUsrMsg_ServerRankRevealAll* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ServerRankRevealAll*>(
               &_CCSUsrMsg_ServerRankRevealAll_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(CCSUsrMsg_ServerRankRevealAll& a, CCSUsrMsg_ServerRankRevealAll& b) {
    a.Swap(&b);
  }
  inline void Swap(CCSUsrMsg_ServerRankRevealAll* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCSUsrMsg_ServerRankRevealAll* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ServerRankRevealAll* New() const final {
    return new CCSUsrMsg_ServerRankRevealAll();
  }

  CCSUsrMsg_ServerRankRevealAll* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ServerRankRevealAll>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCSUsrMsg_ServerRankRevealAll& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CCSUsrMsg_ServerRankRevealAll& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ServerRankRevealAll* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCSUsrMsg_ServerRankRevealAll";
  }
  protected:
  explicit CCSUsrMsg_ServerRankRevealAll(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSecondsTillShutdownFieldNumber = 1,
  };
  // optional int32 seconds_till_shutdown = 1;
  bool has_seconds_till_shutdown() const;
  private:
  bool _internal_has_seconds_till_shutdown() const;
  public:
  void clear_seconds_till_shutdown();
  ::PROTOBUF_NAMESPACE_ID::int32 seconds_till_shutdown() const;
  void set_seconds_till_shutdown(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_seconds_till_shutdown() const;
  void _internal_set_seconds_till_shutdown(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ServerRankRevealAll)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 seconds_till_shutdown_;
  friend struct ::TableStruct_cstrike15_5fusermessages_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CCSUsrMsg_VGUIMenu_Subkey

// optional string name = 1;
inline bool CCSUsrMsg_VGUIMenu_Subkey::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_VGUIMenu_Subkey::has_name() const {
  return _internal_has_name();
}
inline void CCSUsrMsg_VGUIMenu_Subkey::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCSUsrMsg_VGUIMenu_Subkey::name() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VGUIMenu.Subkey.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_VGUIMenu_Subkey::set_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VGUIMenu.Subkey.name)
}
inline std::string* CCSUsrMsg_VGUIMenu_Subkey::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VGUIMenu.Subkey.name)
  return _s;
}
inline const std::string& CCSUsrMsg_VGUIMenu_Subkey::_internal_name() const {
  return name_.Get();
}
inline void CCSUsrMsg_VGUIMenu_Subkey::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_VGUIMenu_Subkey::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_VGUIMenu_Subkey::release_name() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VGUIMenu.Subkey.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VGUIMenu.Subkey.name)
}

// optional string str = 2;
inline bool CCSUsrMsg_VGUIMenu_Subkey::_internal_has_str() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_VGUIMenu_Subkey::has_str() const {
  return _internal_has_str();
}
inline void CCSUsrMsg_VGUIMenu_Subkey::clear_str() {
  str_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CCSUsrMsg_VGUIMenu_Subkey::str() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VGUIMenu.Subkey.str)
  return _internal_str();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_VGUIMenu_Subkey::set_str(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VGUIMenu.Subkey.str)
}
inline std::string* CCSUsrMsg_VGUIMenu_Subkey::mutable_str() {
  std::string* _s = _internal_mutable_str();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VGUIMenu.Subkey.str)
  return _s;
}
inline const std::string& CCSUsrMsg_VGUIMenu_Subkey::_internal_str() const {
  return str_.Get();
}
inline void CCSUsrMsg_VGUIMenu_Subkey::_internal_set_str(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_VGUIMenu_Subkey::_internal_mutable_str() {
  _has_bits_[0] |= 0x00000002u;
  return str_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_VGUIMenu_Subkey::release_str() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VGUIMenu.Subkey.str)
  if (!_internal_has_str()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return str_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_allocated_str(std::string* str) {
  if (str != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  str_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), str,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VGUIMenu.Subkey.str)
}

// -------------------------------------------------------------------

// CCSUsrMsg_VGUIMenu

// optional string name = 1;
inline bool CCSUsrMsg_VGUIMenu::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_VGUIMenu::has_name() const {
  return _internal_has_name();
}
inline void CCSUsrMsg_VGUIMenu::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCSUsrMsg_VGUIMenu::name() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VGUIMenu.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_VGUIMenu::set_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VGUIMenu.name)
}
inline std::string* CCSUsrMsg_VGUIMenu::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VGUIMenu.name)
  return _s;
}
inline const std::string& CCSUsrMsg_VGUIMenu::_internal_name() const {
  return name_.Get();
}
inline void CCSUsrMsg_VGUIMenu::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_VGUIMenu::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_VGUIMenu::release_name() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VGUIMenu.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_VGUIMenu::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VGUIMenu.name)
}

// optional bool show = 2;
inline bool CCSUsrMsg_VGUIMenu::_internal_has_show() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_VGUIMenu::has_show() const {
  return _internal_has_show();
}
inline void CCSUsrMsg_VGUIMenu::clear_show() {
  show_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CCSUsrMsg_VGUIMenu::_internal_show() const {
  return show_;
}
inline bool CCSUsrMsg_VGUIMenu::show() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VGUIMenu.show)
  return _internal_show();
}
inline void CCSUsrMsg_VGUIMenu::_internal_set_show(bool value) {
  _has_bits_[0] |= 0x00000002u;
  show_ = value;
}
inline void CCSUsrMsg_VGUIMenu::set_show(bool value) {
  _internal_set_show(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VGUIMenu.show)
}

// repeated .CCSUsrMsg_VGUIMenu.Subkey subkeys = 3;
inline int CCSUsrMsg_VGUIMenu::_internal_subkeys_size() const {
  return subkeys_.size();
}
inline int CCSUsrMsg_VGUIMenu::subkeys_size() const {
  return _internal_subkeys_size();
}
inline void CCSUsrMsg_VGUIMenu::clear_subkeys() {
  subkeys_.Clear();
}
inline ::CCSUsrMsg_VGUIMenu_Subkey* CCSUsrMsg_VGUIMenu::mutable_subkeys(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VGUIMenu.subkeys)
  return subkeys_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey >*
CCSUsrMsg_VGUIMenu::mutable_subkeys() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_VGUIMenu.subkeys)
  return &subkeys_;
}
inline const ::CCSUsrMsg_VGUIMenu_Subkey& CCSUsrMsg_VGUIMenu::_internal_subkeys(int index) const {
  return subkeys_.Get(index);
}
inline const ::CCSUsrMsg_VGUIMenu_Subkey& CCSUsrMsg_VGUIMenu::subkeys(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VGUIMenu.subkeys)
  return _internal_subkeys(index);
}
inline ::CCSUsrMsg_VGUIMenu_Subkey* CCSUsrMsg_VGUIMenu::_internal_add_subkeys() {
  return subkeys_.Add();
}
inline ::CCSUsrMsg_VGUIMenu_Subkey* CCSUsrMsg_VGUIMenu::add_subkeys() {
  ::CCSUsrMsg_VGUIMenu_Subkey* _add = _internal_add_subkeys();
  // @@protoc_insertion_point(field_add:CCSUsrMsg_VGUIMenu.subkeys)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey >&
CCSUsrMsg_VGUIMenu::subkeys() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_VGUIMenu.subkeys)
  return subkeys_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_Geiger

// optional int32 range = 1;
inline bool CCSUsrMsg_Geiger::_internal_has_range() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_Geiger::has_range() const {
  return _internal_has_range();
}
inline void CCSUsrMsg_Geiger::clear_range() {
  range_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Geiger::_internal_range() const {
  return range_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Geiger::range() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Geiger.range)
  return _internal_range();
}
inline void CCSUsrMsg_Geiger::_internal_set_range(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  range_ = value;
}
inline void CCSUsrMsg_Geiger::set_range(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_range(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Geiger.range)
}

// -------------------------------------------------------------------

// CCSUsrMsg_Train

// optional int32 train = 1;
inline bool CCSUsrMsg_Train::_internal_has_train() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_Train::has_train() const {
  return _internal_has_train();
}
inline void CCSUsrMsg_Train::clear_train() {
  train_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Train::_internal_train() const {
  return train_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Train::train() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Train.train)
  return _internal_train();
}
inline void CCSUsrMsg_Train::_internal_set_train(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  train_ = value;
}
inline void CCSUsrMsg_Train::set_train(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_train(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Train.train)
}

// -------------------------------------------------------------------

// CCSUsrMsg_HudText

// optional string text = 1;
inline bool CCSUsrMsg_HudText::_internal_has_text() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_HudText::has_text() const {
  return _internal_has_text();
}
inline void CCSUsrMsg_HudText::clear_text() {
  text_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCSUsrMsg_HudText::text() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudText.text)
  return _internal_text();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_HudText::set_text(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudText.text)
}
inline std::string* CCSUsrMsg_HudText::mutable_text() {
  std::string* _s = _internal_mutable_text();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_HudText.text)
  return _s;
}
inline const std::string& CCSUsrMsg_HudText::_internal_text() const {
  return text_.Get();
}
inline void CCSUsrMsg_HudText::_internal_set_text(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_HudText::_internal_mutable_text() {
  _has_bits_[0] |= 0x00000001u;
  return text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_HudText::release_text() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_HudText.text)
  if (!_internal_has_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return text_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_HudText::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_HudText.text)
}

// -------------------------------------------------------------------

// CCSUsrMsg_SayText

// optional int32 ent_idx = 1;
inline bool CCSUsrMsg_SayText::_internal_has_ent_idx() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_SayText::has_ent_idx() const {
  return _internal_has_ent_idx();
}
inline void CCSUsrMsg_SayText::clear_ent_idx() {
  ent_idx_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_SayText::_internal_ent_idx() const {
  return ent_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_SayText::ent_idx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText.ent_idx)
  return _internal_ent_idx();
}
inline void CCSUsrMsg_SayText::_internal_set_ent_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  ent_idx_ = value;
}
inline void CCSUsrMsg_SayText::set_ent_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ent_idx(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText.ent_idx)
}

// optional string text = 2;
inline bool CCSUsrMsg_SayText::_internal_has_text() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_SayText::has_text() const {
  return _internal_has_text();
}
inline void CCSUsrMsg_SayText::clear_text() {
  text_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCSUsrMsg_SayText::text() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText.text)
  return _internal_text();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_SayText::set_text(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText.text)
}
inline std::string* CCSUsrMsg_SayText::mutable_text() {
  std::string* _s = _internal_mutable_text();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_SayText.text)
  return _s;
}
inline const std::string& CCSUsrMsg_SayText::_internal_text() const {
  return text_.Get();
}
inline void CCSUsrMsg_SayText::_internal_set_text(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_SayText::_internal_mutable_text() {
  _has_bits_[0] |= 0x00000001u;
  return text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_SayText::release_text() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_SayText.text)
  if (!_internal_has_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return text_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_SayText::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_SayText.text)
}

// optional bool chat = 3;
inline bool CCSUsrMsg_SayText::_internal_has_chat() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_SayText::has_chat() const {
  return _internal_has_chat();
}
inline void CCSUsrMsg_SayText::clear_chat() {
  chat_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CCSUsrMsg_SayText::_internal_chat() const {
  return chat_;
}
inline bool CCSUsrMsg_SayText::chat() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText.chat)
  return _internal_chat();
}
inline void CCSUsrMsg_SayText::_internal_set_chat(bool value) {
  _has_bits_[0] |= 0x00000004u;
  chat_ = value;
}
inline void CCSUsrMsg_SayText::set_chat(bool value) {
  _internal_set_chat(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText.chat)
}

// optional bool textallchat = 4;
inline bool CCSUsrMsg_SayText::_internal_has_textallchat() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCSUsrMsg_SayText::has_textallchat() const {
  return _internal_has_textallchat();
}
inline void CCSUsrMsg_SayText::clear_textallchat() {
  textallchat_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CCSUsrMsg_SayText::_internal_textallchat() const {
  return textallchat_;
}
inline bool CCSUsrMsg_SayText::textallchat() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText.textallchat)
  return _internal_textallchat();
}
inline void CCSUsrMsg_SayText::_internal_set_textallchat(bool value) {
  _has_bits_[0] |= 0x00000008u;
  textallchat_ = value;
}
inline void CCSUsrMsg_SayText::set_textallchat(bool value) {
  _internal_set_textallchat(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText.textallchat)
}

// -------------------------------------------------------------------

// CCSUsrMsg_SayText2

// optional int32 ent_idx = 1;
inline bool CCSUsrMsg_SayText2::_internal_has_ent_idx() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_SayText2::has_ent_idx() const {
  return _internal_has_ent_idx();
}
inline void CCSUsrMsg_SayText2::clear_ent_idx() {
  ent_idx_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_SayText2::_internal_ent_idx() const {
  return ent_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_SayText2::ent_idx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText2.ent_idx)
  return _internal_ent_idx();
}
inline void CCSUsrMsg_SayText2::_internal_set_ent_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  ent_idx_ = value;
}
inline void CCSUsrMsg_SayText2::set_ent_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ent_idx(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText2.ent_idx)
}

// optional bool chat = 2;
inline bool CCSUsrMsg_SayText2::_internal_has_chat() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_SayText2::has_chat() const {
  return _internal_has_chat();
}
inline void CCSUsrMsg_SayText2::clear_chat() {
  chat_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CCSUsrMsg_SayText2::_internal_chat() const {
  return chat_;
}
inline bool CCSUsrMsg_SayText2::chat() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText2.chat)
  return _internal_chat();
}
inline void CCSUsrMsg_SayText2::_internal_set_chat(bool value) {
  _has_bits_[0] |= 0x00000004u;
  chat_ = value;
}
inline void CCSUsrMsg_SayText2::set_chat(bool value) {
  _internal_set_chat(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText2.chat)
}

// optional string msg_name = 3;
inline bool CCSUsrMsg_SayText2::_internal_has_msg_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_SayText2::has_msg_name() const {
  return _internal_has_msg_name();
}
inline void CCSUsrMsg_SayText2::clear_msg_name() {
  msg_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCSUsrMsg_SayText2::msg_name() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText2.msg_name)
  return _internal_msg_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_SayText2::set_msg_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 msg_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText2.msg_name)
}
inline std::string* CCSUsrMsg_SayText2::mutable_msg_name() {
  std::string* _s = _internal_mutable_msg_name();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_SayText2.msg_name)
  return _s;
}
inline const std::string& CCSUsrMsg_SayText2::_internal_msg_name() const {
  return msg_name_.Get();
}
inline void CCSUsrMsg_SayText2::_internal_set_msg_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  msg_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_SayText2::_internal_mutable_msg_name() {
  _has_bits_[0] |= 0x00000001u;
  return msg_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_SayText2::release_msg_name() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_SayText2.msg_name)
  if (!_internal_has_msg_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return msg_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_SayText2::set_allocated_msg_name(std::string* msg_name) {
  if (msg_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  msg_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg_name,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_SayText2.msg_name)
}

// repeated string params = 4;
inline int CCSUsrMsg_SayText2::_internal_params_size() const {
  return params_.size();
}
inline int CCSUsrMsg_SayText2::params_size() const {
  return _internal_params_size();
}
inline void CCSUsrMsg_SayText2::clear_params() {
  params_.Clear();
}
inline std::string* CCSUsrMsg_SayText2::add_params() {
  std::string* _s = _internal_add_params();
  // @@protoc_insertion_point(field_add_mutable:CCSUsrMsg_SayText2.params)
  return _s;
}
inline const std::string& CCSUsrMsg_SayText2::_internal_params(int index) const {
  return params_.Get(index);
}
inline const std::string& CCSUsrMsg_SayText2::params(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText2.params)
  return _internal_params(index);
}
inline std::string* CCSUsrMsg_SayText2::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_SayText2.params)
  return params_.Mutable(index);
}
inline void CCSUsrMsg_SayText2::set_params(int index, const std::string& value) {
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText2.params)
}
inline void CCSUsrMsg_SayText2::set_params(int index, std::string&& value) {
  params_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText2.params)
}
inline void CCSUsrMsg_SayText2::set_params(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_SayText2.params)
}
inline void CCSUsrMsg_SayText2::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_SayText2.params)
}
inline std::string* CCSUsrMsg_SayText2::_internal_add_params() {
  return params_.Add();
}
inline void CCSUsrMsg_SayText2::add_params(const std::string& value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CCSUsrMsg_SayText2.params)
}
inline void CCSUsrMsg_SayText2::add_params(std::string&& value) {
  params_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CCSUsrMsg_SayText2.params)
}
inline void CCSUsrMsg_SayText2::add_params(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CCSUsrMsg_SayText2.params)
}
inline void CCSUsrMsg_SayText2::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CCSUsrMsg_SayText2.params)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CCSUsrMsg_SayText2::params() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_SayText2.params)
  return params_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CCSUsrMsg_SayText2::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_SayText2.params)
  return &params_;
}

// optional bool textallchat = 5;
inline bool CCSUsrMsg_SayText2::_internal_has_textallchat() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCSUsrMsg_SayText2::has_textallchat() const {
  return _internal_has_textallchat();
}
inline void CCSUsrMsg_SayText2::clear_textallchat() {
  textallchat_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CCSUsrMsg_SayText2::_internal_textallchat() const {
  return textallchat_;
}
inline bool CCSUsrMsg_SayText2::textallchat() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText2.textallchat)
  return _internal_textallchat();
}
inline void CCSUsrMsg_SayText2::_internal_set_textallchat(bool value) {
  _has_bits_[0] |= 0x00000008u;
  textallchat_ = value;
}
inline void CCSUsrMsg_SayText2::set_textallchat(bool value) {
  _internal_set_textallchat(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText2.textallchat)
}

// -------------------------------------------------------------------

// CCSUsrMsg_TextMsg

// optional int32 msg_dst = 1;
inline bool CCSUsrMsg_TextMsg::_internal_has_msg_dst() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_TextMsg::has_msg_dst() const {
  return _internal_has_msg_dst();
}
inline void CCSUsrMsg_TextMsg::clear_msg_dst() {
  msg_dst_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_TextMsg::_internal_msg_dst() const {
  return msg_dst_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_TextMsg::msg_dst() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_TextMsg.msg_dst)
  return _internal_msg_dst();
}
inline void CCSUsrMsg_TextMsg::_internal_set_msg_dst(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  msg_dst_ = value;
}
inline void CCSUsrMsg_TextMsg::set_msg_dst(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_msg_dst(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_TextMsg.msg_dst)
}

// repeated string params = 3;
inline int CCSUsrMsg_TextMsg::_internal_params_size() const {
  return params_.size();
}
inline int CCSUsrMsg_TextMsg::params_size() const {
  return _internal_params_size();
}
inline void CCSUsrMsg_TextMsg::clear_params() {
  params_.Clear();
}
inline std::string* CCSUsrMsg_TextMsg::add_params() {
  std::string* _s = _internal_add_params();
  // @@protoc_insertion_point(field_add_mutable:CCSUsrMsg_TextMsg.params)
  return _s;
}
inline const std::string& CCSUsrMsg_TextMsg::_internal_params(int index) const {
  return params_.Get(index);
}
inline const std::string& CCSUsrMsg_TextMsg::params(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_TextMsg.params)
  return _internal_params(index);
}
inline std::string* CCSUsrMsg_TextMsg::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_TextMsg.params)
  return params_.Mutable(index);
}
inline void CCSUsrMsg_TextMsg::set_params(int index, const std::string& value) {
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_TextMsg.params)
}
inline void CCSUsrMsg_TextMsg::set_params(int index, std::string&& value) {
  params_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CCSUsrMsg_TextMsg.params)
}
inline void CCSUsrMsg_TextMsg::set_params(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_TextMsg.params)
}
inline void CCSUsrMsg_TextMsg::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_TextMsg.params)
}
inline std::string* CCSUsrMsg_TextMsg::_internal_add_params() {
  return params_.Add();
}
inline void CCSUsrMsg_TextMsg::add_params(const std::string& value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CCSUsrMsg_TextMsg.params)
}
inline void CCSUsrMsg_TextMsg::add_params(std::string&& value) {
  params_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CCSUsrMsg_TextMsg.params)
}
inline void CCSUsrMsg_TextMsg::add_params(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CCSUsrMsg_TextMsg.params)
}
inline void CCSUsrMsg_TextMsg::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CCSUsrMsg_TextMsg.params)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CCSUsrMsg_TextMsg::params() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_TextMsg.params)
  return params_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CCSUsrMsg_TextMsg::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_TextMsg.params)
  return &params_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_HudMsg

// optional int32 channel = 1;
inline bool CCSUsrMsg_HudMsg::_internal_has_channel() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCSUsrMsg_HudMsg::has_channel() const {
  return _internal_has_channel();
}
inline void CCSUsrMsg_HudMsg::clear_channel() {
  channel_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_HudMsg::_internal_channel() const {
  return channel_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_HudMsg::channel() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.channel)
  return _internal_channel();
}
inline void CCSUsrMsg_HudMsg::_internal_set_channel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  channel_ = value;
}
inline void CCSUsrMsg_HudMsg::set_channel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_channel(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.channel)
}

// optional .CMsgVector2D pos = 2;
inline bool CCSUsrMsg_HudMsg::_internal_has_pos() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || pos_ != nullptr);
  return value;
}
inline bool CCSUsrMsg_HudMsg::has_pos() const {
  return _internal_has_pos();
}
inline const ::CMsgVector2D& CCSUsrMsg_HudMsg::_internal_pos() const {
  const ::CMsgVector2D* p = pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector2D&>(
      ::_CMsgVector2D_default_instance_);
}
inline const ::CMsgVector2D& CCSUsrMsg_HudMsg::pos() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.pos)
  return _internal_pos();
}
inline void CCSUsrMsg_HudMsg::unsafe_arena_set_allocated_pos(
    ::CMsgVector2D* pos) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pos_);
  }
  pos_ = pos;
  if (pos) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCSUsrMsg_HudMsg.pos)
}
inline ::CMsgVector2D* CCSUsrMsg_HudMsg::release_pos() {
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgVector2D* temp = pos_;
  pos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgVector2D* CCSUsrMsg_HudMsg::unsafe_arena_release_pos() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_HudMsg.pos)
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgVector2D* temp = pos_;
  pos_ = nullptr;
  return temp;
}
inline ::CMsgVector2D* CCSUsrMsg_HudMsg::_internal_mutable_pos() {
  _has_bits_[0] |= 0x00000002u;
  if (pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector2D>(GetArenaForAllocation());
    pos_ = p;
  }
  return pos_;
}
inline ::CMsgVector2D* CCSUsrMsg_HudMsg::mutable_pos() {
  ::CMsgVector2D* _msg = _internal_mutable_pos();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_HudMsg.pos)
  return _msg;
}
inline void CCSUsrMsg_HudMsg::set_allocated_pos(::CMsgVector2D* pos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pos_);
  }
  if (pos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pos));
    if (message_arena != submessage_arena) {
      pos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_HudMsg.pos)
}

// optional .CMsgRGBA clr1 = 3;
inline bool CCSUsrMsg_HudMsg::_internal_has_clr1() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || clr1_ != nullptr);
  return value;
}
inline bool CCSUsrMsg_HudMsg::has_clr1() const {
  return _internal_has_clr1();
}
inline const ::CMsgRGBA& CCSUsrMsg_HudMsg::_internal_clr1() const {
  const ::CMsgRGBA* p = clr1_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgRGBA&>(
      ::_CMsgRGBA_default_instance_);
}
inline const ::CMsgRGBA& CCSUsrMsg_HudMsg::clr1() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.clr1)
  return _internal_clr1();
}
inline void CCSUsrMsg_HudMsg::unsafe_arena_set_allocated_clr1(
    ::CMsgRGBA* clr1) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(clr1_);
  }
  clr1_ = clr1;
  if (clr1) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCSUsrMsg_HudMsg.clr1)
}
inline ::CMsgRGBA* CCSUsrMsg_HudMsg::release_clr1() {
  _has_bits_[0] &= ~0x00000004u;
  ::CMsgRGBA* temp = clr1_;
  clr1_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgRGBA* CCSUsrMsg_HudMsg::unsafe_arena_release_clr1() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_HudMsg.clr1)
  _has_bits_[0] &= ~0x00000004u;
  ::CMsgRGBA* temp = clr1_;
  clr1_ = nullptr;
  return temp;
}
inline ::CMsgRGBA* CCSUsrMsg_HudMsg::_internal_mutable_clr1() {
  _has_bits_[0] |= 0x00000004u;
  if (clr1_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgRGBA>(GetArenaForAllocation());
    clr1_ = p;
  }
  return clr1_;
}
inline ::CMsgRGBA* CCSUsrMsg_HudMsg::mutable_clr1() {
  ::CMsgRGBA* _msg = _internal_mutable_clr1();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_HudMsg.clr1)
  return _msg;
}
inline void CCSUsrMsg_HudMsg::set_allocated_clr1(::CMsgRGBA* clr1) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(clr1_);
  }
  if (clr1) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(clr1));
    if (message_arena != submessage_arena) {
      clr1 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, clr1, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  clr1_ = clr1;
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_HudMsg.clr1)
}

// optional .CMsgRGBA clr2 = 4;
inline bool CCSUsrMsg_HudMsg::_internal_has_clr2() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || clr2_ != nullptr);
  return value;
}
inline bool CCSUsrMsg_HudMsg::has_clr2() const {
  return _internal_has_clr2();
}
inline const ::CMsgRGBA& CCSUsrMsg_HudMsg::_internal_clr2() const {
  const ::CMsgRGBA* p = clr2_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgRGBA&>(
      ::_CMsgRGBA_default_instance_);
}
inline const ::CMsgRGBA& CCSUsrMsg_HudMsg::clr2() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.clr2)
  return _internal_clr2();
}
inline void CCSUsrMsg_HudMsg::unsafe_arena_set_allocated_clr2(
    ::CMsgRGBA* clr2) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(clr2_);
  }
  clr2_ = clr2;
  if (clr2) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCSUsrMsg_HudMsg.clr2)
}
inline ::CMsgRGBA* CCSUsrMsg_HudMsg::release_clr2() {
  _has_bits_[0] &= ~0x00000008u;
  ::CMsgRGBA* temp = clr2_;
  clr2_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgRGBA* CCSUsrMsg_HudMsg::unsafe_arena_release_clr2() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_HudMsg.clr2)
  _has_bits_[0] &= ~0x00000008u;
  ::CMsgRGBA* temp = clr2_;
  clr2_ = nullptr;
  return temp;
}
inline ::CMsgRGBA* CCSUsrMsg_HudMsg::_internal_mutable_clr2() {
  _has_bits_[0] |= 0x00000008u;
  if (clr2_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgRGBA>(GetArenaForAllocation());
    clr2_ = p;
  }
  return clr2_;
}
inline ::CMsgRGBA* CCSUsrMsg_HudMsg::mutable_clr2() {
  ::CMsgRGBA* _msg = _internal_mutable_clr2();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_HudMsg.clr2)
  return _msg;
}
inline void CCSUsrMsg_HudMsg::set_allocated_clr2(::CMsgRGBA* clr2) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(clr2_);
  }
  if (clr2) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(clr2));
    if (message_arena != submessage_arena) {
      clr2 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, clr2, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  clr2_ = clr2;
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_HudMsg.clr2)
}

// optional int32 effect = 5;
inline bool CCSUsrMsg_HudMsg::_internal_has_effect() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCSUsrMsg_HudMsg::has_effect() const {
  return _internal_has_effect();
}
inline void CCSUsrMsg_HudMsg::clear_effect() {
  effect_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_HudMsg::_internal_effect() const {
  return effect_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_HudMsg::effect() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.effect)
  return _internal_effect();
}
inline void CCSUsrMsg_HudMsg::_internal_set_effect(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  effect_ = value;
}
inline void CCSUsrMsg_HudMsg::set_effect(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_effect(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.effect)
}

// optional float fade_in_time = 6;
inline bool CCSUsrMsg_HudMsg::_internal_has_fade_in_time() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCSUsrMsg_HudMsg::has_fade_in_time() const {
  return _internal_has_fade_in_time();
}
inline void CCSUsrMsg_HudMsg::clear_fade_in_time() {
  fade_in_time_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float CCSUsrMsg_HudMsg::_internal_fade_in_time() const {
  return fade_in_time_;
}
inline float CCSUsrMsg_HudMsg::fade_in_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.fade_in_time)
  return _internal_fade_in_time();
}
inline void CCSUsrMsg_HudMsg::_internal_set_fade_in_time(float value) {
  _has_bits_[0] |= 0x00000040u;
  fade_in_time_ = value;
}
inline void CCSUsrMsg_HudMsg::set_fade_in_time(float value) {
  _internal_set_fade_in_time(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.fade_in_time)
}

// optional float fade_out_time = 7;
inline bool CCSUsrMsg_HudMsg::_internal_has_fade_out_time() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CCSUsrMsg_HudMsg::has_fade_out_time() const {
  return _internal_has_fade_out_time();
}
inline void CCSUsrMsg_HudMsg::clear_fade_out_time() {
  fade_out_time_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline float CCSUsrMsg_HudMsg::_internal_fade_out_time() const {
  return fade_out_time_;
}
inline float CCSUsrMsg_HudMsg::fade_out_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.fade_out_time)
  return _internal_fade_out_time();
}
inline void CCSUsrMsg_HudMsg::_internal_set_fade_out_time(float value) {
  _has_bits_[0] |= 0x00000080u;
  fade_out_time_ = value;
}
inline void CCSUsrMsg_HudMsg::set_fade_out_time(float value) {
  _internal_set_fade_out_time(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.fade_out_time)
}

// optional float hold_time = 9;
inline bool CCSUsrMsg_HudMsg::_internal_has_hold_time() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CCSUsrMsg_HudMsg::has_hold_time() const {
  return _internal_has_hold_time();
}
inline void CCSUsrMsg_HudMsg::clear_hold_time() {
  hold_time_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline float CCSUsrMsg_HudMsg::_internal_hold_time() const {
  return hold_time_;
}
inline float CCSUsrMsg_HudMsg::hold_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.hold_time)
  return _internal_hold_time();
}
inline void CCSUsrMsg_HudMsg::_internal_set_hold_time(float value) {
  _has_bits_[0] |= 0x00000100u;
  hold_time_ = value;
}
inline void CCSUsrMsg_HudMsg::set_hold_time(float value) {
  _internal_set_hold_time(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.hold_time)
}

// optional float fx_time = 10;
inline bool CCSUsrMsg_HudMsg::_internal_has_fx_time() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CCSUsrMsg_HudMsg::has_fx_time() const {
  return _internal_has_fx_time();
}
inline void CCSUsrMsg_HudMsg::clear_fx_time() {
  fx_time_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline float CCSUsrMsg_HudMsg::_internal_fx_time() const {
  return fx_time_;
}
inline float CCSUsrMsg_HudMsg::fx_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.fx_time)
  return _internal_fx_time();
}
inline void CCSUsrMsg_HudMsg::_internal_set_fx_time(float value) {
  _has_bits_[0] |= 0x00000200u;
  fx_time_ = value;
}
inline void CCSUsrMsg_HudMsg::set_fx_time(float value) {
  _internal_set_fx_time(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.fx_time)
}

// optional string text = 11;
inline bool CCSUsrMsg_HudMsg::_internal_has_text() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_HudMsg::has_text() const {
  return _internal_has_text();
}
inline void CCSUsrMsg_HudMsg::clear_text() {
  text_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCSUsrMsg_HudMsg::text() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.text)
  return _internal_text();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_HudMsg::set_text(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.text)
}
inline std::string* CCSUsrMsg_HudMsg::mutable_text() {
  std::string* _s = _internal_mutable_text();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_HudMsg.text)
  return _s;
}
inline const std::string& CCSUsrMsg_HudMsg::_internal_text() const {
  return text_.Get();
}
inline void CCSUsrMsg_HudMsg::_internal_set_text(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_HudMsg::_internal_mutable_text() {
  _has_bits_[0] |= 0x00000001u;
  return text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_HudMsg::release_text() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_HudMsg.text)
  if (!_internal_has_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return text_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_HudMsg::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_HudMsg.text)
}

// -------------------------------------------------------------------

// CCSUsrMsg_Shake

// optional int32 command = 1;
inline bool CCSUsrMsg_Shake::_internal_has_command() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_Shake::has_command() const {
  return _internal_has_command();
}
inline void CCSUsrMsg_Shake::clear_command() {
  command_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Shake::_internal_command() const {
  return command_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Shake::command() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Shake.command)
  return _internal_command();
}
inline void CCSUsrMsg_Shake::_internal_set_command(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  command_ = value;
}
inline void CCSUsrMsg_Shake::set_command(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_command(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Shake.command)
}

// optional float local_amplitude = 2;
inline bool CCSUsrMsg_Shake::_internal_has_local_amplitude() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_Shake::has_local_amplitude() const {
  return _internal_has_local_amplitude();
}
inline void CCSUsrMsg_Shake::clear_local_amplitude() {
  local_amplitude_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CCSUsrMsg_Shake::_internal_local_amplitude() const {
  return local_amplitude_;
}
inline float CCSUsrMsg_Shake::local_amplitude() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Shake.local_amplitude)
  return _internal_local_amplitude();
}
inline void CCSUsrMsg_Shake::_internal_set_local_amplitude(float value) {
  _has_bits_[0] |= 0x00000002u;
  local_amplitude_ = value;
}
inline void CCSUsrMsg_Shake::set_local_amplitude(float value) {
  _internal_set_local_amplitude(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Shake.local_amplitude)
}

// optional float frequency = 3;
inline bool CCSUsrMsg_Shake::_internal_has_frequency() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_Shake::has_frequency() const {
  return _internal_has_frequency();
}
inline void CCSUsrMsg_Shake::clear_frequency() {
  frequency_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CCSUsrMsg_Shake::_internal_frequency() const {
  return frequency_;
}
inline float CCSUsrMsg_Shake::frequency() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Shake.frequency)
  return _internal_frequency();
}
inline void CCSUsrMsg_Shake::_internal_set_frequency(float value) {
  _has_bits_[0] |= 0x00000004u;
  frequency_ = value;
}
inline void CCSUsrMsg_Shake::set_frequency(float value) {
  _internal_set_frequency(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Shake.frequency)
}

// optional float duration = 4;
inline bool CCSUsrMsg_Shake::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCSUsrMsg_Shake::has_duration() const {
  return _internal_has_duration();
}
inline void CCSUsrMsg_Shake::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CCSUsrMsg_Shake::_internal_duration() const {
  return duration_;
}
inline float CCSUsrMsg_Shake::duration() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Shake.duration)
  return _internal_duration();
}
inline void CCSUsrMsg_Shake::_internal_set_duration(float value) {
  _has_bits_[0] |= 0x00000008u;
  duration_ = value;
}
inline void CCSUsrMsg_Shake::set_duration(float value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Shake.duration)
}

// -------------------------------------------------------------------

// CCSUsrMsg_Fade

// optional int32 duration = 1;
inline bool CCSUsrMsg_Fade::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_Fade::has_duration() const {
  return _internal_has_duration();
}
inline void CCSUsrMsg_Fade::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Fade::_internal_duration() const {
  return duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Fade::duration() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Fade.duration)
  return _internal_duration();
}
inline void CCSUsrMsg_Fade::_internal_set_duration(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  duration_ = value;
}
inline void CCSUsrMsg_Fade::set_duration(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Fade.duration)
}

// optional int32 hold_time = 2;
inline bool CCSUsrMsg_Fade::_internal_has_hold_time() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_Fade::has_hold_time() const {
  return _internal_has_hold_time();
}
inline void CCSUsrMsg_Fade::clear_hold_time() {
  hold_time_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Fade::_internal_hold_time() const {
  return hold_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Fade::hold_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Fade.hold_time)
  return _internal_hold_time();
}
inline void CCSUsrMsg_Fade::_internal_set_hold_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  hold_time_ = value;
}
inline void CCSUsrMsg_Fade::set_hold_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_hold_time(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Fade.hold_time)
}

// optional int32 flags = 3;
inline bool CCSUsrMsg_Fade::_internal_has_flags() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCSUsrMsg_Fade::has_flags() const {
  return _internal_has_flags();
}
inline void CCSUsrMsg_Fade::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Fade::_internal_flags() const {
  return flags_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Fade::flags() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Fade.flags)
  return _internal_flags();
}
inline void CCSUsrMsg_Fade::_internal_set_flags(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  flags_ = value;
}
inline void CCSUsrMsg_Fade::set_flags(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Fade.flags)
}

// optional .CMsgRGBA clr = 4;
inline bool CCSUsrMsg_Fade::_internal_has_clr() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || clr_ != nullptr);
  return value;
}
inline bool CCSUsrMsg_Fade::has_clr() const {
  return _internal_has_clr();
}
inline const ::CMsgRGBA& CCSUsrMsg_Fade::_internal_clr() const {
  const ::CMsgRGBA* p = clr_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgRGBA&>(
      ::_CMsgRGBA_default_instance_);
}
inline const ::CMsgRGBA& CCSUsrMsg_Fade::clr() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Fade.clr)
  return _internal_clr();
}
inline void CCSUsrMsg_Fade::unsafe_arena_set_allocated_clr(
    ::CMsgRGBA* clr) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(clr_);
  }
  clr_ = clr;
  if (clr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCSUsrMsg_Fade.clr)
}
inline ::CMsgRGBA* CCSUsrMsg_Fade::release_clr() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgRGBA* temp = clr_;
  clr_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgRGBA* CCSUsrMsg_Fade::unsafe_arena_release_clr() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_Fade.clr)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgRGBA* temp = clr_;
  clr_ = nullptr;
  return temp;
}
inline ::CMsgRGBA* CCSUsrMsg_Fade::_internal_mutable_clr() {
  _has_bits_[0] |= 0x00000001u;
  if (clr_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgRGBA>(GetArenaForAllocation());
    clr_ = p;
  }
  return clr_;
}
inline ::CMsgRGBA* CCSUsrMsg_Fade::mutable_clr() {
  ::CMsgRGBA* _msg = _internal_mutable_clr();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_Fade.clr)
  return _msg;
}
inline void CCSUsrMsg_Fade::set_allocated_clr(::CMsgRGBA* clr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(clr_);
  }
  if (clr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(clr));
    if (message_arena != submessage_arena) {
      clr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, clr, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  clr_ = clr;
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_Fade.clr)
}

// -------------------------------------------------------------------

// CCSUsrMsg_Rumble

// optional int32 index = 1;
inline bool CCSUsrMsg_Rumble::_internal_has_index() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_Rumble::has_index() const {
  return _internal_has_index();
}
inline void CCSUsrMsg_Rumble::clear_index() {
  index_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Rumble::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Rumble::index() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Rumble.index)
  return _internal_index();
}
inline void CCSUsrMsg_Rumble::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  index_ = value;
}
inline void CCSUsrMsg_Rumble::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Rumble.index)
}

// optional int32 data = 2;
inline bool CCSUsrMsg_Rumble::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_Rumble::has_data() const {
  return _internal_has_data();
}
inline void CCSUsrMsg_Rumble::clear_data() {
  data_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Rumble::_internal_data() const {
  return data_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Rumble::data() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Rumble.data)
  return _internal_data();
}
inline void CCSUsrMsg_Rumble::_internal_set_data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  data_ = value;
}
inline void CCSUsrMsg_Rumble::set_data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Rumble.data)
}

// optional int32 flags = 3;
inline bool CCSUsrMsg_Rumble::_internal_has_flags() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_Rumble::has_flags() const {
  return _internal_has_flags();
}
inline void CCSUsrMsg_Rumble::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Rumble::_internal_flags() const {
  return flags_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Rumble::flags() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Rumble.flags)
  return _internal_flags();
}
inline void CCSUsrMsg_Rumble::_internal_set_flags(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  flags_ = value;
}
inline void CCSUsrMsg_Rumble::set_flags(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Rumble.flags)
}

// -------------------------------------------------------------------

// CCSUsrMsg_CloseCaption

// optional uint32 hash = 1;
inline bool CCSUsrMsg_CloseCaption::_internal_has_hash() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_CloseCaption::has_hash() const {
  return _internal_has_hash();
}
inline void CCSUsrMsg_CloseCaption::clear_hash() {
  hash_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCSUsrMsg_CloseCaption::_internal_hash() const {
  return hash_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCSUsrMsg_CloseCaption::hash() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CloseCaption.hash)
  return _internal_hash();
}
inline void CCSUsrMsg_CloseCaption::_internal_set_hash(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hash_ = value;
}
inline void CCSUsrMsg_CloseCaption::set_hash(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hash(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CloseCaption.hash)
}

// optional int32 duration = 2;
inline bool CCSUsrMsg_CloseCaption::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_CloseCaption::has_duration() const {
  return _internal_has_duration();
}
inline void CCSUsrMsg_CloseCaption::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_CloseCaption::_internal_duration() const {
  return duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_CloseCaption::duration() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CloseCaption.duration)
  return _internal_duration();
}
inline void CCSUsrMsg_CloseCaption::_internal_set_duration(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  duration_ = value;
}
inline void CCSUsrMsg_CloseCaption::set_duration(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CloseCaption.duration)
}

// optional bool from_player = 3;
inline bool CCSUsrMsg_CloseCaption::_internal_has_from_player() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_CloseCaption::has_from_player() const {
  return _internal_has_from_player();
}
inline void CCSUsrMsg_CloseCaption::clear_from_player() {
  from_player_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CCSUsrMsg_CloseCaption::_internal_from_player() const {
  return from_player_;
}
inline bool CCSUsrMsg_CloseCaption::from_player() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CloseCaption.from_player)
  return _internal_from_player();
}
inline void CCSUsrMsg_CloseCaption::_internal_set_from_player(bool value) {
  _has_bits_[0] |= 0x00000004u;
  from_player_ = value;
}
inline void CCSUsrMsg_CloseCaption::set_from_player(bool value) {
  _internal_set_from_player(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CloseCaption.from_player)
}

// -------------------------------------------------------------------

// CCSUsrMsg_CloseCaptionDirect

// optional uint32 hash = 1;
inline bool CCSUsrMsg_CloseCaptionDirect::_internal_has_hash() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_CloseCaptionDirect::has_hash() const {
  return _internal_has_hash();
}
inline void CCSUsrMsg_CloseCaptionDirect::clear_hash() {
  hash_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCSUsrMsg_CloseCaptionDirect::_internal_hash() const {
  return hash_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCSUsrMsg_CloseCaptionDirect::hash() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CloseCaptionDirect.hash)
  return _internal_hash();
}
inline void CCSUsrMsg_CloseCaptionDirect::_internal_set_hash(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hash_ = value;
}
inline void CCSUsrMsg_CloseCaptionDirect::set_hash(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hash(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CloseCaptionDirect.hash)
}

// optional int32 duration = 2;
inline bool CCSUsrMsg_CloseCaptionDirect::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_CloseCaptionDirect::has_duration() const {
  return _internal_has_duration();
}
inline void CCSUsrMsg_CloseCaptionDirect::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_CloseCaptionDirect::_internal_duration() const {
  return duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_CloseCaptionDirect::duration() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CloseCaptionDirect.duration)
  return _internal_duration();
}
inline void CCSUsrMsg_CloseCaptionDirect::_internal_set_duration(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  duration_ = value;
}
inline void CCSUsrMsg_CloseCaptionDirect::set_duration(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CloseCaptionDirect.duration)
}

// optional bool from_player = 3;
inline bool CCSUsrMsg_CloseCaptionDirect::_internal_has_from_player() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_CloseCaptionDirect::has_from_player() const {
  return _internal_has_from_player();
}
inline void CCSUsrMsg_CloseCaptionDirect::clear_from_player() {
  from_player_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CCSUsrMsg_CloseCaptionDirect::_internal_from_player() const {
  return from_player_;
}
inline bool CCSUsrMsg_CloseCaptionDirect::from_player() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CloseCaptionDirect.from_player)
  return _internal_from_player();
}
inline void CCSUsrMsg_CloseCaptionDirect::_internal_set_from_player(bool value) {
  _has_bits_[0] |= 0x00000004u;
  from_player_ = value;
}
inline void CCSUsrMsg_CloseCaptionDirect::set_from_player(bool value) {
  _internal_set_from_player(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CloseCaptionDirect.from_player)
}

// -------------------------------------------------------------------

// CCSUsrMsg_SendAudio

// optional string radio_sound = 1;
inline bool CCSUsrMsg_SendAudio::_internal_has_radio_sound() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_SendAudio::has_radio_sound() const {
  return _internal_has_radio_sound();
}
inline void CCSUsrMsg_SendAudio::clear_radio_sound() {
  radio_sound_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCSUsrMsg_SendAudio::radio_sound() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendAudio.radio_sound)
  return _internal_radio_sound();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_SendAudio::set_radio_sound(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 radio_sound_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SendAudio.radio_sound)
}
inline std::string* CCSUsrMsg_SendAudio::mutable_radio_sound() {
  std::string* _s = _internal_mutable_radio_sound();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_SendAudio.radio_sound)
  return _s;
}
inline const std::string& CCSUsrMsg_SendAudio::_internal_radio_sound() const {
  return radio_sound_.Get();
}
inline void CCSUsrMsg_SendAudio::_internal_set_radio_sound(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  radio_sound_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_SendAudio::_internal_mutable_radio_sound() {
  _has_bits_[0] |= 0x00000001u;
  return radio_sound_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_SendAudio::release_radio_sound() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_SendAudio.radio_sound)
  if (!_internal_has_radio_sound()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return radio_sound_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_SendAudio::set_allocated_radio_sound(std::string* radio_sound) {
  if (radio_sound != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  radio_sound_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), radio_sound,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_SendAudio.radio_sound)
}

// -------------------------------------------------------------------

// CCSUsrMsg_RawAudio

// optional int32 pitch = 1;
inline bool CCSUsrMsg_RawAudio::_internal_has_pitch() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_RawAudio::has_pitch() const {
  return _internal_has_pitch();
}
inline void CCSUsrMsg_RawAudio::clear_pitch() {
  pitch_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_RawAudio::_internal_pitch() const {
  return pitch_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_RawAudio::pitch() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RawAudio.pitch)
  return _internal_pitch();
}
inline void CCSUsrMsg_RawAudio::_internal_set_pitch(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  pitch_ = value;
}
inline void CCSUsrMsg_RawAudio::set_pitch(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_pitch(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RawAudio.pitch)
}

// optional int32 entidx = 2;
inline bool CCSUsrMsg_RawAudio::_internal_has_entidx() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_RawAudio::has_entidx() const {
  return _internal_has_entidx();
}
inline void CCSUsrMsg_RawAudio::clear_entidx() {
  entidx_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_RawAudio::_internal_entidx() const {
  return entidx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_RawAudio::entidx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RawAudio.entidx)
  return _internal_entidx();
}
inline void CCSUsrMsg_RawAudio::_internal_set_entidx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  entidx_ = value;
}
inline void CCSUsrMsg_RawAudio::set_entidx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entidx(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RawAudio.entidx)
}

// optional float duration = 3;
inline bool CCSUsrMsg_RawAudio::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCSUsrMsg_RawAudio::has_duration() const {
  return _internal_has_duration();
}
inline void CCSUsrMsg_RawAudio::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CCSUsrMsg_RawAudio::_internal_duration() const {
  return duration_;
}
inline float CCSUsrMsg_RawAudio::duration() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RawAudio.duration)
  return _internal_duration();
}
inline void CCSUsrMsg_RawAudio::_internal_set_duration(float value) {
  _has_bits_[0] |= 0x00000008u;
  duration_ = value;
}
inline void CCSUsrMsg_RawAudio::set_duration(float value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RawAudio.duration)
}

// optional string voice_filename = 4;
inline bool CCSUsrMsg_RawAudio::_internal_has_voice_filename() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_RawAudio::has_voice_filename() const {
  return _internal_has_voice_filename();
}
inline void CCSUsrMsg_RawAudio::clear_voice_filename() {
  voice_filename_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCSUsrMsg_RawAudio::voice_filename() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RawAudio.voice_filename)
  return _internal_voice_filename();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_RawAudio::set_voice_filename(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 voice_filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RawAudio.voice_filename)
}
inline std::string* CCSUsrMsg_RawAudio::mutable_voice_filename() {
  std::string* _s = _internal_mutable_voice_filename();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_RawAudio.voice_filename)
  return _s;
}
inline const std::string& CCSUsrMsg_RawAudio::_internal_voice_filename() const {
  return voice_filename_.Get();
}
inline void CCSUsrMsg_RawAudio::_internal_set_voice_filename(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  voice_filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_RawAudio::_internal_mutable_voice_filename() {
  _has_bits_[0] |= 0x00000001u;
  return voice_filename_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_RawAudio::release_voice_filename() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_RawAudio.voice_filename)
  if (!_internal_has_voice_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return voice_filename_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_RawAudio::set_allocated_voice_filename(std::string* voice_filename) {
  if (voice_filename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  voice_filename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), voice_filename,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_RawAudio.voice_filename)
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoiceMask_PlayerMask

// optional int32 game_rules_mask = 1;
inline bool CCSUsrMsg_VoiceMask_PlayerMask::_internal_has_game_rules_mask() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_VoiceMask_PlayerMask::has_game_rules_mask() const {
  return _internal_has_game_rules_mask();
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::clear_game_rules_mask() {
  game_rules_mask_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_VoiceMask_PlayerMask::_internal_game_rules_mask() const {
  return game_rules_mask_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_VoiceMask_PlayerMask::game_rules_mask() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoiceMask.PlayerMask.game_rules_mask)
  return _internal_game_rules_mask();
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::_internal_set_game_rules_mask(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  game_rules_mask_ = value;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::set_game_rules_mask(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_game_rules_mask(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoiceMask.PlayerMask.game_rules_mask)
}

// optional int32 ban_masks = 2;
inline bool CCSUsrMsg_VoiceMask_PlayerMask::_internal_has_ban_masks() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_VoiceMask_PlayerMask::has_ban_masks() const {
  return _internal_has_ban_masks();
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::clear_ban_masks() {
  ban_masks_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_VoiceMask_PlayerMask::_internal_ban_masks() const {
  return ban_masks_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_VoiceMask_PlayerMask::ban_masks() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoiceMask.PlayerMask.ban_masks)
  return _internal_ban_masks();
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::_internal_set_ban_masks(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  ban_masks_ = value;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::set_ban_masks(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ban_masks(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoiceMask.PlayerMask.ban_masks)
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoiceMask

// repeated .CCSUsrMsg_VoiceMask.PlayerMask player_masks = 1;
inline int CCSUsrMsg_VoiceMask::_internal_player_masks_size() const {
  return player_masks_.size();
}
inline int CCSUsrMsg_VoiceMask::player_masks_size() const {
  return _internal_player_masks_size();
}
inline void CCSUsrMsg_VoiceMask::clear_player_masks() {
  player_masks_.Clear();
}
inline ::CCSUsrMsg_VoiceMask_PlayerMask* CCSUsrMsg_VoiceMask::mutable_player_masks(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VoiceMask.player_masks)
  return player_masks_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask >*
CCSUsrMsg_VoiceMask::mutable_player_masks() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_VoiceMask.player_masks)
  return &player_masks_;
}
inline const ::CCSUsrMsg_VoiceMask_PlayerMask& CCSUsrMsg_VoiceMask::_internal_player_masks(int index) const {
  return player_masks_.Get(index);
}
inline const ::CCSUsrMsg_VoiceMask_PlayerMask& CCSUsrMsg_VoiceMask::player_masks(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoiceMask.player_masks)
  return _internal_player_masks(index);
}
inline ::CCSUsrMsg_VoiceMask_PlayerMask* CCSUsrMsg_VoiceMask::_internal_add_player_masks() {
  return player_masks_.Add();
}
inline ::CCSUsrMsg_VoiceMask_PlayerMask* CCSUsrMsg_VoiceMask::add_player_masks() {
  ::CCSUsrMsg_VoiceMask_PlayerMask* _add = _internal_add_player_masks();
  // @@protoc_insertion_point(field_add:CCSUsrMsg_VoiceMask.player_masks)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask >&
CCSUsrMsg_VoiceMask::player_masks() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_VoiceMask.player_masks)
  return player_masks_;
}

// optional bool player_mod_enable = 2;
inline bool CCSUsrMsg_VoiceMask::_internal_has_player_mod_enable() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_VoiceMask::has_player_mod_enable() const {
  return _internal_has_player_mod_enable();
}
inline void CCSUsrMsg_VoiceMask::clear_player_mod_enable() {
  player_mod_enable_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CCSUsrMsg_VoiceMask::_internal_player_mod_enable() const {
  return player_mod_enable_;
}
inline bool CCSUsrMsg_VoiceMask::player_mod_enable() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoiceMask.player_mod_enable)
  return _internal_player_mod_enable();
}
inline void CCSUsrMsg_VoiceMask::_internal_set_player_mod_enable(bool value) {
  _has_bits_[0] |= 0x00000001u;
  player_mod_enable_ = value;
}
inline void CCSUsrMsg_VoiceMask::set_player_mod_enable(bool value) {
  _internal_set_player_mod_enable(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoiceMask.player_mod_enable)
}

// -------------------------------------------------------------------

// CCSUsrMsg_Damage

// optional int32 amount = 1;
inline bool CCSUsrMsg_Damage::_internal_has_amount() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_Damage::has_amount() const {
  return _internal_has_amount();
}
inline void CCSUsrMsg_Damage::clear_amount() {
  amount_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Damage::_internal_amount() const {
  return amount_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Damage::amount() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Damage.amount)
  return _internal_amount();
}
inline void CCSUsrMsg_Damage::_internal_set_amount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  amount_ = value;
}
inline void CCSUsrMsg_Damage::set_amount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Damage.amount)
}

// optional .CMsgVector inflictor_world_pos = 2;
inline bool CCSUsrMsg_Damage::_internal_has_inflictor_world_pos() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || inflictor_world_pos_ != nullptr);
  return value;
}
inline bool CCSUsrMsg_Damage::has_inflictor_world_pos() const {
  return _internal_has_inflictor_world_pos();
}
inline const ::CMsgVector& CCSUsrMsg_Damage::_internal_inflictor_world_pos() const {
  const ::CMsgVector* p = inflictor_world_pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CCSUsrMsg_Damage::inflictor_world_pos() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Damage.inflictor_world_pos)
  return _internal_inflictor_world_pos();
}
inline void CCSUsrMsg_Damage::unsafe_arena_set_allocated_inflictor_world_pos(
    ::CMsgVector* inflictor_world_pos) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(inflictor_world_pos_);
  }
  inflictor_world_pos_ = inflictor_world_pos;
  if (inflictor_world_pos) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCSUsrMsg_Damage.inflictor_world_pos)
}
inline ::CMsgVector* CCSUsrMsg_Damage::release_inflictor_world_pos() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = inflictor_world_pos_;
  inflictor_world_pos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgVector* CCSUsrMsg_Damage::unsafe_arena_release_inflictor_world_pos() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_Damage.inflictor_world_pos)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = inflictor_world_pos_;
  inflictor_world_pos_ = nullptr;
  return temp;
}
inline ::CMsgVector* CCSUsrMsg_Damage::_internal_mutable_inflictor_world_pos() {
  _has_bits_[0] |= 0x00000001u;
  if (inflictor_world_pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaForAllocation());
    inflictor_world_pos_ = p;
  }
  return inflictor_world_pos_;
}
inline ::CMsgVector* CCSUsrMsg_Damage::mutable_inflictor_world_pos() {
  ::CMsgVector* _msg = _internal_mutable_inflictor_world_pos();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_Damage.inflictor_world_pos)
  return _msg;
}
inline void CCSUsrMsg_Damage::set_allocated_inflictor_world_pos(::CMsgVector* inflictor_world_pos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(inflictor_world_pos_);
  }
  if (inflictor_world_pos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(inflictor_world_pos));
    if (message_arena != submessage_arena) {
      inflictor_world_pos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, inflictor_world_pos, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  inflictor_world_pos_ = inflictor_world_pos;
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_Damage.inflictor_world_pos)
}

// optional int32 victim_entindex = 3;
inline bool CCSUsrMsg_Damage::_internal_has_victim_entindex() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_Damage::has_victim_entindex() const {
  return _internal_has_victim_entindex();
}
inline void CCSUsrMsg_Damage::clear_victim_entindex() {
  victim_entindex_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Damage::_internal_victim_entindex() const {
  return victim_entindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_Damage::victim_entindex() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Damage.victim_entindex)
  return _internal_victim_entindex();
}
inline void CCSUsrMsg_Damage::_internal_set_victim_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  victim_entindex_ = value;
}
inline void CCSUsrMsg_Damage::set_victim_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_victim_entindex(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Damage.victim_entindex)
}

// -------------------------------------------------------------------

// CCSUsrMsg_RadioText

// optional int32 msg_dst = 1;
inline bool CCSUsrMsg_RadioText::_internal_has_msg_dst() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_RadioText::has_msg_dst() const {
  return _internal_has_msg_dst();
}
inline void CCSUsrMsg_RadioText::clear_msg_dst() {
  msg_dst_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_RadioText::_internal_msg_dst() const {
  return msg_dst_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_RadioText::msg_dst() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RadioText.msg_dst)
  return _internal_msg_dst();
}
inline void CCSUsrMsg_RadioText::_internal_set_msg_dst(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  msg_dst_ = value;
}
inline void CCSUsrMsg_RadioText::set_msg_dst(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_msg_dst(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RadioText.msg_dst)
}

// optional int32 client = 2;
inline bool CCSUsrMsg_RadioText::_internal_has_client() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_RadioText::has_client() const {
  return _internal_has_client();
}
inline void CCSUsrMsg_RadioText::clear_client() {
  client_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_RadioText::_internal_client() const {
  return client_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_RadioText::client() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RadioText.client)
  return _internal_client();
}
inline void CCSUsrMsg_RadioText::_internal_set_client(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  client_ = value;
}
inline void CCSUsrMsg_RadioText::set_client(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_client(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RadioText.client)
}

// optional string msg_name = 3;
inline bool CCSUsrMsg_RadioText::_internal_has_msg_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_RadioText::has_msg_name() const {
  return _internal_has_msg_name();
}
inline void CCSUsrMsg_RadioText::clear_msg_name() {
  msg_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCSUsrMsg_RadioText::msg_name() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RadioText.msg_name)
  return _internal_msg_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_RadioText::set_msg_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 msg_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RadioText.msg_name)
}
inline std::string* CCSUsrMsg_RadioText::mutable_msg_name() {
  std::string* _s = _internal_mutable_msg_name();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_RadioText.msg_name)
  return _s;
}
inline const std::string& CCSUsrMsg_RadioText::_internal_msg_name() const {
  return msg_name_.Get();
}
inline void CCSUsrMsg_RadioText::_internal_set_msg_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  msg_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_RadioText::_internal_mutable_msg_name() {
  _has_bits_[0] |= 0x00000001u;
  return msg_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_RadioText::release_msg_name() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_RadioText.msg_name)
  if (!_internal_has_msg_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return msg_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_RadioText::set_allocated_msg_name(std::string* msg_name) {
  if (msg_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  msg_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg_name,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_RadioText.msg_name)
}

// repeated string params = 4;
inline int CCSUsrMsg_RadioText::_internal_params_size() const {
  return params_.size();
}
inline int CCSUsrMsg_RadioText::params_size() const {
  return _internal_params_size();
}
inline void CCSUsrMsg_RadioText::clear_params() {
  params_.Clear();
}
inline std::string* CCSUsrMsg_RadioText::add_params() {
  std::string* _s = _internal_add_params();
  // @@protoc_insertion_point(field_add_mutable:CCSUsrMsg_RadioText.params)
  return _s;
}
inline const std::string& CCSUsrMsg_RadioText::_internal_params(int index) const {
  return params_.Get(index);
}
inline const std::string& CCSUsrMsg_RadioText::params(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RadioText.params)
  return _internal_params(index);
}
inline std::string* CCSUsrMsg_RadioText::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_RadioText.params)
  return params_.Mutable(index);
}
inline void CCSUsrMsg_RadioText::set_params(int index, const std::string& value) {
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RadioText.params)
}
inline void CCSUsrMsg_RadioText::set_params(int index, std::string&& value) {
  params_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RadioText.params)
}
inline void CCSUsrMsg_RadioText::set_params(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_RadioText.params)
}
inline void CCSUsrMsg_RadioText::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_RadioText.params)
}
inline std::string* CCSUsrMsg_RadioText::_internal_add_params() {
  return params_.Add();
}
inline void CCSUsrMsg_RadioText::add_params(const std::string& value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CCSUsrMsg_RadioText.params)
}
inline void CCSUsrMsg_RadioText::add_params(std::string&& value) {
  params_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CCSUsrMsg_RadioText.params)
}
inline void CCSUsrMsg_RadioText::add_params(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CCSUsrMsg_RadioText.params)
}
inline void CCSUsrMsg_RadioText::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CCSUsrMsg_RadioText.params)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CCSUsrMsg_RadioText::params() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_RadioText.params)
  return params_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CCSUsrMsg_RadioText::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_RadioText.params)
  return &params_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_HintText

// optional string text = 1;
inline bool CCSUsrMsg_HintText::_internal_has_text() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_HintText::has_text() const {
  return _internal_has_text();
}
inline void CCSUsrMsg_HintText::clear_text() {
  text_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCSUsrMsg_HintText::text() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HintText.text)
  return _internal_text();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_HintText::set_text(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HintText.text)
}
inline std::string* CCSUsrMsg_HintText::mutable_text() {
  std::string* _s = _internal_mutable_text();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_HintText.text)
  return _s;
}
inline const std::string& CCSUsrMsg_HintText::_internal_text() const {
  return text_.Get();
}
inline void CCSUsrMsg_HintText::_internal_set_text(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_HintText::_internal_mutable_text() {
  _has_bits_[0] |= 0x00000001u;
  return text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_HintText::release_text() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_HintText.text)
  if (!_internal_has_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return text_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_HintText::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_HintText.text)
}

// -------------------------------------------------------------------

// CCSUsrMsg_KeyHintText

// repeated string hints = 1;
inline int CCSUsrMsg_KeyHintText::_internal_hints_size() const {
  return hints_.size();
}
inline int CCSUsrMsg_KeyHintText::hints_size() const {
  return _internal_hints_size();
}
inline void CCSUsrMsg_KeyHintText::clear_hints() {
  hints_.Clear();
}
inline std::string* CCSUsrMsg_KeyHintText::add_hints() {
  std::string* _s = _internal_add_hints();
  // @@protoc_insertion_point(field_add_mutable:CCSUsrMsg_KeyHintText.hints)
  return _s;
}
inline const std::string& CCSUsrMsg_KeyHintText::_internal_hints(int index) const {
  return hints_.Get(index);
}
inline const std::string& CCSUsrMsg_KeyHintText::hints(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_KeyHintText.hints)
  return _internal_hints(index);
}
inline std::string* CCSUsrMsg_KeyHintText::mutable_hints(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_KeyHintText.hints)
  return hints_.Mutable(index);
}
inline void CCSUsrMsg_KeyHintText::set_hints(int index, const std::string& value) {
  hints_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_KeyHintText.hints)
}
inline void CCSUsrMsg_KeyHintText::set_hints(int index, std::string&& value) {
  hints_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CCSUsrMsg_KeyHintText.hints)
}
inline void CCSUsrMsg_KeyHintText::set_hints(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  hints_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_KeyHintText.hints)
}
inline void CCSUsrMsg_KeyHintText::set_hints(int index, const char* value, size_t size) {
  hints_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_KeyHintText.hints)
}
inline std::string* CCSUsrMsg_KeyHintText::_internal_add_hints() {
  return hints_.Add();
}
inline void CCSUsrMsg_KeyHintText::add_hints(const std::string& value) {
  hints_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CCSUsrMsg_KeyHintText.hints)
}
inline void CCSUsrMsg_KeyHintText::add_hints(std::string&& value) {
  hints_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CCSUsrMsg_KeyHintText.hints)
}
inline void CCSUsrMsg_KeyHintText::add_hints(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  hints_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CCSUsrMsg_KeyHintText.hints)
}
inline void CCSUsrMsg_KeyHintText::add_hints(const char* value, size_t size) {
  hints_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CCSUsrMsg_KeyHintText.hints)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CCSUsrMsg_KeyHintText::hints() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_KeyHintText.hints)
  return hints_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CCSUsrMsg_KeyHintText::mutable_hints() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_KeyHintText.hints)
  return &hints_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate

// optional int32 entity_idx = 1;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_has_entity_idx() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_entity_idx() const {
  return _internal_has_entity_idx();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_entity_idx() {
  entity_idx_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_entity_idx() const {
  return entity_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::entity_idx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.entity_idx)
  return _internal_entity_idx();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_set_entity_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  entity_idx_ = value;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_entity_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entity_idx(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.entity_idx)
}

// optional int32 class_id = 2;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_has_class_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_class_id() const {
  return _internal_has_class_id();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_class_id() {
  class_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_class_id() const {
  return class_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::class_id() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.class_id)
  return _internal_class_id();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_set_class_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  class_id_ = value;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_class_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_class_id(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.class_id)
}

// optional int32 origin_x = 3;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_has_origin_x() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_origin_x() const {
  return _internal_has_origin_x();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_origin_x() {
  origin_x_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_origin_x() const {
  return origin_x_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::origin_x() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.origin_x)
  return _internal_origin_x();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_set_origin_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  origin_x_ = value;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_origin_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_origin_x(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.origin_x)
}

// optional int32 origin_y = 4;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_has_origin_y() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_origin_y() const {
  return _internal_has_origin_y();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_origin_y() {
  origin_y_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_origin_y() const {
  return origin_y_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::origin_y() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.origin_y)
  return _internal_origin_y();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_set_origin_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  origin_y_ = value;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_origin_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_origin_y(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.origin_y)
}

// optional int32 origin_z = 5;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_has_origin_z() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_origin_z() const {
  return _internal_has_origin_z();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_origin_z() {
  origin_z_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_origin_z() const {
  return origin_z_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::origin_z() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.origin_z)
  return _internal_origin_z();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_set_origin_z(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  origin_z_ = value;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_origin_z(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_origin_z(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.origin_z)
}

// optional int32 angle_y = 6;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_has_angle_y() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_angle_y() const {
  return _internal_has_angle_y();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_angle_y() {
  angle_y_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_angle_y() const {
  return angle_y_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::angle_y() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.angle_y)
  return _internal_angle_y();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_set_angle_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  angle_y_ = value;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_angle_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_angle_y(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.angle_y)
}

// optional bool defuser = 7;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_has_defuser() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_defuser() const {
  return _internal_has_defuser();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_defuser() {
  defuser_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_defuser() const {
  return defuser_;
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::defuser() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.defuser)
  return _internal_defuser();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_set_defuser(bool value) {
  _has_bits_[0] |= 0x00000040u;
  defuser_ = value;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_defuser(bool value) {
  _internal_set_defuser(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.defuser)
}

// optional bool player_has_defuser = 8;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_has_player_has_defuser() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_player_has_defuser() const {
  return _internal_has_player_has_defuser();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_player_has_defuser() {
  player_has_defuser_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_player_has_defuser() const {
  return player_has_defuser_;
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::player_has_defuser() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.player_has_defuser)
  return _internal_player_has_defuser();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_set_player_has_defuser(bool value) {
  _has_bits_[0] |= 0x00000080u;
  player_has_defuser_ = value;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_player_has_defuser(bool value) {
  _internal_set_player_has_defuser(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.player_has_defuser)
}

// optional bool player_has_c4 = 9;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_has_player_has_c4() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_player_has_c4() const {
  return _internal_has_player_has_c4();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_player_has_c4() {
  player_has_c4_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_player_has_c4() const {
  return player_has_c4_;
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::player_has_c4() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.player_has_c4)
  return _internal_player_has_c4();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::_internal_set_player_has_c4(bool value) {
  _has_bits_[0] |= 0x00000100u;
  player_has_c4_ = value;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_player_has_c4(bool value) {
  _internal_set_player_has_c4(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.player_has_c4)
}

// -------------------------------------------------------------------

// CCSUsrMsg_ProcessSpottedEntityUpdate

// optional bool new_update = 1;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate::_internal_has_new_update() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate::has_new_update() const {
  return _internal_has_new_update();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate::clear_new_update() {
  new_update_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate::_internal_new_update() const {
  return new_update_;
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate::new_update() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.new_update)
  return _internal_new_update();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate::_internal_set_new_update(bool value) {
  _has_bits_[0] |= 0x00000001u;
  new_update_ = value;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate::set_new_update(bool value) {
  _internal_set_new_update(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.new_update)
}

// repeated .CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate entity_updates = 2;
inline int CCSUsrMsg_ProcessSpottedEntityUpdate::_internal_entity_updates_size() const {
  return entity_updates_.size();
}
inline int CCSUsrMsg_ProcessSpottedEntityUpdate::entity_updates_size() const {
  return _internal_entity_updates_size();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate::clear_entity_updates() {
  entity_updates_.Clear();
}
inline ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* CCSUsrMsg_ProcessSpottedEntityUpdate::mutable_entity_updates(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_ProcessSpottedEntityUpdate.entity_updates)
  return entity_updates_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate >*
CCSUsrMsg_ProcessSpottedEntityUpdate::mutable_entity_updates() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_ProcessSpottedEntityUpdate.entity_updates)
  return &entity_updates_;
}
inline const ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& CCSUsrMsg_ProcessSpottedEntityUpdate::_internal_entity_updates(int index) const {
  return entity_updates_.Get(index);
}
inline const ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& CCSUsrMsg_ProcessSpottedEntityUpdate::entity_updates(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.entity_updates)
  return _internal_entity_updates(index);
}
inline ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* CCSUsrMsg_ProcessSpottedEntityUpdate::_internal_add_entity_updates() {
  return entity_updates_.Add();
}
inline ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* CCSUsrMsg_ProcessSpottedEntityUpdate::add_entity_updates() {
  ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* _add = _internal_add_entity_updates();
  // @@protoc_insertion_point(field_add:CCSUsrMsg_ProcessSpottedEntityUpdate.entity_updates)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate >&
CCSUsrMsg_ProcessSpottedEntityUpdate::entity_updates() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_ProcessSpottedEntityUpdate.entity_updates)
  return entity_updates_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SendPlayerItemDrops

// repeated .CEconItemPreviewDataBlock entity_updates = 1;
inline int CCSUsrMsg_SendPlayerItemDrops::_internal_entity_updates_size() const {
  return entity_updates_.size();
}
inline int CCSUsrMsg_SendPlayerItemDrops::entity_updates_size() const {
  return _internal_entity_updates_size();
}
inline ::CEconItemPreviewDataBlock* CCSUsrMsg_SendPlayerItemDrops::mutable_entity_updates(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_SendPlayerItemDrops.entity_updates)
  return entity_updates_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CEconItemPreviewDataBlock >*
CCSUsrMsg_SendPlayerItemDrops::mutable_entity_updates() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_SendPlayerItemDrops.entity_updates)
  return &entity_updates_;
}
inline const ::CEconItemPreviewDataBlock& CCSUsrMsg_SendPlayerItemDrops::_internal_entity_updates(int index) const {
  return entity_updates_.Get(index);
}
inline const ::CEconItemPreviewDataBlock& CCSUsrMsg_SendPlayerItemDrops::entity_updates(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendPlayerItemDrops.entity_updates)
  return _internal_entity_updates(index);
}
inline ::CEconItemPreviewDataBlock* CCSUsrMsg_SendPlayerItemDrops::_internal_add_entity_updates() {
  return entity_updates_.Add();
}
inline ::CEconItemPreviewDataBlock* CCSUsrMsg_SendPlayerItemDrops::add_entity_updates() {
  ::CEconItemPreviewDataBlock* _add = _internal_add_entity_updates();
  // @@protoc_insertion_point(field_add:CCSUsrMsg_SendPlayerItemDrops.entity_updates)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CEconItemPreviewDataBlock >&
CCSUsrMsg_SendPlayerItemDrops::entity_updates() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_SendPlayerItemDrops.entity_updates)
  return entity_updates_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SendPlayerItemFound

// optional .CEconItemPreviewDataBlock iteminfo = 1;
inline bool CCSUsrMsg_SendPlayerItemFound::_internal_has_iteminfo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || iteminfo_ != nullptr);
  return value;
}
inline bool CCSUsrMsg_SendPlayerItemFound::has_iteminfo() const {
  return _internal_has_iteminfo();
}
inline const ::CEconItemPreviewDataBlock& CCSUsrMsg_SendPlayerItemFound::_internal_iteminfo() const {
  const ::CEconItemPreviewDataBlock* p = iteminfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::CEconItemPreviewDataBlock&>(
      ::_CEconItemPreviewDataBlock_default_instance_);
}
inline const ::CEconItemPreviewDataBlock& CCSUsrMsg_SendPlayerItemFound::iteminfo() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendPlayerItemFound.iteminfo)
  return _internal_iteminfo();
}
inline void CCSUsrMsg_SendPlayerItemFound::unsafe_arena_set_allocated_iteminfo(
    ::CEconItemPreviewDataBlock* iteminfo) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(iteminfo_);
  }
  iteminfo_ = iteminfo;
  if (iteminfo) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCSUsrMsg_SendPlayerItemFound.iteminfo)
}
inline ::CEconItemPreviewDataBlock* CCSUsrMsg_SendPlayerItemFound::release_iteminfo() {
  _has_bits_[0] &= ~0x00000001u;
  ::CEconItemPreviewDataBlock* temp = iteminfo_;
  iteminfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CEconItemPreviewDataBlock* CCSUsrMsg_SendPlayerItemFound::unsafe_arena_release_iteminfo() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_SendPlayerItemFound.iteminfo)
  _has_bits_[0] &= ~0x00000001u;
  ::CEconItemPreviewDataBlock* temp = iteminfo_;
  iteminfo_ = nullptr;
  return temp;
}
inline ::CEconItemPreviewDataBlock* CCSUsrMsg_SendPlayerItemFound::_internal_mutable_iteminfo() {
  _has_bits_[0] |= 0x00000001u;
  if (iteminfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::CEconItemPreviewDataBlock>(GetArenaForAllocation());
    iteminfo_ = p;
  }
  return iteminfo_;
}
inline ::CEconItemPreviewDataBlock* CCSUsrMsg_SendPlayerItemFound::mutable_iteminfo() {
  ::CEconItemPreviewDataBlock* _msg = _internal_mutable_iteminfo();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_SendPlayerItemFound.iteminfo)
  return _msg;
}
inline void CCSUsrMsg_SendPlayerItemFound::set_allocated_iteminfo(::CEconItemPreviewDataBlock* iteminfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(iteminfo_);
  }
  if (iteminfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(iteminfo));
    if (message_arena != submessage_arena) {
      iteminfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, iteminfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  iteminfo_ = iteminfo;
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_SendPlayerItemFound.iteminfo)
}

// optional int32 entindex = 2;
inline bool CCSUsrMsg_SendPlayerItemFound::_internal_has_entindex() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_SendPlayerItemFound::has_entindex() const {
  return _internal_has_entindex();
}
inline void CCSUsrMsg_SendPlayerItemFound::clear_entindex() {
  entindex_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_SendPlayerItemFound::_internal_entindex() const {
  return entindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_SendPlayerItemFound::entindex() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendPlayerItemFound.entindex)
  return _internal_entindex();
}
inline void CCSUsrMsg_SendPlayerItemFound::_internal_set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  entindex_ = value;
}
inline void CCSUsrMsg_SendPlayerItemFound::set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entindex(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SendPlayerItemFound.entindex)
}

// -------------------------------------------------------------------

// CCSUsrMsg_ReloadEffect

// optional int32 entidx = 1;
inline bool CCSUsrMsg_ReloadEffect::_internal_has_entidx() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_ReloadEffect::has_entidx() const {
  return _internal_has_entidx();
}
inline void CCSUsrMsg_ReloadEffect::clear_entidx() {
  entidx_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ReloadEffect::_internal_entidx() const {
  return entidx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ReloadEffect::entidx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReloadEffect.entidx)
  return _internal_entidx();
}
inline void CCSUsrMsg_ReloadEffect::_internal_set_entidx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  entidx_ = value;
}
inline void CCSUsrMsg_ReloadEffect::set_entidx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entidx(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReloadEffect.entidx)
}

// optional int32 actanim = 2;
inline bool CCSUsrMsg_ReloadEffect::_internal_has_actanim() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_ReloadEffect::has_actanim() const {
  return _internal_has_actanim();
}
inline void CCSUsrMsg_ReloadEffect::clear_actanim() {
  actanim_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ReloadEffect::_internal_actanim() const {
  return actanim_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ReloadEffect::actanim() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReloadEffect.actanim)
  return _internal_actanim();
}
inline void CCSUsrMsg_ReloadEffect::_internal_set_actanim(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  actanim_ = value;
}
inline void CCSUsrMsg_ReloadEffect::set_actanim(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_actanim(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReloadEffect.actanim)
}

// optional float origin_x = 3;
inline bool CCSUsrMsg_ReloadEffect::_internal_has_origin_x() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_ReloadEffect::has_origin_x() const {
  return _internal_has_origin_x();
}
inline void CCSUsrMsg_ReloadEffect::clear_origin_x() {
  origin_x_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CCSUsrMsg_ReloadEffect::_internal_origin_x() const {
  return origin_x_;
}
inline float CCSUsrMsg_ReloadEffect::origin_x() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReloadEffect.origin_x)
  return _internal_origin_x();
}
inline void CCSUsrMsg_ReloadEffect::_internal_set_origin_x(float value) {
  _has_bits_[0] |= 0x00000004u;
  origin_x_ = value;
}
inline void CCSUsrMsg_ReloadEffect::set_origin_x(float value) {
  _internal_set_origin_x(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReloadEffect.origin_x)
}

// optional float origin_y = 4;
inline bool CCSUsrMsg_ReloadEffect::_internal_has_origin_y() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCSUsrMsg_ReloadEffect::has_origin_y() const {
  return _internal_has_origin_y();
}
inline void CCSUsrMsg_ReloadEffect::clear_origin_y() {
  origin_y_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CCSUsrMsg_ReloadEffect::_internal_origin_y() const {
  return origin_y_;
}
inline float CCSUsrMsg_ReloadEffect::origin_y() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReloadEffect.origin_y)
  return _internal_origin_y();
}
inline void CCSUsrMsg_ReloadEffect::_internal_set_origin_y(float value) {
  _has_bits_[0] |= 0x00000008u;
  origin_y_ = value;
}
inline void CCSUsrMsg_ReloadEffect::set_origin_y(float value) {
  _internal_set_origin_y(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReloadEffect.origin_y)
}

// optional float origin_z = 5;
inline bool CCSUsrMsg_ReloadEffect::_internal_has_origin_z() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCSUsrMsg_ReloadEffect::has_origin_z() const {
  return _internal_has_origin_z();
}
inline void CCSUsrMsg_ReloadEffect::clear_origin_z() {
  origin_z_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float CCSUsrMsg_ReloadEffect::_internal_origin_z() const {
  return origin_z_;
}
inline float CCSUsrMsg_ReloadEffect::origin_z() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReloadEffect.origin_z)
  return _internal_origin_z();
}
inline void CCSUsrMsg_ReloadEffect::_internal_set_origin_z(float value) {
  _has_bits_[0] |= 0x00000010u;
  origin_z_ = value;
}
inline void CCSUsrMsg_ReloadEffect::set_origin_z(float value) {
  _internal_set_origin_z(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReloadEffect.origin_z)
}

// -------------------------------------------------------------------

// CCSUsrMsg_AdjustMoney

// optional int32 amount = 1;
inline bool CCSUsrMsg_AdjustMoney::_internal_has_amount() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_AdjustMoney::has_amount() const {
  return _internal_has_amount();
}
inline void CCSUsrMsg_AdjustMoney::clear_amount() {
  amount_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_AdjustMoney::_internal_amount() const {
  return amount_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_AdjustMoney::amount() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_AdjustMoney.amount)
  return _internal_amount();
}
inline void CCSUsrMsg_AdjustMoney::_internal_set_amount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  amount_ = value;
}
inline void CCSUsrMsg_AdjustMoney::set_amount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_AdjustMoney.amount)
}

// -------------------------------------------------------------------

// CCSUsrMsg_ReportHit

// optional float pos_x = 1;
inline bool CCSUsrMsg_ReportHit::_internal_has_pos_x() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_ReportHit::has_pos_x() const {
  return _internal_has_pos_x();
}
inline void CCSUsrMsg_ReportHit::clear_pos_x() {
  pos_x_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CCSUsrMsg_ReportHit::_internal_pos_x() const {
  return pos_x_;
}
inline float CCSUsrMsg_ReportHit::pos_x() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReportHit.pos_x)
  return _internal_pos_x();
}
inline void CCSUsrMsg_ReportHit::_internal_set_pos_x(float value) {
  _has_bits_[0] |= 0x00000001u;
  pos_x_ = value;
}
inline void CCSUsrMsg_ReportHit::set_pos_x(float value) {
  _internal_set_pos_x(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReportHit.pos_x)
}

// optional float pos_y = 2;
inline bool CCSUsrMsg_ReportHit::_internal_has_pos_y() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_ReportHit::has_pos_y() const {
  return _internal_has_pos_y();
}
inline void CCSUsrMsg_ReportHit::clear_pos_y() {
  pos_y_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CCSUsrMsg_ReportHit::_internal_pos_y() const {
  return pos_y_;
}
inline float CCSUsrMsg_ReportHit::pos_y() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReportHit.pos_y)
  return _internal_pos_y();
}
inline void CCSUsrMsg_ReportHit::_internal_set_pos_y(float value) {
  _has_bits_[0] |= 0x00000002u;
  pos_y_ = value;
}
inline void CCSUsrMsg_ReportHit::set_pos_y(float value) {
  _internal_set_pos_y(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReportHit.pos_y)
}

// optional float timestamp = 4;
inline bool CCSUsrMsg_ReportHit::_internal_has_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCSUsrMsg_ReportHit::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void CCSUsrMsg_ReportHit::clear_timestamp() {
  timestamp_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CCSUsrMsg_ReportHit::_internal_timestamp() const {
  return timestamp_;
}
inline float CCSUsrMsg_ReportHit::timestamp() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReportHit.timestamp)
  return _internal_timestamp();
}
inline void CCSUsrMsg_ReportHit::_internal_set_timestamp(float value) {
  _has_bits_[0] |= 0x00000008u;
  timestamp_ = value;
}
inline void CCSUsrMsg_ReportHit::set_timestamp(float value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReportHit.timestamp)
}

// optional float pos_z = 3;
inline bool CCSUsrMsg_ReportHit::_internal_has_pos_z() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_ReportHit::has_pos_z() const {
  return _internal_has_pos_z();
}
inline void CCSUsrMsg_ReportHit::clear_pos_z() {
  pos_z_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CCSUsrMsg_ReportHit::_internal_pos_z() const {
  return pos_z_;
}
inline float CCSUsrMsg_ReportHit::pos_z() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReportHit.pos_z)
  return _internal_pos_z();
}
inline void CCSUsrMsg_ReportHit::_internal_set_pos_z(float value) {
  _has_bits_[0] |= 0x00000004u;
  pos_z_ = value;
}
inline void CCSUsrMsg_ReportHit::set_pos_z(float value) {
  _internal_set_pos_z(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReportHit.pos_z)
}

// -------------------------------------------------------------------

// CCSUsrMsg_KillCam

// optional int32 obs_mode = 1;
inline bool CCSUsrMsg_KillCam::_internal_has_obs_mode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_KillCam::has_obs_mode() const {
  return _internal_has_obs_mode();
}
inline void CCSUsrMsg_KillCam::clear_obs_mode() {
  obs_mode_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_KillCam::_internal_obs_mode() const {
  return obs_mode_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_KillCam::obs_mode() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_KillCam.obs_mode)
  return _internal_obs_mode();
}
inline void CCSUsrMsg_KillCam::_internal_set_obs_mode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  obs_mode_ = value;
}
inline void CCSUsrMsg_KillCam::set_obs_mode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_obs_mode(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_KillCam.obs_mode)
}

// optional int32 first_target = 2;
inline bool CCSUsrMsg_KillCam::_internal_has_first_target() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_KillCam::has_first_target() const {
  return _internal_has_first_target();
}
inline void CCSUsrMsg_KillCam::clear_first_target() {
  first_target_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_KillCam::_internal_first_target() const {
  return first_target_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_KillCam::first_target() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_KillCam.first_target)
  return _internal_first_target();
}
inline void CCSUsrMsg_KillCam::_internal_set_first_target(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  first_target_ = value;
}
inline void CCSUsrMsg_KillCam::set_first_target(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_first_target(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_KillCam.first_target)
}

// optional int32 second_target = 3;
inline bool CCSUsrMsg_KillCam::_internal_has_second_target() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_KillCam::has_second_target() const {
  return _internal_has_second_target();
}
inline void CCSUsrMsg_KillCam::clear_second_target() {
  second_target_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_KillCam::_internal_second_target() const {
  return second_target_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_KillCam::second_target() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_KillCam.second_target)
  return _internal_second_target();
}
inline void CCSUsrMsg_KillCam::_internal_set_second_target(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  second_target_ = value;
}
inline void CCSUsrMsg_KillCam::set_second_target(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_second_target(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_KillCam.second_target)
}

// -------------------------------------------------------------------

// CCSUsrMsg_DesiredTimescale

// optional float desired_timescale = 1;
inline bool CCSUsrMsg_DesiredTimescale::_internal_has_desired_timescale() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_DesiredTimescale::has_desired_timescale() const {
  return _internal_has_desired_timescale();
}
inline void CCSUsrMsg_DesiredTimescale::clear_desired_timescale() {
  desired_timescale_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CCSUsrMsg_DesiredTimescale::_internal_desired_timescale() const {
  return desired_timescale_;
}
inline float CCSUsrMsg_DesiredTimescale::desired_timescale() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DesiredTimescale.desired_timescale)
  return _internal_desired_timescale();
}
inline void CCSUsrMsg_DesiredTimescale::_internal_set_desired_timescale(float value) {
  _has_bits_[0] |= 0x00000001u;
  desired_timescale_ = value;
}
inline void CCSUsrMsg_DesiredTimescale::set_desired_timescale(float value) {
  _internal_set_desired_timescale(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DesiredTimescale.desired_timescale)
}

// optional float duration_realtime_sec = 2;
inline bool CCSUsrMsg_DesiredTimescale::_internal_has_duration_realtime_sec() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_DesiredTimescale::has_duration_realtime_sec() const {
  return _internal_has_duration_realtime_sec();
}
inline void CCSUsrMsg_DesiredTimescale::clear_duration_realtime_sec() {
  duration_realtime_sec_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CCSUsrMsg_DesiredTimescale::_internal_duration_realtime_sec() const {
  return duration_realtime_sec_;
}
inline float CCSUsrMsg_DesiredTimescale::duration_realtime_sec() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DesiredTimescale.duration_realtime_sec)
  return _internal_duration_realtime_sec();
}
inline void CCSUsrMsg_DesiredTimescale::_internal_set_duration_realtime_sec(float value) {
  _has_bits_[0] |= 0x00000002u;
  duration_realtime_sec_ = value;
}
inline void CCSUsrMsg_DesiredTimescale::set_duration_realtime_sec(float value) {
  _internal_set_duration_realtime_sec(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DesiredTimescale.duration_realtime_sec)
}

// optional int32 interpolator_type = 3;
inline bool CCSUsrMsg_DesiredTimescale::_internal_has_interpolator_type() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_DesiredTimescale::has_interpolator_type() const {
  return _internal_has_interpolator_type();
}
inline void CCSUsrMsg_DesiredTimescale::clear_interpolator_type() {
  interpolator_type_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_DesiredTimescale::_internal_interpolator_type() const {
  return interpolator_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_DesiredTimescale::interpolator_type() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DesiredTimescale.interpolator_type)
  return _internal_interpolator_type();
}
inline void CCSUsrMsg_DesiredTimescale::_internal_set_interpolator_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  interpolator_type_ = value;
}
inline void CCSUsrMsg_DesiredTimescale::set_interpolator_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_interpolator_type(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DesiredTimescale.interpolator_type)
}

// optional float start_blend_time = 4;
inline bool CCSUsrMsg_DesiredTimescale::_internal_has_start_blend_time() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCSUsrMsg_DesiredTimescale::has_start_blend_time() const {
  return _internal_has_start_blend_time();
}
inline void CCSUsrMsg_DesiredTimescale::clear_start_blend_time() {
  start_blend_time_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CCSUsrMsg_DesiredTimescale::_internal_start_blend_time() const {
  return start_blend_time_;
}
inline float CCSUsrMsg_DesiredTimescale::start_blend_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DesiredTimescale.start_blend_time)
  return _internal_start_blend_time();
}
inline void CCSUsrMsg_DesiredTimescale::_internal_set_start_blend_time(float value) {
  _has_bits_[0] |= 0x00000008u;
  start_blend_time_ = value;
}
inline void CCSUsrMsg_DesiredTimescale::set_start_blend_time(float value) {
  _internal_set_start_blend_time(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DesiredTimescale.start_blend_time)
}

// -------------------------------------------------------------------

// CCSUsrMsg_CurrentTimescale

// optional float cur_timescale = 1;
inline bool CCSUsrMsg_CurrentTimescale::_internal_has_cur_timescale() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_CurrentTimescale::has_cur_timescale() const {
  return _internal_has_cur_timescale();
}
inline void CCSUsrMsg_CurrentTimescale::clear_cur_timescale() {
  cur_timescale_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CCSUsrMsg_CurrentTimescale::_internal_cur_timescale() const {
  return cur_timescale_;
}
inline float CCSUsrMsg_CurrentTimescale::cur_timescale() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CurrentTimescale.cur_timescale)
  return _internal_cur_timescale();
}
inline void CCSUsrMsg_CurrentTimescale::_internal_set_cur_timescale(float value) {
  _has_bits_[0] |= 0x00000001u;
  cur_timescale_ = value;
}
inline void CCSUsrMsg_CurrentTimescale::set_cur_timescale(float value) {
  _internal_set_cur_timescale(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CurrentTimescale.cur_timescale)
}

// -------------------------------------------------------------------

// CCSUsrMsg_AchievementEvent

// optional int32 achievement = 1;
inline bool CCSUsrMsg_AchievementEvent::_internal_has_achievement() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_AchievementEvent::has_achievement() const {
  return _internal_has_achievement();
}
inline void CCSUsrMsg_AchievementEvent::clear_achievement() {
  achievement_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_AchievementEvent::_internal_achievement() const {
  return achievement_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_AchievementEvent::achievement() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_AchievementEvent.achievement)
  return _internal_achievement();
}
inline void CCSUsrMsg_AchievementEvent::_internal_set_achievement(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  achievement_ = value;
}
inline void CCSUsrMsg_AchievementEvent::set_achievement(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_achievement(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_AchievementEvent.achievement)
}

// optional int32 count = 2;
inline bool CCSUsrMsg_AchievementEvent::_internal_has_count() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_AchievementEvent::has_count() const {
  return _internal_has_count();
}
inline void CCSUsrMsg_AchievementEvent::clear_count() {
  count_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_AchievementEvent::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_AchievementEvent::count() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_AchievementEvent.count)
  return _internal_count();
}
inline void CCSUsrMsg_AchievementEvent::_internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  count_ = value;
}
inline void CCSUsrMsg_AchievementEvent::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_AchievementEvent.count)
}

// optional int32 user_id = 3;
inline bool CCSUsrMsg_AchievementEvent::_internal_has_user_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_AchievementEvent::has_user_id() const {
  return _internal_has_user_id();
}
inline void CCSUsrMsg_AchievementEvent::clear_user_id() {
  user_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_AchievementEvent::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_AchievementEvent::user_id() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_AchievementEvent.user_id)
  return _internal_user_id();
}
inline void CCSUsrMsg_AchievementEvent::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  user_id_ = value;
}
inline void CCSUsrMsg_AchievementEvent::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_AchievementEvent.user_id)
}

// -------------------------------------------------------------------

// CCSUsrMsg_MatchEndConditions

// optional int32 fraglimit = 1;
inline bool CCSUsrMsg_MatchEndConditions::_internal_has_fraglimit() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_MatchEndConditions::has_fraglimit() const {
  return _internal_has_fraglimit();
}
inline void CCSUsrMsg_MatchEndConditions::clear_fraglimit() {
  fraglimit_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_MatchEndConditions::_internal_fraglimit() const {
  return fraglimit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_MatchEndConditions::fraglimit() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_MatchEndConditions.fraglimit)
  return _internal_fraglimit();
}
inline void CCSUsrMsg_MatchEndConditions::_internal_set_fraglimit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  fraglimit_ = value;
}
inline void CCSUsrMsg_MatchEndConditions::set_fraglimit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_fraglimit(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_MatchEndConditions.fraglimit)
}

// optional int32 mp_maxrounds = 2;
inline bool CCSUsrMsg_MatchEndConditions::_internal_has_mp_maxrounds() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_MatchEndConditions::has_mp_maxrounds() const {
  return _internal_has_mp_maxrounds();
}
inline void CCSUsrMsg_MatchEndConditions::clear_mp_maxrounds() {
  mp_maxrounds_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_MatchEndConditions::_internal_mp_maxrounds() const {
  return mp_maxrounds_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_MatchEndConditions::mp_maxrounds() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_MatchEndConditions.mp_maxrounds)
  return _internal_mp_maxrounds();
}
inline void CCSUsrMsg_MatchEndConditions::_internal_set_mp_maxrounds(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  mp_maxrounds_ = value;
}
inline void CCSUsrMsg_MatchEndConditions::set_mp_maxrounds(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mp_maxrounds(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_MatchEndConditions.mp_maxrounds)
}

// optional int32 mp_winlimit = 3;
inline bool CCSUsrMsg_MatchEndConditions::_internal_has_mp_winlimit() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_MatchEndConditions::has_mp_winlimit() const {
  return _internal_has_mp_winlimit();
}
inline void CCSUsrMsg_MatchEndConditions::clear_mp_winlimit() {
  mp_winlimit_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_MatchEndConditions::_internal_mp_winlimit() const {
  return mp_winlimit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_MatchEndConditions::mp_winlimit() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_MatchEndConditions.mp_winlimit)
  return _internal_mp_winlimit();
}
inline void CCSUsrMsg_MatchEndConditions::_internal_set_mp_winlimit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  mp_winlimit_ = value;
}
inline void CCSUsrMsg_MatchEndConditions::set_mp_winlimit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mp_winlimit(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_MatchEndConditions.mp_winlimit)
}

// optional int32 mp_timelimit = 4;
inline bool CCSUsrMsg_MatchEndConditions::_internal_has_mp_timelimit() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCSUsrMsg_MatchEndConditions::has_mp_timelimit() const {
  return _internal_has_mp_timelimit();
}
inline void CCSUsrMsg_MatchEndConditions::clear_mp_timelimit() {
  mp_timelimit_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_MatchEndConditions::_internal_mp_timelimit() const {
  return mp_timelimit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_MatchEndConditions::mp_timelimit() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_MatchEndConditions.mp_timelimit)
  return _internal_mp_timelimit();
}
inline void CCSUsrMsg_MatchEndConditions::_internal_set_mp_timelimit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  mp_timelimit_ = value;
}
inline void CCSUsrMsg_MatchEndConditions::set_mp_timelimit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mp_timelimit(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_MatchEndConditions.mp_timelimit)
}

// -------------------------------------------------------------------

// CCSUsrMsg_PlayerStatsUpdate_Stat

// optional int32 idx = 1;
inline bool CCSUsrMsg_PlayerStatsUpdate_Stat::_internal_has_idx() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_PlayerStatsUpdate_Stat::has_idx() const {
  return _internal_has_idx();
}
inline void CCSUsrMsg_PlayerStatsUpdate_Stat::clear_idx() {
  idx_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_PlayerStatsUpdate_Stat::_internal_idx() const {
  return idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_PlayerStatsUpdate_Stat::idx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_PlayerStatsUpdate.Stat.idx)
  return _internal_idx();
}
inline void CCSUsrMsg_PlayerStatsUpdate_Stat::_internal_set_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  idx_ = value;
}
inline void CCSUsrMsg_PlayerStatsUpdate_Stat::set_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_idx(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_PlayerStatsUpdate.Stat.idx)
}

// optional int32 delta = 2;
inline bool CCSUsrMsg_PlayerStatsUpdate_Stat::_internal_has_delta() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_PlayerStatsUpdate_Stat::has_delta() const {
  return _internal_has_delta();
}
inline void CCSUsrMsg_PlayerStatsUpdate_Stat::clear_delta() {
  delta_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_PlayerStatsUpdate_Stat::_internal_delta() const {
  return delta_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_PlayerStatsUpdate_Stat::delta() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_PlayerStatsUpdate.Stat.delta)
  return _internal_delta();
}
inline void CCSUsrMsg_PlayerStatsUpdate_Stat::_internal_set_delta(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  delta_ = value;
}
inline void CCSUsrMsg_PlayerStatsUpdate_Stat::set_delta(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_delta(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_PlayerStatsUpdate.Stat.delta)
}

// -------------------------------------------------------------------

// CCSUsrMsg_PlayerStatsUpdate

// optional int32 version = 1;
inline bool CCSUsrMsg_PlayerStatsUpdate::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_PlayerStatsUpdate::has_version() const {
  return _internal_has_version();
}
inline void CCSUsrMsg_PlayerStatsUpdate::clear_version() {
  version_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_PlayerStatsUpdate::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_PlayerStatsUpdate::version() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_PlayerStatsUpdate.version)
  return _internal_version();
}
inline void CCSUsrMsg_PlayerStatsUpdate::_internal_set_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  version_ = value;
}
inline void CCSUsrMsg_PlayerStatsUpdate::set_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_PlayerStatsUpdate.version)
}

// repeated .CCSUsrMsg_PlayerStatsUpdate.Stat stats = 4;
inline int CCSUsrMsg_PlayerStatsUpdate::_internal_stats_size() const {
  return stats_.size();
}
inline int CCSUsrMsg_PlayerStatsUpdate::stats_size() const {
  return _internal_stats_size();
}
inline void CCSUsrMsg_PlayerStatsUpdate::clear_stats() {
  stats_.Clear();
}
inline ::CCSUsrMsg_PlayerStatsUpdate_Stat* CCSUsrMsg_PlayerStatsUpdate::mutable_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_PlayerStatsUpdate.stats)
  return stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_PlayerStatsUpdate_Stat >*
CCSUsrMsg_PlayerStatsUpdate::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_PlayerStatsUpdate.stats)
  return &stats_;
}
inline const ::CCSUsrMsg_PlayerStatsUpdate_Stat& CCSUsrMsg_PlayerStatsUpdate::_internal_stats(int index) const {
  return stats_.Get(index);
}
inline const ::CCSUsrMsg_PlayerStatsUpdate_Stat& CCSUsrMsg_PlayerStatsUpdate::stats(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_PlayerStatsUpdate.stats)
  return _internal_stats(index);
}
inline ::CCSUsrMsg_PlayerStatsUpdate_Stat* CCSUsrMsg_PlayerStatsUpdate::_internal_add_stats() {
  return stats_.Add();
}
inline ::CCSUsrMsg_PlayerStatsUpdate_Stat* CCSUsrMsg_PlayerStatsUpdate::add_stats() {
  ::CCSUsrMsg_PlayerStatsUpdate_Stat* _add = _internal_add_stats();
  // @@protoc_insertion_point(field_add:CCSUsrMsg_PlayerStatsUpdate.stats)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_PlayerStatsUpdate_Stat >&
CCSUsrMsg_PlayerStatsUpdate::stats() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_PlayerStatsUpdate.stats)
  return stats_;
}

// optional int32 user_id = 5;
inline bool CCSUsrMsg_PlayerStatsUpdate::_internal_has_user_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_PlayerStatsUpdate::has_user_id() const {
  return _internal_has_user_id();
}
inline void CCSUsrMsg_PlayerStatsUpdate::clear_user_id() {
  user_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_PlayerStatsUpdate::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_PlayerStatsUpdate::user_id() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_PlayerStatsUpdate.user_id)
  return _internal_user_id();
}
inline void CCSUsrMsg_PlayerStatsUpdate::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  user_id_ = value;
}
inline void CCSUsrMsg_PlayerStatsUpdate::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_PlayerStatsUpdate.user_id)
}

// optional int32 crc = 6;
inline bool CCSUsrMsg_PlayerStatsUpdate::_internal_has_crc() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_PlayerStatsUpdate::has_crc() const {
  return _internal_has_crc();
}
inline void CCSUsrMsg_PlayerStatsUpdate::clear_crc() {
  crc_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_PlayerStatsUpdate::_internal_crc() const {
  return crc_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_PlayerStatsUpdate::crc() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_PlayerStatsUpdate.crc)
  return _internal_crc();
}
inline void CCSUsrMsg_PlayerStatsUpdate::_internal_set_crc(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  crc_ = value;
}
inline void CCSUsrMsg_PlayerStatsUpdate::set_crc(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_crc(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_PlayerStatsUpdate.crc)
}

// -------------------------------------------------------------------

// CCSUsrMsg_DisplayInventory

// optional bool display = 1;
inline bool CCSUsrMsg_DisplayInventory::_internal_has_display() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_DisplayInventory::has_display() const {
  return _internal_has_display();
}
inline void CCSUsrMsg_DisplayInventory::clear_display() {
  display_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CCSUsrMsg_DisplayInventory::_internal_display() const {
  return display_;
}
inline bool CCSUsrMsg_DisplayInventory::display() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DisplayInventory.display)
  return _internal_display();
}
inline void CCSUsrMsg_DisplayInventory::_internal_set_display(bool value) {
  _has_bits_[0] |= 0x00000001u;
  display_ = value;
}
inline void CCSUsrMsg_DisplayInventory::set_display(bool value) {
  _internal_set_display(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DisplayInventory.display)
}

// optional int32 user_id = 2;
inline bool CCSUsrMsg_DisplayInventory::_internal_has_user_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_DisplayInventory::has_user_id() const {
  return _internal_has_user_id();
}
inline void CCSUsrMsg_DisplayInventory::clear_user_id() {
  user_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_DisplayInventory::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_DisplayInventory::user_id() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DisplayInventory.user_id)
  return _internal_user_id();
}
inline void CCSUsrMsg_DisplayInventory::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  user_id_ = value;
}
inline void CCSUsrMsg_DisplayInventory::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DisplayInventory.user_id)
}

// -------------------------------------------------------------------

// CCSUsrMsg_QuestProgress

// optional uint32 quest_id = 1;
inline bool CCSUsrMsg_QuestProgress::_internal_has_quest_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_QuestProgress::has_quest_id() const {
  return _internal_has_quest_id();
}
inline void CCSUsrMsg_QuestProgress::clear_quest_id() {
  quest_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCSUsrMsg_QuestProgress::_internal_quest_id() const {
  return quest_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCSUsrMsg_QuestProgress::quest_id() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_QuestProgress.quest_id)
  return _internal_quest_id();
}
inline void CCSUsrMsg_QuestProgress::_internal_set_quest_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  quest_id_ = value;
}
inline void CCSUsrMsg_QuestProgress::set_quest_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_quest_id(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_QuestProgress.quest_id)
}

// optional uint32 normal_points = 2;
inline bool CCSUsrMsg_QuestProgress::_internal_has_normal_points() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_QuestProgress::has_normal_points() const {
  return _internal_has_normal_points();
}
inline void CCSUsrMsg_QuestProgress::clear_normal_points() {
  normal_points_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCSUsrMsg_QuestProgress::_internal_normal_points() const {
  return normal_points_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCSUsrMsg_QuestProgress::normal_points() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_QuestProgress.normal_points)
  return _internal_normal_points();
}
inline void CCSUsrMsg_QuestProgress::_internal_set_normal_points(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  normal_points_ = value;
}
inline void CCSUsrMsg_QuestProgress::set_normal_points(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_normal_points(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_QuestProgress.normal_points)
}

// optional uint32 bonus_points = 3;
inline bool CCSUsrMsg_QuestProgress::_internal_has_bonus_points() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_QuestProgress::has_bonus_points() const {
  return _internal_has_bonus_points();
}
inline void CCSUsrMsg_QuestProgress::clear_bonus_points() {
  bonus_points_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCSUsrMsg_QuestProgress::_internal_bonus_points() const {
  return bonus_points_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCSUsrMsg_QuestProgress::bonus_points() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_QuestProgress.bonus_points)
  return _internal_bonus_points();
}
inline void CCSUsrMsg_QuestProgress::_internal_set_bonus_points(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  bonus_points_ = value;
}
inline void CCSUsrMsg_QuestProgress::set_bonus_points(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bonus_points(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_QuestProgress.bonus_points)
}

// optional bool is_event_quest = 4;
inline bool CCSUsrMsg_QuestProgress::_internal_has_is_event_quest() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCSUsrMsg_QuestProgress::has_is_event_quest() const {
  return _internal_has_is_event_quest();
}
inline void CCSUsrMsg_QuestProgress::clear_is_event_quest() {
  is_event_quest_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CCSUsrMsg_QuestProgress::_internal_is_event_quest() const {
  return is_event_quest_;
}
inline bool CCSUsrMsg_QuestProgress::is_event_quest() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_QuestProgress.is_event_quest)
  return _internal_is_event_quest();
}
inline void CCSUsrMsg_QuestProgress::_internal_set_is_event_quest(bool value) {
  _has_bits_[0] |= 0x00000008u;
  is_event_quest_ = value;
}
inline void CCSUsrMsg_QuestProgress::set_is_event_quest(bool value) {
  _internal_set_is_event_quest(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_QuestProgress.is_event_quest)
}

// -------------------------------------------------------------------

// CCSUsrMsg_ScoreLeaderboardData

// optional .ScoreLeaderboardData data = 1;
inline bool CCSUsrMsg_ScoreLeaderboardData::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || data_ != nullptr);
  return value;
}
inline bool CCSUsrMsg_ScoreLeaderboardData::has_data() const {
  return _internal_has_data();
}
inline const ::ScoreLeaderboardData& CCSUsrMsg_ScoreLeaderboardData::_internal_data() const {
  const ::ScoreLeaderboardData* p = data_;
  return p != nullptr ? *p : reinterpret_cast<const ::ScoreLeaderboardData&>(
      ::_ScoreLeaderboardData_default_instance_);
}
inline const ::ScoreLeaderboardData& CCSUsrMsg_ScoreLeaderboardData::data() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ScoreLeaderboardData.data)
  return _internal_data();
}
inline void CCSUsrMsg_ScoreLeaderboardData::unsafe_arena_set_allocated_data(
    ::ScoreLeaderboardData* data) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(data_);
  }
  data_ = data;
  if (data) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCSUsrMsg_ScoreLeaderboardData.data)
}
inline ::ScoreLeaderboardData* CCSUsrMsg_ScoreLeaderboardData::release_data() {
  _has_bits_[0] &= ~0x00000001u;
  ::ScoreLeaderboardData* temp = data_;
  data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ScoreLeaderboardData* CCSUsrMsg_ScoreLeaderboardData::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_ScoreLeaderboardData.data)
  _has_bits_[0] &= ~0x00000001u;
  ::ScoreLeaderboardData* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::ScoreLeaderboardData* CCSUsrMsg_ScoreLeaderboardData::_internal_mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::ScoreLeaderboardData>(GetArenaForAllocation());
    data_ = p;
  }
  return data_;
}
inline ::ScoreLeaderboardData* CCSUsrMsg_ScoreLeaderboardData::mutable_data() {
  ::ScoreLeaderboardData* _msg = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_ScoreLeaderboardData.data)
  return _msg;
}
inline void CCSUsrMsg_ScoreLeaderboardData::set_allocated_data(::ScoreLeaderboardData* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(data_);
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(data));
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_ScoreLeaderboardData.data)
}

// -------------------------------------------------------------------

// CCSUsrMsg_PlayerDecalDigitalSignature

// optional .PlayerDecalDigitalSignature data = 1;
inline bool CCSUsrMsg_PlayerDecalDigitalSignature::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || data_ != nullptr);
  return value;
}
inline bool CCSUsrMsg_PlayerDecalDigitalSignature::has_data() const {
  return _internal_has_data();
}
inline const ::PlayerDecalDigitalSignature& CCSUsrMsg_PlayerDecalDigitalSignature::_internal_data() const {
  const ::PlayerDecalDigitalSignature* p = data_;
  return p != nullptr ? *p : reinterpret_cast<const ::PlayerDecalDigitalSignature&>(
      ::_PlayerDecalDigitalSignature_default_instance_);
}
inline const ::PlayerDecalDigitalSignature& CCSUsrMsg_PlayerDecalDigitalSignature::data() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_PlayerDecalDigitalSignature.data)
  return _internal_data();
}
inline void CCSUsrMsg_PlayerDecalDigitalSignature::unsafe_arena_set_allocated_data(
    ::PlayerDecalDigitalSignature* data) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(data_);
  }
  data_ = data;
  if (data) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCSUsrMsg_PlayerDecalDigitalSignature.data)
}
inline ::PlayerDecalDigitalSignature* CCSUsrMsg_PlayerDecalDigitalSignature::release_data() {
  _has_bits_[0] &= ~0x00000001u;
  ::PlayerDecalDigitalSignature* temp = data_;
  data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PlayerDecalDigitalSignature* CCSUsrMsg_PlayerDecalDigitalSignature::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_PlayerDecalDigitalSignature.data)
  _has_bits_[0] &= ~0x00000001u;
  ::PlayerDecalDigitalSignature* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::PlayerDecalDigitalSignature* CCSUsrMsg_PlayerDecalDigitalSignature::_internal_mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::PlayerDecalDigitalSignature>(GetArenaForAllocation());
    data_ = p;
  }
  return data_;
}
inline ::PlayerDecalDigitalSignature* CCSUsrMsg_PlayerDecalDigitalSignature::mutable_data() {
  ::PlayerDecalDigitalSignature* _msg = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_PlayerDecalDigitalSignature.data)
  return _msg;
}
inline void CCSUsrMsg_PlayerDecalDigitalSignature::set_allocated_data(::PlayerDecalDigitalSignature* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(data_);
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(data));
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_PlayerDecalDigitalSignature.data)
}

// -------------------------------------------------------------------

// CCSUsrMsg_XRankGet

// optional int32 mode_idx = 1;
inline bool CCSUsrMsg_XRankGet::_internal_has_mode_idx() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_XRankGet::has_mode_idx() const {
  return _internal_has_mode_idx();
}
inline void CCSUsrMsg_XRankGet::clear_mode_idx() {
  mode_idx_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_XRankGet::_internal_mode_idx() const {
  return mode_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_XRankGet::mode_idx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_XRankGet.mode_idx)
  return _internal_mode_idx();
}
inline void CCSUsrMsg_XRankGet::_internal_set_mode_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  mode_idx_ = value;
}
inline void CCSUsrMsg_XRankGet::set_mode_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mode_idx(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_XRankGet.mode_idx)
}

// optional int32 controller = 2;
inline bool CCSUsrMsg_XRankGet::_internal_has_controller() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_XRankGet::has_controller() const {
  return _internal_has_controller();
}
inline void CCSUsrMsg_XRankGet::clear_controller() {
  controller_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_XRankGet::_internal_controller() const {
  return controller_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_XRankGet::controller() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_XRankGet.controller)
  return _internal_controller();
}
inline void CCSUsrMsg_XRankGet::_internal_set_controller(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  controller_ = value;
}
inline void CCSUsrMsg_XRankGet::set_controller(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_controller(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_XRankGet.controller)
}

// -------------------------------------------------------------------

// CCSUsrMsg_XRankUpd

// optional int32 mode_idx = 1;
inline bool CCSUsrMsg_XRankUpd::_internal_has_mode_idx() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_XRankUpd::has_mode_idx() const {
  return _internal_has_mode_idx();
}
inline void CCSUsrMsg_XRankUpd::clear_mode_idx() {
  mode_idx_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_XRankUpd::_internal_mode_idx() const {
  return mode_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_XRankUpd::mode_idx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_XRankUpd.mode_idx)
  return _internal_mode_idx();
}
inline void CCSUsrMsg_XRankUpd::_internal_set_mode_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  mode_idx_ = value;
}
inline void CCSUsrMsg_XRankUpd::set_mode_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mode_idx(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_XRankUpd.mode_idx)
}

// optional int32 controller = 2;
inline bool CCSUsrMsg_XRankUpd::_internal_has_controller() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_XRankUpd::has_controller() const {
  return _internal_has_controller();
}
inline void CCSUsrMsg_XRankUpd::clear_controller() {
  controller_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_XRankUpd::_internal_controller() const {
  return controller_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_XRankUpd::controller() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_XRankUpd.controller)
  return _internal_controller();
}
inline void CCSUsrMsg_XRankUpd::_internal_set_controller(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  controller_ = value;
}
inline void CCSUsrMsg_XRankUpd::set_controller(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_controller(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_XRankUpd.controller)
}

// optional int32 ranking = 3;
inline bool CCSUsrMsg_XRankUpd::_internal_has_ranking() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_XRankUpd::has_ranking() const {
  return _internal_has_ranking();
}
inline void CCSUsrMsg_XRankUpd::clear_ranking() {
  ranking_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_XRankUpd::_internal_ranking() const {
  return ranking_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_XRankUpd::ranking() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_XRankUpd.ranking)
  return _internal_ranking();
}
inline void CCSUsrMsg_XRankUpd::_internal_set_ranking(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  ranking_ = value;
}
inline void CCSUsrMsg_XRankUpd::set_ranking(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ranking(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_XRankUpd.ranking)
}

// -------------------------------------------------------------------

// CCSUsrMsg_CallVoteFailed

// optional int32 reason = 1;
inline bool CCSUsrMsg_CallVoteFailed::_internal_has_reason() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_CallVoteFailed::has_reason() const {
  return _internal_has_reason();
}
inline void CCSUsrMsg_CallVoteFailed::clear_reason() {
  reason_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_CallVoteFailed::_internal_reason() const {
  return reason_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_CallVoteFailed::reason() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CallVoteFailed.reason)
  return _internal_reason();
}
inline void CCSUsrMsg_CallVoteFailed::_internal_set_reason(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  reason_ = value;
}
inline void CCSUsrMsg_CallVoteFailed::set_reason(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_reason(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CallVoteFailed.reason)
}

// optional int32 time = 2;
inline bool CCSUsrMsg_CallVoteFailed::_internal_has_time() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_CallVoteFailed::has_time() const {
  return _internal_has_time();
}
inline void CCSUsrMsg_CallVoteFailed::clear_time() {
  time_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_CallVoteFailed::_internal_time() const {
  return time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_CallVoteFailed::time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CallVoteFailed.time)
  return _internal_time();
}
inline void CCSUsrMsg_CallVoteFailed::_internal_set_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  time_ = value;
}
inline void CCSUsrMsg_CallVoteFailed::set_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CallVoteFailed.time)
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoteStart

// optional int32 team = 1;
inline bool CCSUsrMsg_VoteStart::_internal_has_team() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCSUsrMsg_VoteStart::has_team() const {
  return _internal_has_team();
}
inline void CCSUsrMsg_VoteStart::clear_team() {
  team_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_VoteStart::_internal_team() const {
  return team_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_VoteStart::team() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.team)
  return _internal_team();
}
inline void CCSUsrMsg_VoteStart::_internal_set_team(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  team_ = value;
}
inline void CCSUsrMsg_VoteStart::set_team(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_team(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.team)
}

// optional int32 ent_idx = 2;
inline bool CCSUsrMsg_VoteStart::_internal_has_ent_idx() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCSUsrMsg_VoteStart::has_ent_idx() const {
  return _internal_has_ent_idx();
}
inline void CCSUsrMsg_VoteStart::clear_ent_idx() {
  ent_idx_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_VoteStart::_internal_ent_idx() const {
  return ent_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_VoteStart::ent_idx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.ent_idx)
  return _internal_ent_idx();
}
inline void CCSUsrMsg_VoteStart::_internal_set_ent_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ent_idx_ = value;
}
inline void CCSUsrMsg_VoteStart::set_ent_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ent_idx(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.ent_idx)
}

// optional int32 vote_type = 3;
inline bool CCSUsrMsg_VoteStart::_internal_has_vote_type() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCSUsrMsg_VoteStart::has_vote_type() const {
  return _internal_has_vote_type();
}
inline void CCSUsrMsg_VoteStart::clear_vote_type() {
  vote_type_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_VoteStart::_internal_vote_type() const {
  return vote_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_VoteStart::vote_type() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.vote_type)
  return _internal_vote_type();
}
inline void CCSUsrMsg_VoteStart::_internal_set_vote_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  vote_type_ = value;
}
inline void CCSUsrMsg_VoteStart::set_vote_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vote_type(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.vote_type)
}

// optional string disp_str = 4;
inline bool CCSUsrMsg_VoteStart::_internal_has_disp_str() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_VoteStart::has_disp_str() const {
  return _internal_has_disp_str();
}
inline void CCSUsrMsg_VoteStart::clear_disp_str() {
  disp_str_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCSUsrMsg_VoteStart::disp_str() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.disp_str)
  return _internal_disp_str();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_VoteStart::set_disp_str(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 disp_str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.disp_str)
}
inline std::string* CCSUsrMsg_VoteStart::mutable_disp_str() {
  std::string* _s = _internal_mutable_disp_str();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VoteStart.disp_str)
  return _s;
}
inline const std::string& CCSUsrMsg_VoteStart::_internal_disp_str() const {
  return disp_str_.Get();
}
inline void CCSUsrMsg_VoteStart::_internal_set_disp_str(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  disp_str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_VoteStart::_internal_mutable_disp_str() {
  _has_bits_[0] |= 0x00000001u;
  return disp_str_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_VoteStart::release_disp_str() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VoteStart.disp_str)
  if (!_internal_has_disp_str()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return disp_str_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_VoteStart::set_allocated_disp_str(std::string* disp_str) {
  if (disp_str != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  disp_str_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), disp_str,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VoteStart.disp_str)
}

// optional string details_str = 5;
inline bool CCSUsrMsg_VoteStart::_internal_has_details_str() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_VoteStart::has_details_str() const {
  return _internal_has_details_str();
}
inline void CCSUsrMsg_VoteStart::clear_details_str() {
  details_str_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CCSUsrMsg_VoteStart::details_str() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.details_str)
  return _internal_details_str();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_VoteStart::set_details_str(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 details_str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.details_str)
}
inline std::string* CCSUsrMsg_VoteStart::mutable_details_str() {
  std::string* _s = _internal_mutable_details_str();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VoteStart.details_str)
  return _s;
}
inline const std::string& CCSUsrMsg_VoteStart::_internal_details_str() const {
  return details_str_.Get();
}
inline void CCSUsrMsg_VoteStart::_internal_set_details_str(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  details_str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_VoteStart::_internal_mutable_details_str() {
  _has_bits_[0] |= 0x00000002u;
  return details_str_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_VoteStart::release_details_str() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VoteStart.details_str)
  if (!_internal_has_details_str()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return details_str_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_VoteStart::set_allocated_details_str(std::string* details_str) {
  if (details_str != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  details_str_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), details_str,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VoteStart.details_str)
}

// optional string other_team_str = 6;
inline bool CCSUsrMsg_VoteStart::_internal_has_other_team_str() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_VoteStart::has_other_team_str() const {
  return _internal_has_other_team_str();
}
inline void CCSUsrMsg_VoteStart::clear_other_team_str() {
  other_team_str_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CCSUsrMsg_VoteStart::other_team_str() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.other_team_str)
  return _internal_other_team_str();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_VoteStart::set_other_team_str(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000004u;
 other_team_str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.other_team_str)
}
inline std::string* CCSUsrMsg_VoteStart::mutable_other_team_str() {
  std::string* _s = _internal_mutable_other_team_str();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VoteStart.other_team_str)
  return _s;
}
inline const std::string& CCSUsrMsg_VoteStart::_internal_other_team_str() const {
  return other_team_str_.Get();
}
inline void CCSUsrMsg_VoteStart::_internal_set_other_team_str(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  other_team_str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_VoteStart::_internal_mutable_other_team_str() {
  _has_bits_[0] |= 0x00000004u;
  return other_team_str_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_VoteStart::release_other_team_str() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VoteStart.other_team_str)
  if (!_internal_has_other_team_str()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return other_team_str_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_VoteStart::set_allocated_other_team_str(std::string* other_team_str) {
  if (other_team_str != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  other_team_str_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), other_team_str,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VoteStart.other_team_str)
}

// optional bool is_yes_no_vote = 7;
inline bool CCSUsrMsg_VoteStart::_internal_has_is_yes_no_vote() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCSUsrMsg_VoteStart::has_is_yes_no_vote() const {
  return _internal_has_is_yes_no_vote();
}
inline void CCSUsrMsg_VoteStart::clear_is_yes_no_vote() {
  is_yes_no_vote_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CCSUsrMsg_VoteStart::_internal_is_yes_no_vote() const {
  return is_yes_no_vote_;
}
inline bool CCSUsrMsg_VoteStart::is_yes_no_vote() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.is_yes_no_vote)
  return _internal_is_yes_no_vote();
}
inline void CCSUsrMsg_VoteStart::_internal_set_is_yes_no_vote(bool value) {
  _has_bits_[0] |= 0x00000040u;
  is_yes_no_vote_ = value;
}
inline void CCSUsrMsg_VoteStart::set_is_yes_no_vote(bool value) {
  _internal_set_is_yes_no_vote(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.is_yes_no_vote)
}

// -------------------------------------------------------------------

// CCSUsrMsg_VotePass

// optional int32 team = 1;
inline bool CCSUsrMsg_VotePass::_internal_has_team() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_VotePass::has_team() const {
  return _internal_has_team();
}
inline void CCSUsrMsg_VotePass::clear_team() {
  team_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_VotePass::_internal_team() const {
  return team_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_VotePass::team() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VotePass.team)
  return _internal_team();
}
inline void CCSUsrMsg_VotePass::_internal_set_team(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  team_ = value;
}
inline void CCSUsrMsg_VotePass::set_team(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_team(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VotePass.team)
}

// optional int32 vote_type = 2;
inline bool CCSUsrMsg_VotePass::_internal_has_vote_type() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCSUsrMsg_VotePass::has_vote_type() const {
  return _internal_has_vote_type();
}
inline void CCSUsrMsg_VotePass::clear_vote_type() {
  vote_type_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_VotePass::_internal_vote_type() const {
  return vote_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_VotePass::vote_type() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VotePass.vote_type)
  return _internal_vote_type();
}
inline void CCSUsrMsg_VotePass::_internal_set_vote_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  vote_type_ = value;
}
inline void CCSUsrMsg_VotePass::set_vote_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vote_type(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VotePass.vote_type)
}

// optional string disp_str = 3;
inline bool CCSUsrMsg_VotePass::_internal_has_disp_str() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_VotePass::has_disp_str() const {
  return _internal_has_disp_str();
}
inline void CCSUsrMsg_VotePass::clear_disp_str() {
  disp_str_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCSUsrMsg_VotePass::disp_str() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VotePass.disp_str)
  return _internal_disp_str();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_VotePass::set_disp_str(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 disp_str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VotePass.disp_str)
}
inline std::string* CCSUsrMsg_VotePass::mutable_disp_str() {
  std::string* _s = _internal_mutable_disp_str();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VotePass.disp_str)
  return _s;
}
inline const std::string& CCSUsrMsg_VotePass::_internal_disp_str() const {
  return disp_str_.Get();
}
inline void CCSUsrMsg_VotePass::_internal_set_disp_str(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  disp_str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_VotePass::_internal_mutable_disp_str() {
  _has_bits_[0] |= 0x00000001u;
  return disp_str_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_VotePass::release_disp_str() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VotePass.disp_str)
  if (!_internal_has_disp_str()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return disp_str_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_VotePass::set_allocated_disp_str(std::string* disp_str) {
  if (disp_str != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  disp_str_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), disp_str,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VotePass.disp_str)
}

// optional string details_str = 4;
inline bool CCSUsrMsg_VotePass::_internal_has_details_str() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_VotePass::has_details_str() const {
  return _internal_has_details_str();
}
inline void CCSUsrMsg_VotePass::clear_details_str() {
  details_str_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CCSUsrMsg_VotePass::details_str() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VotePass.details_str)
  return _internal_details_str();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_VotePass::set_details_str(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 details_str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VotePass.details_str)
}
inline std::string* CCSUsrMsg_VotePass::mutable_details_str() {
  std::string* _s = _internal_mutable_details_str();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VotePass.details_str)
  return _s;
}
inline const std::string& CCSUsrMsg_VotePass::_internal_details_str() const {
  return details_str_.Get();
}
inline void CCSUsrMsg_VotePass::_internal_set_details_str(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  details_str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_VotePass::_internal_mutable_details_str() {
  _has_bits_[0] |= 0x00000002u;
  return details_str_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_VotePass::release_details_str() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VotePass.details_str)
  if (!_internal_has_details_str()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return details_str_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_VotePass::set_allocated_details_str(std::string* details_str) {
  if (details_str != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  details_str_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), details_str,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VotePass.details_str)
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoteFailed

// optional int32 team = 1;
inline bool CCSUsrMsg_VoteFailed::_internal_has_team() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_VoteFailed::has_team() const {
  return _internal_has_team();
}
inline void CCSUsrMsg_VoteFailed::clear_team() {
  team_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_VoteFailed::_internal_team() const {
  return team_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_VoteFailed::team() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteFailed.team)
  return _internal_team();
}
inline void CCSUsrMsg_VoteFailed::_internal_set_team(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  team_ = value;
}
inline void CCSUsrMsg_VoteFailed::set_team(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_team(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteFailed.team)
}

// optional int32 reason = 2;
inline bool CCSUsrMsg_VoteFailed::_internal_has_reason() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_VoteFailed::has_reason() const {
  return _internal_has_reason();
}
inline void CCSUsrMsg_VoteFailed::clear_reason() {
  reason_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_VoteFailed::_internal_reason() const {
  return reason_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_VoteFailed::reason() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteFailed.reason)
  return _internal_reason();
}
inline void CCSUsrMsg_VoteFailed::_internal_set_reason(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  reason_ = value;
}
inline void CCSUsrMsg_VoteFailed::set_reason(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_reason(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteFailed.reason)
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoteSetup

// repeated string potential_issues = 1;
inline int CCSUsrMsg_VoteSetup::_internal_potential_issues_size() const {
  return potential_issues_.size();
}
inline int CCSUsrMsg_VoteSetup::potential_issues_size() const {
  return _internal_potential_issues_size();
}
inline void CCSUsrMsg_VoteSetup::clear_potential_issues() {
  potential_issues_.Clear();
}
inline std::string* CCSUsrMsg_VoteSetup::add_potential_issues() {
  std::string* _s = _internal_add_potential_issues();
  // @@protoc_insertion_point(field_add_mutable:CCSUsrMsg_VoteSetup.potential_issues)
  return _s;
}
inline const std::string& CCSUsrMsg_VoteSetup::_internal_potential_issues(int index) const {
  return potential_issues_.Get(index);
}
inline const std::string& CCSUsrMsg_VoteSetup::potential_issues(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteSetup.potential_issues)
  return _internal_potential_issues(index);
}
inline std::string* CCSUsrMsg_VoteSetup::mutable_potential_issues(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VoteSetup.potential_issues)
  return potential_issues_.Mutable(index);
}
inline void CCSUsrMsg_VoteSetup::set_potential_issues(int index, const std::string& value) {
  potential_issues_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteSetup.potential_issues)
}
inline void CCSUsrMsg_VoteSetup::set_potential_issues(int index, std::string&& value) {
  potential_issues_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteSetup.potential_issues)
}
inline void CCSUsrMsg_VoteSetup::set_potential_issues(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  potential_issues_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_VoteSetup.potential_issues)
}
inline void CCSUsrMsg_VoteSetup::set_potential_issues(int index, const char* value, size_t size) {
  potential_issues_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_VoteSetup.potential_issues)
}
inline std::string* CCSUsrMsg_VoteSetup::_internal_add_potential_issues() {
  return potential_issues_.Add();
}
inline void CCSUsrMsg_VoteSetup::add_potential_issues(const std::string& value) {
  potential_issues_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CCSUsrMsg_VoteSetup.potential_issues)
}
inline void CCSUsrMsg_VoteSetup::add_potential_issues(std::string&& value) {
  potential_issues_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CCSUsrMsg_VoteSetup.potential_issues)
}
inline void CCSUsrMsg_VoteSetup::add_potential_issues(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  potential_issues_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CCSUsrMsg_VoteSetup.potential_issues)
}
inline void CCSUsrMsg_VoteSetup::add_potential_issues(const char* value, size_t size) {
  potential_issues_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CCSUsrMsg_VoteSetup.potential_issues)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CCSUsrMsg_VoteSetup::potential_issues() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_VoteSetup.potential_issues)
  return potential_issues_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CCSUsrMsg_VoteSetup::mutable_potential_issues() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_VoteSetup.potential_issues)
  return &potential_issues_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SendLastKillerDamageToClient

// optional int32 num_hits_given = 1;
inline bool CCSUsrMsg_SendLastKillerDamageToClient::_internal_has_num_hits_given() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_SendLastKillerDamageToClient::has_num_hits_given() const {
  return _internal_has_num_hits_given();
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_num_hits_given() {
  num_hits_given_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_SendLastKillerDamageToClient::_internal_num_hits_given() const {
  return num_hits_given_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_SendLastKillerDamageToClient::num_hits_given() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendLastKillerDamageToClient.num_hits_given)
  return _internal_num_hits_given();
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::_internal_set_num_hits_given(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  num_hits_given_ = value;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_num_hits_given(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_num_hits_given(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SendLastKillerDamageToClient.num_hits_given)
}

// optional int32 damage_given = 2;
inline bool CCSUsrMsg_SendLastKillerDamageToClient::_internal_has_damage_given() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_SendLastKillerDamageToClient::has_damage_given() const {
  return _internal_has_damage_given();
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_damage_given() {
  damage_given_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_SendLastKillerDamageToClient::_internal_damage_given() const {
  return damage_given_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_SendLastKillerDamageToClient::damage_given() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendLastKillerDamageToClient.damage_given)
  return _internal_damage_given();
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::_internal_set_damage_given(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  damage_given_ = value;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_damage_given(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_damage_given(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SendLastKillerDamageToClient.damage_given)
}

// optional int32 num_hits_taken = 3;
inline bool CCSUsrMsg_SendLastKillerDamageToClient::_internal_has_num_hits_taken() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_SendLastKillerDamageToClient::has_num_hits_taken() const {
  return _internal_has_num_hits_taken();
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_num_hits_taken() {
  num_hits_taken_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_SendLastKillerDamageToClient::_internal_num_hits_taken() const {
  return num_hits_taken_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_SendLastKillerDamageToClient::num_hits_taken() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendLastKillerDamageToClient.num_hits_taken)
  return _internal_num_hits_taken();
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::_internal_set_num_hits_taken(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  num_hits_taken_ = value;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_num_hits_taken(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_num_hits_taken(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SendLastKillerDamageToClient.num_hits_taken)
}

// optional int32 damage_taken = 4;
inline bool CCSUsrMsg_SendLastKillerDamageToClient::_internal_has_damage_taken() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCSUsrMsg_SendLastKillerDamageToClient::has_damage_taken() const {
  return _internal_has_damage_taken();
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_damage_taken() {
  damage_taken_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_SendLastKillerDamageToClient::_internal_damage_taken() const {
  return damage_taken_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_SendLastKillerDamageToClient::damage_taken() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendLastKillerDamageToClient.damage_taken)
  return _internal_damage_taken();
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::_internal_set_damage_taken(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  damage_taken_ = value;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_damage_taken(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_damage_taken(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SendLastKillerDamageToClient.damage_taken)
}

// -------------------------------------------------------------------

// CCSUsrMsg_ServerRankUpdate_RankUpdate

// optional int32 account_id = 1;
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_account_id() const {
  return _internal_has_account_id();
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_account_id() {
  account_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::_internal_account_id() const {
  return account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::account_id() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ServerRankUpdate.RankUpdate.account_id)
  return _internal_account_id();
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::_internal_set_account_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_account_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ServerRankUpdate.RankUpdate.account_id)
}

// optional int32 rank_old = 2;
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::_internal_has_rank_old() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_rank_old() const {
  return _internal_has_rank_old();
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_rank_old() {
  rank_old_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::_internal_rank_old() const {
  return rank_old_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::rank_old() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ServerRankUpdate.RankUpdate.rank_old)
  return _internal_rank_old();
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::_internal_set_rank_old(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  rank_old_ = value;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_rank_old(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_rank_old(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ServerRankUpdate.RankUpdate.rank_old)
}

// optional int32 rank_new = 3;
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::_internal_has_rank_new() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_rank_new() const {
  return _internal_has_rank_new();
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_rank_new() {
  rank_new_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::_internal_rank_new() const {
  return rank_new_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::rank_new() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ServerRankUpdate.RankUpdate.rank_new)
  return _internal_rank_new();
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::_internal_set_rank_new(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  rank_new_ = value;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_rank_new(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_rank_new(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ServerRankUpdate.RankUpdate.rank_new)
}

// optional int32 num_wins = 4;
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::_internal_has_num_wins() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_num_wins() const {
  return _internal_has_num_wins();
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_num_wins() {
  num_wins_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::_internal_num_wins() const {
  return num_wins_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::num_wins() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ServerRankUpdate.RankUpdate.num_wins)
  return _internal_num_wins();
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::_internal_set_num_wins(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  num_wins_ = value;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_num_wins(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_num_wins(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ServerRankUpdate.RankUpdate.num_wins)
}

// optional float rank_change = 5;
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::_internal_has_rank_change() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_rank_change() const {
  return _internal_has_rank_change();
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_rank_change() {
  rank_change_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float CCSUsrMsg_ServerRankUpdate_RankUpdate::_internal_rank_change() const {
  return rank_change_;
}
inline float CCSUsrMsg_ServerRankUpdate_RankUpdate::rank_change() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ServerRankUpdate.RankUpdate.rank_change)
  return _internal_rank_change();
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::_internal_set_rank_change(float value) {
  _has_bits_[0] |= 0x00000010u;
  rank_change_ = value;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_rank_change(float value) {
  _internal_set_rank_change(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ServerRankUpdate.RankUpdate.rank_change)
}

// -------------------------------------------------------------------

// CCSUsrMsg_ServerRankUpdate

// repeated .CCSUsrMsg_ServerRankUpdate.RankUpdate rank_update = 1;
inline int CCSUsrMsg_ServerRankUpdate::_internal_rank_update_size() const {
  return rank_update_.size();
}
inline int CCSUsrMsg_ServerRankUpdate::rank_update_size() const {
  return _internal_rank_update_size();
}
inline void CCSUsrMsg_ServerRankUpdate::clear_rank_update() {
  rank_update_.Clear();
}
inline ::CCSUsrMsg_ServerRankUpdate_RankUpdate* CCSUsrMsg_ServerRankUpdate::mutable_rank_update(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_ServerRankUpdate.rank_update)
  return rank_update_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_ServerRankUpdate_RankUpdate >*
CCSUsrMsg_ServerRankUpdate::mutable_rank_update() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_ServerRankUpdate.rank_update)
  return &rank_update_;
}
inline const ::CCSUsrMsg_ServerRankUpdate_RankUpdate& CCSUsrMsg_ServerRankUpdate::_internal_rank_update(int index) const {
  return rank_update_.Get(index);
}
inline const ::CCSUsrMsg_ServerRankUpdate_RankUpdate& CCSUsrMsg_ServerRankUpdate::rank_update(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ServerRankUpdate.rank_update)
  return _internal_rank_update(index);
}
inline ::CCSUsrMsg_ServerRankUpdate_RankUpdate* CCSUsrMsg_ServerRankUpdate::_internal_add_rank_update() {
  return rank_update_.Add();
}
inline ::CCSUsrMsg_ServerRankUpdate_RankUpdate* CCSUsrMsg_ServerRankUpdate::add_rank_update() {
  ::CCSUsrMsg_ServerRankUpdate_RankUpdate* _add = _internal_add_rank_update();
  // @@protoc_insertion_point(field_add:CCSUsrMsg_ServerRankUpdate.rank_update)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCSUsrMsg_ServerRankUpdate_RankUpdate >&
CCSUsrMsg_ServerRankUpdate::rank_update() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_ServerRankUpdate.rank_update)
  return rank_update_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_XpUpdate

// optional .CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded data = 1;
inline bool CCSUsrMsg_XpUpdate::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || data_ != nullptr);
  return value;
}
inline bool CCSUsrMsg_XpUpdate::has_data() const {
  return _internal_has_data();
}
inline const ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& CCSUsrMsg_XpUpdate::_internal_data() const {
  const ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* p = data_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded&>(
      ::_CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_default_instance_);
}
inline const ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& CCSUsrMsg_XpUpdate::data() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_XpUpdate.data)
  return _internal_data();
}
inline void CCSUsrMsg_XpUpdate::unsafe_arena_set_allocated_data(
    ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* data) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(data_);
  }
  data_ = data;
  if (data) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCSUsrMsg_XpUpdate.data)
}
inline ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* CCSUsrMsg_XpUpdate::release_data() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* temp = data_;
  data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* CCSUsrMsg_XpUpdate::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_XpUpdate.data)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* CCSUsrMsg_XpUpdate::_internal_mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded>(GetArenaForAllocation());
    data_ = p;
  }
  return data_;
}
inline ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* CCSUsrMsg_XpUpdate::mutable_data() {
  ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* _msg = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_XpUpdate.data)
  return _msg;
}
inline void CCSUsrMsg_XpUpdate::set_allocated_data(::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(data_);
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(data));
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_XpUpdate.data)
}

// -------------------------------------------------------------------

// CCSUsrMsg_ItemPickup

// optional string item = 1;
inline bool CCSUsrMsg_ItemPickup::_internal_has_item() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_ItemPickup::has_item() const {
  return _internal_has_item();
}
inline void CCSUsrMsg_ItemPickup::clear_item() {
  item_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCSUsrMsg_ItemPickup::item() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ItemPickup.item)
  return _internal_item();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_ItemPickup::set_item(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 item_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ItemPickup.item)
}
inline std::string* CCSUsrMsg_ItemPickup::mutable_item() {
  std::string* _s = _internal_mutable_item();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_ItemPickup.item)
  return _s;
}
inline const std::string& CCSUsrMsg_ItemPickup::_internal_item() const {
  return item_.Get();
}
inline void CCSUsrMsg_ItemPickup::_internal_set_item(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  item_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_ItemPickup::_internal_mutable_item() {
  _has_bits_[0] |= 0x00000001u;
  return item_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_ItemPickup::release_item() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_ItemPickup.item)
  if (!_internal_has_item()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return item_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_ItemPickup::set_allocated_item(std::string* item) {
  if (item != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  item_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), item,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_ItemPickup.item)
}

// -------------------------------------------------------------------

// CCSUsrMsg_ShowMenu

// optional int32 bits_valid_slots = 1;
inline bool CCSUsrMsg_ShowMenu::_internal_has_bits_valid_slots() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_ShowMenu::has_bits_valid_slots() const {
  return _internal_has_bits_valid_slots();
}
inline void CCSUsrMsg_ShowMenu::clear_bits_valid_slots() {
  bits_valid_slots_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ShowMenu::_internal_bits_valid_slots() const {
  return bits_valid_slots_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ShowMenu::bits_valid_slots() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ShowMenu.bits_valid_slots)
  return _internal_bits_valid_slots();
}
inline void CCSUsrMsg_ShowMenu::_internal_set_bits_valid_slots(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  bits_valid_slots_ = value;
}
inline void CCSUsrMsg_ShowMenu::set_bits_valid_slots(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bits_valid_slots(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ShowMenu.bits_valid_slots)
}

// optional int32 display_time = 2;
inline bool CCSUsrMsg_ShowMenu::_internal_has_display_time() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_ShowMenu::has_display_time() const {
  return _internal_has_display_time();
}
inline void CCSUsrMsg_ShowMenu::clear_display_time() {
  display_time_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ShowMenu::_internal_display_time() const {
  return display_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ShowMenu::display_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ShowMenu.display_time)
  return _internal_display_time();
}
inline void CCSUsrMsg_ShowMenu::_internal_set_display_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  display_time_ = value;
}
inline void CCSUsrMsg_ShowMenu::set_display_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_display_time(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ShowMenu.display_time)
}

// optional string menu_string = 3;
inline bool CCSUsrMsg_ShowMenu::_internal_has_menu_string() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_ShowMenu::has_menu_string() const {
  return _internal_has_menu_string();
}
inline void CCSUsrMsg_ShowMenu::clear_menu_string() {
  menu_string_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCSUsrMsg_ShowMenu::menu_string() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ShowMenu.menu_string)
  return _internal_menu_string();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_ShowMenu::set_menu_string(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 menu_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ShowMenu.menu_string)
}
inline std::string* CCSUsrMsg_ShowMenu::mutable_menu_string() {
  std::string* _s = _internal_mutable_menu_string();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_ShowMenu.menu_string)
  return _s;
}
inline const std::string& CCSUsrMsg_ShowMenu::_internal_menu_string() const {
  return menu_string_.Get();
}
inline void CCSUsrMsg_ShowMenu::_internal_set_menu_string(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  menu_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_ShowMenu::_internal_mutable_menu_string() {
  _has_bits_[0] |= 0x00000001u;
  return menu_string_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_ShowMenu::release_menu_string() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_ShowMenu.menu_string)
  if (!_internal_has_menu_string()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return menu_string_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_ShowMenu::set_allocated_menu_string(std::string* menu_string) {
  if (menu_string != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  menu_string_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), menu_string,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_ShowMenu.menu_string)
}

// -------------------------------------------------------------------

// CCSUsrMsg_BarTime

// optional string time = 1;
inline bool CCSUsrMsg_BarTime::_internal_has_time() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_BarTime::has_time() const {
  return _internal_has_time();
}
inline void CCSUsrMsg_BarTime::clear_time() {
  time_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCSUsrMsg_BarTime::time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_BarTime.time)
  return _internal_time();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_BarTime::set_time(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_BarTime.time)
}
inline std::string* CCSUsrMsg_BarTime::mutable_time() {
  std::string* _s = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_BarTime.time)
  return _s;
}
inline const std::string& CCSUsrMsg_BarTime::_internal_time() const {
  return time_.Get();
}
inline void CCSUsrMsg_BarTime::_internal_set_time(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_BarTime::_internal_mutable_time() {
  _has_bits_[0] |= 0x00000001u;
  return time_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_BarTime::release_time() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_BarTime.time)
  if (!_internal_has_time()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return time_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_BarTime::set_allocated_time(std::string* time) {
  if (time != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  time_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), time,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_BarTime.time)
}

// -------------------------------------------------------------------

// CCSUsrMsg_AmmoDenied

// optional int32 ammoIdx = 1;
inline bool CCSUsrMsg_AmmoDenied::_internal_has_ammoidx() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_AmmoDenied::has_ammoidx() const {
  return _internal_has_ammoidx();
}
inline void CCSUsrMsg_AmmoDenied::clear_ammoidx() {
  ammoidx_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_AmmoDenied::_internal_ammoidx() const {
  return ammoidx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_AmmoDenied::ammoidx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_AmmoDenied.ammoIdx)
  return _internal_ammoidx();
}
inline void CCSUsrMsg_AmmoDenied::_internal_set_ammoidx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  ammoidx_ = value;
}
inline void CCSUsrMsg_AmmoDenied::set_ammoidx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ammoidx(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_AmmoDenied.ammoIdx)
}

// -------------------------------------------------------------------

// CCSUsrMsg_MarkAchievement

// optional string achievement = 1;
inline bool CCSUsrMsg_MarkAchievement::_internal_has_achievement() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_MarkAchievement::has_achievement() const {
  return _internal_has_achievement();
}
inline void CCSUsrMsg_MarkAchievement::clear_achievement() {
  achievement_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCSUsrMsg_MarkAchievement::achievement() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_MarkAchievement.achievement)
  return _internal_achievement();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_MarkAchievement::set_achievement(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 achievement_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_MarkAchievement.achievement)
}
inline std::string* CCSUsrMsg_MarkAchievement::mutable_achievement() {
  std::string* _s = _internal_mutable_achievement();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_MarkAchievement.achievement)
  return _s;
}
inline const std::string& CCSUsrMsg_MarkAchievement::_internal_achievement() const {
  return achievement_.Get();
}
inline void CCSUsrMsg_MarkAchievement::_internal_set_achievement(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  achievement_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_MarkAchievement::_internal_mutable_achievement() {
  _has_bits_[0] |= 0x00000001u;
  return achievement_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_MarkAchievement::release_achievement() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_MarkAchievement.achievement)
  if (!_internal_has_achievement()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return achievement_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_MarkAchievement::set_allocated_achievement(std::string* achievement) {
  if (achievement != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  achievement_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), achievement,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_MarkAchievement.achievement)
}

// -------------------------------------------------------------------

// CCSUsrMsg_MatchStatsUpdate

// optional string update = 1;
inline bool CCSUsrMsg_MatchStatsUpdate::_internal_has_update() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_MatchStatsUpdate::has_update() const {
  return _internal_has_update();
}
inline void CCSUsrMsg_MatchStatsUpdate::clear_update() {
  update_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCSUsrMsg_MatchStatsUpdate::update() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_MatchStatsUpdate.update)
  return _internal_update();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_MatchStatsUpdate::set_update(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 update_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_MatchStatsUpdate.update)
}
inline std::string* CCSUsrMsg_MatchStatsUpdate::mutable_update() {
  std::string* _s = _internal_mutable_update();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_MatchStatsUpdate.update)
  return _s;
}
inline const std::string& CCSUsrMsg_MatchStatsUpdate::_internal_update() const {
  return update_.Get();
}
inline void CCSUsrMsg_MatchStatsUpdate::_internal_set_update(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  update_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_MatchStatsUpdate::_internal_mutable_update() {
  _has_bits_[0] |= 0x00000001u;
  return update_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_MatchStatsUpdate::release_update() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_MatchStatsUpdate.update)
  if (!_internal_has_update()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return update_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_MatchStatsUpdate::set_allocated_update(std::string* update) {
  if (update != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  update_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), update,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_MatchStatsUpdate.update)
}

// -------------------------------------------------------------------

// CCSUsrMsg_ItemDrop

// optional int64 itemid = 1;
inline bool CCSUsrMsg_ItemDrop::_internal_has_itemid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_ItemDrop::has_itemid() const {
  return _internal_has_itemid();
}
inline void CCSUsrMsg_ItemDrop::clear_itemid() {
  itemid_ = int64_t{0};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CCSUsrMsg_ItemDrop::_internal_itemid() const {
  return itemid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CCSUsrMsg_ItemDrop::itemid() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ItemDrop.itemid)
  return _internal_itemid();
}
inline void CCSUsrMsg_ItemDrop::_internal_set_itemid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  itemid_ = value;
}
inline void CCSUsrMsg_ItemDrop::set_itemid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_itemid(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ItemDrop.itemid)
}

// optional bool death = 2;
inline bool CCSUsrMsg_ItemDrop::_internal_has_death() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_ItemDrop::has_death() const {
  return _internal_has_death();
}
inline void CCSUsrMsg_ItemDrop::clear_death() {
  death_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CCSUsrMsg_ItemDrop::_internal_death() const {
  return death_;
}
inline bool CCSUsrMsg_ItemDrop::death() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ItemDrop.death)
  return _internal_death();
}
inline void CCSUsrMsg_ItemDrop::_internal_set_death(bool value) {
  _has_bits_[0] |= 0x00000002u;
  death_ = value;
}
inline void CCSUsrMsg_ItemDrop::set_death(bool value) {
  _internal_set_death(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ItemDrop.death)
}

// -------------------------------------------------------------------

// CCSUsrMsg_GlowPropTurnOff

// optional int32 entidx = 1;
inline bool CCSUsrMsg_GlowPropTurnOff::_internal_has_entidx() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_GlowPropTurnOff::has_entidx() const {
  return _internal_has_entidx();
}
inline void CCSUsrMsg_GlowPropTurnOff::clear_entidx() {
  entidx_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_GlowPropTurnOff::_internal_entidx() const {
  return entidx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_GlowPropTurnOff::entidx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_GlowPropTurnOff.entidx)
  return _internal_entidx();
}
inline void CCSUsrMsg_GlowPropTurnOff::_internal_set_entidx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  entidx_ = value;
}
inline void CCSUsrMsg_GlowPropTurnOff::set_entidx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entidx(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_GlowPropTurnOff.entidx)
}

// -------------------------------------------------------------------

// CCSUsrMsg_RoundBackupFilenames

// optional int32 count = 1;
inline bool CCSUsrMsg_RoundBackupFilenames::_internal_has_count() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCSUsrMsg_RoundBackupFilenames::has_count() const {
  return _internal_has_count();
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_count() {
  count_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_RoundBackupFilenames::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_RoundBackupFilenames::count() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RoundBackupFilenames.count)
  return _internal_count();
}
inline void CCSUsrMsg_RoundBackupFilenames::_internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  count_ = value;
}
inline void CCSUsrMsg_RoundBackupFilenames::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RoundBackupFilenames.count)
}

// optional int32 index = 2;
inline bool CCSUsrMsg_RoundBackupFilenames::_internal_has_index() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCSUsrMsg_RoundBackupFilenames::has_index() const {
  return _internal_has_index();
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_index() {
  index_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_RoundBackupFilenames::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_RoundBackupFilenames::index() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RoundBackupFilenames.index)
  return _internal_index();
}
inline void CCSUsrMsg_RoundBackupFilenames::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  index_ = value;
}
inline void CCSUsrMsg_RoundBackupFilenames::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RoundBackupFilenames.index)
}

// optional string filename = 3;
inline bool CCSUsrMsg_RoundBackupFilenames::_internal_has_filename() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_RoundBackupFilenames::has_filename() const {
  return _internal_has_filename();
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_filename() {
  filename_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCSUsrMsg_RoundBackupFilenames::filename() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RoundBackupFilenames.filename)
  return _internal_filename();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_RoundBackupFilenames::set_filename(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RoundBackupFilenames.filename)
}
inline std::string* CCSUsrMsg_RoundBackupFilenames::mutable_filename() {
  std::string* _s = _internal_mutable_filename();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_RoundBackupFilenames.filename)
  return _s;
}
inline const std::string& CCSUsrMsg_RoundBackupFilenames::_internal_filename() const {
  return filename_.Get();
}
inline void CCSUsrMsg_RoundBackupFilenames::_internal_set_filename(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_RoundBackupFilenames::_internal_mutable_filename() {
  _has_bits_[0] |= 0x00000001u;
  return filename_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_RoundBackupFilenames::release_filename() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_RoundBackupFilenames.filename)
  if (!_internal_has_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return filename_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_RoundBackupFilenames::set_allocated_filename(std::string* filename) {
  if (filename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  filename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), filename,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_RoundBackupFilenames.filename)
}

// optional string nicename = 4;
inline bool CCSUsrMsg_RoundBackupFilenames::_internal_has_nicename() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCSUsrMsg_RoundBackupFilenames::has_nicename() const {
  return _internal_has_nicename();
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_nicename() {
  nicename_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CCSUsrMsg_RoundBackupFilenames::nicename() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RoundBackupFilenames.nicename)
  return _internal_nicename();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCSUsrMsg_RoundBackupFilenames::set_nicename(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 nicename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RoundBackupFilenames.nicename)
}
inline std::string* CCSUsrMsg_RoundBackupFilenames::mutable_nicename() {
  std::string* _s = _internal_mutable_nicename();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_RoundBackupFilenames.nicename)
  return _s;
}
inline const std::string& CCSUsrMsg_RoundBackupFilenames::_internal_nicename() const {
  return nicename_.Get();
}
inline void CCSUsrMsg_RoundBackupFilenames::_internal_set_nicename(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  nicename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_RoundBackupFilenames::_internal_mutable_nicename() {
  _has_bits_[0] |= 0x00000002u;
  return nicename_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CCSUsrMsg_RoundBackupFilenames::release_nicename() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_RoundBackupFilenames.nicename)
  if (!_internal_has_nicename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return nicename_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CCSUsrMsg_RoundBackupFilenames::set_allocated_nicename(std::string* nicename) {
  if (nicename != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  nicename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nicename,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_RoundBackupFilenames.nicename)
}

// -------------------------------------------------------------------

// CCSUsrMsg_ResetHud

// optional bool reset = 1;
inline bool CCSUsrMsg_ResetHud::_internal_has_reset() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_ResetHud::has_reset() const {
  return _internal_has_reset();
}
inline void CCSUsrMsg_ResetHud::clear_reset() {
  reset_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CCSUsrMsg_ResetHud::_internal_reset() const {
  return reset_;
}
inline bool CCSUsrMsg_ResetHud::reset() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ResetHud.reset)
  return _internal_reset();
}
inline void CCSUsrMsg_ResetHud::_internal_set_reset(bool value) {
  _has_bits_[0] |= 0x00000001u;
  reset_ = value;
}
inline void CCSUsrMsg_ResetHud::set_reset(bool value) {
  _internal_set_reset(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ResetHud.reset)
}

// -------------------------------------------------------------------

// CCSUsrMsg_GameTitle

// optional int32 dummy = 1;
inline bool CCSUsrMsg_GameTitle::_internal_has_dummy() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_GameTitle::has_dummy() const {
  return _internal_has_dummy();
}
inline void CCSUsrMsg_GameTitle::clear_dummy() {
  dummy_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_GameTitle::_internal_dummy() const {
  return dummy_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_GameTitle::dummy() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_GameTitle.dummy)
  return _internal_dummy();
}
inline void CCSUsrMsg_GameTitle::_internal_set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  dummy_ = value;
}
inline void CCSUsrMsg_GameTitle::set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_dummy(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_GameTitle.dummy)
}

// -------------------------------------------------------------------

// CCSUsrMsg_RequestState

// optional int32 dummy = 1;
inline bool CCSUsrMsg_RequestState::_internal_has_dummy() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_RequestState::has_dummy() const {
  return _internal_has_dummy();
}
inline void CCSUsrMsg_RequestState::clear_dummy() {
  dummy_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_RequestState::_internal_dummy() const {
  return dummy_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_RequestState::dummy() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RequestState.dummy)
  return _internal_dummy();
}
inline void CCSUsrMsg_RequestState::_internal_set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  dummy_ = value;
}
inline void CCSUsrMsg_RequestState::set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_dummy(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RequestState.dummy)
}

// -------------------------------------------------------------------

// CCSUsrMsg_StopSpectatorMode

// optional int32 dummy = 1;
inline bool CCSUsrMsg_StopSpectatorMode::_internal_has_dummy() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_StopSpectatorMode::has_dummy() const {
  return _internal_has_dummy();
}
inline void CCSUsrMsg_StopSpectatorMode::clear_dummy() {
  dummy_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_StopSpectatorMode::_internal_dummy() const {
  return dummy_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_StopSpectatorMode::dummy() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_StopSpectatorMode.dummy)
  return _internal_dummy();
}
inline void CCSUsrMsg_StopSpectatorMode::_internal_set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  dummy_ = value;
}
inline void CCSUsrMsg_StopSpectatorMode::set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_dummy(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_StopSpectatorMode.dummy)
}

// -------------------------------------------------------------------

// CCSUsrMsg_DisconnectToLobby

// optional int32 dummy = 1;
inline bool CCSUsrMsg_DisconnectToLobby::_internal_has_dummy() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_DisconnectToLobby::has_dummy() const {
  return _internal_has_dummy();
}
inline void CCSUsrMsg_DisconnectToLobby::clear_dummy() {
  dummy_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_DisconnectToLobby::_internal_dummy() const {
  return dummy_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_DisconnectToLobby::dummy() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DisconnectToLobby.dummy)
  return _internal_dummy();
}
inline void CCSUsrMsg_DisconnectToLobby::_internal_set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  dummy_ = value;
}
inline void CCSUsrMsg_DisconnectToLobby::set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_dummy(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DisconnectToLobby.dummy)
}

// -------------------------------------------------------------------

// CCSUsrMsg_WarmupHasEnded

// optional int32 dummy = 1;
inline bool CCSUsrMsg_WarmupHasEnded::_internal_has_dummy() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_WarmupHasEnded::has_dummy() const {
  return _internal_has_dummy();
}
inline void CCSUsrMsg_WarmupHasEnded::clear_dummy() {
  dummy_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_WarmupHasEnded::_internal_dummy() const {
  return dummy_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_WarmupHasEnded::dummy() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_WarmupHasEnded.dummy)
  return _internal_dummy();
}
inline void CCSUsrMsg_WarmupHasEnded::_internal_set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  dummy_ = value;
}
inline void CCSUsrMsg_WarmupHasEnded::set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_dummy(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_WarmupHasEnded.dummy)
}

// -------------------------------------------------------------------

// CCSUsrMsg_ClientInfo

// optional int32 dummy = 1;
inline bool CCSUsrMsg_ClientInfo::_internal_has_dummy() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_ClientInfo::has_dummy() const {
  return _internal_has_dummy();
}
inline void CCSUsrMsg_ClientInfo::clear_dummy() {
  dummy_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ClientInfo::_internal_dummy() const {
  return dummy_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ClientInfo::dummy() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ClientInfo.dummy)
  return _internal_dummy();
}
inline void CCSUsrMsg_ClientInfo::_internal_set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  dummy_ = value;
}
inline void CCSUsrMsg_ClientInfo::set_dummy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_dummy(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ClientInfo.dummy)
}

// -------------------------------------------------------------------

// CCSUsrMsg_ServerRankRevealAll

// optional int32 seconds_till_shutdown = 1;
inline bool CCSUsrMsg_ServerRankRevealAll::_internal_has_seconds_till_shutdown() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCSUsrMsg_ServerRankRevealAll::has_seconds_till_shutdown() const {
  return _internal_has_seconds_till_shutdown();
}
inline void CCSUsrMsg_ServerRankRevealAll::clear_seconds_till_shutdown() {
  seconds_till_shutdown_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ServerRankRevealAll::_internal_seconds_till_shutdown() const {
  return seconds_till_shutdown_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCSUsrMsg_ServerRankRevealAll::seconds_till_shutdown() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ServerRankRevealAll.seconds_till_shutdown)
  return _internal_seconds_till_shutdown();
}
inline void CCSUsrMsg_ServerRankRevealAll::_internal_set_seconds_till_shutdown(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  seconds_till_shutdown_ = value;
}
inline void CCSUsrMsg_ServerRankRevealAll::set_seconds_till_shutdown(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_seconds_till_shutdown(value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ServerRankRevealAll.seconds_till_shutdown)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::ECstrike15UserMessages> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECstrike15UserMessages>() {
  return ::ECstrike15UserMessages_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_cstrike15_5fusermessages_2eproto
