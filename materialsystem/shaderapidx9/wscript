#!/usr/bin/env python

def options(opt):
	return

def configure(conf):
	conf.env.append_unique('DEFINES', ['SHADERAPIDX9', 'SHADER_DLL_EXPORT'])
	if conf.env.DEST_OS == 'win32':
		conf.env.append_unique('DEFINES', ['strncpy=use_Q_strncpy_instead', '_snprintf=use_Q_snprintf_instead'])

def build(bld):
	source = [
		'colorformatdx8.cpp',
		'd3d_async.cpp',								
		'hardwareconfig.cpp',
		'meshbase.cpp',
		'meshdx8.cpp',
		'shaderapidx8.cpp',
		'shaderdevicebase.cpp',
		'shaderapibase.cpp',
		'shaderdevicedx8.cpp',
		'shadershadowdx8.cpp',
		'texturedx8.cpp',
		'TransitionTable.cpp',
		'cvballoctracker.cpp',
		'vertexdecl.cpp',
		'vertexshaderdx8.cpp',
		'winutils.cpp',
		'../../public/tier0/memoverride.cpp'
	]

	if bld.env.DEST_OS == 'win32' and bld.env.TOGL:
		source += [
			'recording.cpp',
			'wmi.cpp'
		]

	if bld.env.DEST_OS != 'darwin':
		source += ['../../public/filesystem_helpers.cpp']

	includes = [
		'..',
		'../../public',
		'../../public/tier0',
		'../../public/tier1',
		'../../common'
	]

	libs = [
		'tier0',
		'bitmap',
		'tier1',
		'tier2',
		'interfaces',
		'vstdlib',
		'videocfg',
		'mathlib',
		'vtf',
		'togl',
		'bzip2'
	]

	bld.shlib(
		target = 'shaderapidx9',
		features = 'c cxx',
		source = source,
		includes = includes,
		use = libs,
		install_path = bld.env.LIBDIR,
		subsystem = bld.env.MSVC_SUBSYSTEM
	)
